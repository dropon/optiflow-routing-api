openapi: 3.0.1
info:
  contact:
    url: https://developer.myptv.com/
  description: "With the Routing service you can calculate routes from A to B taking\
    \ into account vehicle-specific restrictions, traffic situations, toll, emissions,\
    \ drivers' working hours, service times and opening intervals."
  title: Routing
  version: "1.36"
servers:
- url: https://api.myptv.com/routing/v1
security:
- apiKeyAuth: []
tags:
- name: Routing
- name: Reachable Areas
- name: Reachable Locations
paths:
  /routes:
    get:
      description: Calculates a route by specifying a list of waypoints.
      operationId: calculateRoute
      parameters:
      - description: "The list of waypoints the route will be calculated for. At least\
          \ two waypoints are necessary, a maximum number may apply according to your\
          \ subscription.\nThe first waypoint is the start and the last is the destination\
          \ of the route.\nAdditional intermediate waypoints are possible.  \nThe\
          \ format of each waypoint is `<lat>,<lon>[;<attribute>;<attribute>;...]`\n\
          representing a point with the latitude value in degrees from south to north\n\
          and the longitude value in degrees (WGS84/EPSG:4326) from west to east.\n\
          This point will be matched to the nearest possible road.  \nBy default the\
          \ air-line connection between given and matched coordinates is not included\
          \ in the route polyline, distance and duration.\nWe will refer to this type\
          \ of waypoint as an _on-road waypoint_.\n\nThe behaviour of a waypoint can\
          \ be changed by appending the following attributes:  \n * `includeLastMeters`\
          \ to include the air-line connection between given and matched coordinates\
          \ in the route polyline, distance and duration.\n We will refer to this\
          \ type of waypoint as an _off-road waypoint_.\n * `roadAccess=<lat>,<lon>`,\
          \ to use these coordinates for matching to the nearest road. Implies **includeLastMeters**,\
          \ i.e.\n the air-line connection between the waypoint coordinates and the\
          \ matched coordinates\n is included in the route polyline, distance and\
          \ duration. This is useful if the waypoint should not be matched to the\
          \ nearest possible road but to some road further away,\n e.g. garage exit\
          \ at a different road.\n * `matchSideOfStreet`, specifies that this waypoint\
          \ will be reached at the side of street on which it is located.\n This is\
          \ useful to prevent the driver from crossing the street to actually reach\
          \ the location represented by this waypoint.\n * `radius=<distance>`, influences\
          \ the route course, so that the route passes an area defined by the given\
          \ radius [m] (integer value).\n This waypoint will not appear as a waypoint\
          \ event in the response and may not be used as start and destination.\n\
          \ `radius` must be > 0 and is not compatible with any other attribute on\
          \ the same waypoint except for `name`.\n We will refer to this type of waypoint\
          \ as a _route-manipulation waypoint_.\n * `name=<name of waypoint>`, is\
          \ an identifier to reference this waypoint in the response.\n * In order\
          \ to influence the route course so that the route uses a specific ferry\
          \ or railway connection between two locations the waypoint is formatted\
          \ as follows:\n `combinedTransport=<lat>,<lon>,<lat>,<lon>`. Both locations\
          \ will be matched to the nearest ports looking for a direct connection.\n\
          \ If no connection can be found, this waypoint will be ignored, and the\
          \ warning _ROUTING_COMBINED_TRANSPORT_WAYPOINT_IGNORED_ will be returned.\n\
          \ If more than one connection is found, the best one will be used,\n and\
          \ the alternative connections will be returned in the response in a warning\
          \ _ROUTING_COMBINED_TRANSPORT_WAYPOINT_AMBIGUOUS_.\n This waypoint will\
          \ not appear as a waypoint event in the response and may not be used as\
          \ start or destination.\n We will refer to this type of waypoint as a _combined-transport\
          \ waypoint_.\n\n See [here](./concepts/waypoints) for more information."
        example:
        - "49.01318,8.4279;name=Start "
        - "49.01835,8.36881;includeLastMeters "
        - "49.03543,8.39475;radius=1000 "
        - "49.06560,8.47087;roadAccess=49.06568,8.47184 "
        - "49.06560,8.47087;matchSideOfStreet "
        - "combinedTransport=54.5009693,11.2273406,54.6604379,11.3608932 "
        explode: true
        in: query
        name: waypoints
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Instead of the waypoint mentioned above, a **routeId** from a previously calculated route or a matched track can be entered.
          More information and applying restrictions can be found [here](./concepts/route-ids).
        example: 3a58b824-fa8b-47eb-a5b8-73d6b753e1b4
        explode: true
        in: query
        name: routeId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "A profile defines a vehicle by a set of attributes, matching\
          \ typical transport situations.\nIt must be the name of one of the [predefined\
          \ profiles](../data-api/concepts/profiles) such as _EUR_TRAILER_TRUCK_.\n\
          \nIf this parameter is not specified and the first waypoint or the routeId\
          \ is located in the Americas,\n_USA_8_SEMITRAILER_5AXLE_ is used as the\
          \ default instead of _EUR_TRAILER_TRUCK_.\n\nIf the first waypoint or the\
          \ routeId is located in the Americas but a non-American profile is specified\
          \ or vice-versa, a warning is returned (routing only).\nAlways use a profile\
          \ which matches the region of the waypoints to obtain best results.\n\n\
          If the attributes of the profile do not fit to your vehicle, the values\
          \ can be changed by the corresponding attributes in the **vehicle** parameter\
          \ (routing only). \nThe values of the predefined profiles may be adapted\
          \ to reflect current vehicle standards. To obtain the same results when\
          \ values change, it is recommended to \nalways send with the request the\
          \ **vehicle** parameters that are important for your use case."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          $ref: "#/components/schemas/Profile"
        style: form
      - description: |-
          Physical and legal properties of the vehicle such as its dimensions to override the values of the selected **profile**.

          These parameters will be ignored for non-motorized profiles such as _BICYCLE_ or _PEDESTRIAN_.
          Unsupported parameters such as **electricityType** for combustion vehicles should not be specified in the request.

          Use array notation like `vehicle[emissionStandard]=EURO_5` to set vehicle attributes.
        explode: true
        in: query
        name: vehicle
        required: false
        schema:
          $ref: "#/components/schemas/Vehicle"
        style: deepObject
      - description: |-
          Routing-relevant options like date of travel or the use of additional data.
          Use array notation like `options[trafficMode]=AVERAGE` to set options.
        explode: true
        in: query
        name: options
        required: false
        schema:
          $ref: "#/components/schemas/Options"
        style: deepObject
      - description: "Relevant options to report emissions.\nUse array notation like\
          \ `emissionOptions[calculationMethods]=ISO14083_2023` to set options.\n\n\
          This parameter supersedes emission-related values in **results**. \nIf specified\
          \ the emission-related values in **results** will be ignored."
        explode: true
        in: query
        name: emissionOptions
        required: false
        schema:
          $ref: "#/components/schemas/EmissionOptions"
        style: deepObject
      - description: |-
          Relevant options to report the monetary costs of a route when _MONETARY_COSTS_ are requested in the **results**.
          Used for monetary cost routing when **options[routingMode]=MONETARY** is set.
          The costs have to be specified in the currency that is set in **options[currency]**.
        explode: true
        in: query
        name: monetaryCostOptions
        required: false
        schema:
          $ref: "#/components/schemas/MonetaryCostOptions"
        style: deepObject
      - description: "Comma-separated list that defines which results will be returned.\n\
          \n**Main results:**\n * `ROUTE_ID`\n    Response includes the route ID.\
          \ See [here](./concepts/route-ids) for more information.\n * `POLYLINE`\n\
          \    Response includes the complete **polyline** of the entire route in\
          \ the format specified by **options[polylineFormat]**.\n * `LEGS`\n    Response\
          \ includes information about the route **legs** defined as the parts of\
          \ the route between two consecutive waypoints.\n * `LEGS_POLYLINE`\n   \
          \ Response includes the **polyline** of each of the **legs** in the format\
          \ specified by **options[polylineFormat]**. _LEGS_ will automatically be\
          \ included.\n * `ALTERNATIVE_ROUTES`\n    Response includes up to three\
          \ alternatives in addition to the optimal route. \n    Not supported, if\
          \ more than two on-road or off-road waypoints are specified or if **options[routingMode]=MONETARY**\
          \ is specified.\n    Please note that the additional calculations will degrade\
          \ the performance.  \n * `GUIDED_NAVIGATION`\n    Response includes the\
          \ guided navigation information for the [PTV Navigator](https://www.myptv.com/en/logistics-software/ptv-navigator).\
          \  \n    See [here](./concepts/guided-navigation) for more information.\n\
          \ * `MONETARY_COSTS`\n    Response includes a report with monetary costs\
          \ for the route. See [here](./concepts/monetary-costs) for more information.\n\
          \n**Toll-related results:**\n * `TOLL_COSTS`\n    Response includes the\
          \ toll **costs** of the route.\n * `TOLL_SECTIONS`\n    Response includes\
          \ the list of toll **sections** defined by the toll operators.\n * `TOLL_SYSTEMS`\n\
          \    Response includes the list of toll **systems** defined by the toll\
          \ operators.\n * `TOLL_EVENTS`\n    Response includes **events** when a\
          \ toll road is entered, exited or a toll booth is passed.\n\n**Events:**\n\
          \ * `MANEUVER_EVENTS`\n    Response includes **events** for a **maneuver**\
          \ when the driver has to take an action, e.g. turn left or right.\n * `BORDER_EVENTS`\n\
          \    Response includes **events** when a **border** of a country or subdivision\
          \ is crossed by the route.\n * `VIOLATION_EVENTS`\n    Response includes\
          \ **events** when the route contains a **violation**, e.g. entering or exiting\
          \ an area where passing with the current vehicle is prohibited.\n * `VIOLATION_EVENTS_POLYLINE`\n\
          \    The response contains the **polyline** of each route violation. _VIOLATION_EVENTS_\
          \ will automatically be included.\n * `WAYPOINT_EVENTS`\n    Response includes\
          \ **events** when a **waypoint** is reached by the route.\n * `UTC_OFFSET_CHANGE_EVENTS`\n\
          \    Response includes **events** when the offset to UTC changes (**utcOffsetChange**).\n\
          \ * `COMBINED_TRANSPORT_EVENTS`\n    Response includes **events** when a\
          \ combined transport is entered or exited.\n * `TRAFFIC_EVENTS`\n    Response\
          \ includes **events** when a traffic incident such as a traffic jam is reached\
          \ by the route.\n * `TRAFFIC_EVENTS_POLYLINE`\n    The response contains\
          \ the **polyline** of each traffic event. _TRAFFIC_EVENTS_ will automatically\
          \ be included.\n * `LOW_EMISSION_ZONE_EVENTS` \n    Response includes **events**\
          \ when a low-emission zone is entered or exited by the route.\n * `DELIVERY_ONLY_EVENTS`\
          \ \n    Response includes **events** when a road prohibited except for delivery\
          \ vehicles is entered or exited by the route.\n * `DELIVERY_ONLY_EVENTS_POLYLINE`\n\
          \    The response contains the **polyline** of each delivery-only event.\
          \ _DELIVERY_ONLY_EVENTS_ will automatically be included.\n\n**Emission-related\
          \ results:**\n\nThese results are superseded by the parameter **emissionOptions**.\
          \ \nIf **emissionOptions** is specified the emission-related results will\
          \ be ignored.\n * `EMISSIONS_EN16258_2012`\n    Response includes information\
          \ on **emissions** (**EN16258_2012**) calculated according to EN16258 from\
          \ 2012 (a.k.a. CEN) based on the total fuel consumption for this route.\n\
          \    Only vehicles with **engineType** _COMBUSTION_ and **fuelType** _GASOLINE_,\
          \ _DIESEL_, _COMPRESSED_NATURAL_GAS_ or _LIQUEFIED_PETROLEUM_GAS_ are supported.\n\
          \    For _GASOLINE_ and _DIESEL_, an arbitrary **bioFuelRatio** is supported.\n\
          \    This is a European emission calculation method which should only be\
          \ used with [European profiles](../data-api/concepts/profiles).\n    This\
          \ result is mutually exclusive with **EMISSIONS_EN16258_2012_HBEFA**.\n\
          \ * `EMISSIONS_EN16258_2012_HBEFA`\n    Response includes information on\
          \ **emissions** (**EN16258_2012**) calculated according to EN 16258 from\
          \ 2012 (a.k.a. CEN) based on the total fuel consumption for this route\n\
          \    which is automatically calculated through HBEFA 4.2. The **averageFuelConsumption**\
          \ will be ignored.\n    This is a European emission calculation method which\
          \ should only be used with [European profiles](../data-api/concepts/profiles).\n\
          \    Supported vehicles are the same as those of _EMISSIONS_EN16258_2012_.\n\
          \    This result is mutually exclusive with **EMISSIONS_EN16258_2012**.\n\
          \ * `EMISSIONS_ISO14083_2022`\n    Draft version of ISO 14083:2023. See\
          \ **EMISSIONS_ISO14083_2023** for more information.\n * `EMISSIONS_ISO14083_2022_DEFAULT_CONSUMPTION`\n\
          \    Draft version of ISO 14083:2023. See **EMISSIONS_ISO14083_2023_DEFAULT_CONSUMPTION**\
          \ for more information.\n * `EMISSIONS_ISO14083_2023`\n    Response includes\
          \ information on **emissions** (**ISO14083_2023**) calculated according\
          \ to ISO 14083:2023 (a.k.a. ISO) based on the total fuel and electricity\
          \ consumption for this route.\n    Only supported for [European and American\
          \ profiles](../data-api/concepts/profiles). Emissions are calculated using\
          \ the respective factors.\n    All fuel and electricity types are supported,\
          \ for _GASOLINE_ and _DIESEL_ an arbitrary **bioFuelRatio** is supported.\n\
          \    For **engineType** _HYBRID_ or **engineType** _COMBUSTION_ with **fuelType**\
          \ _CNG_GASOLINE_ or _LPG_GASOLINE_, an arbitrary **hybridRatio** is supported.\n\
          \    This result is mutually exclusive with all other ISO14083 calculations.\n\
          \ * `EMISSIONS_ISO14083_2023_DEFAULT_CONSUMPTION`\n    Response includes\
          \ information on **emissions** (**ISO14083_2023**) calculated according\
          \ to ISO 14083:2023 (a.k.a. ISO) for based on the default fuel and electricity\
          \ consumption for this route\n    which is automatically calculated through\
          \ HBEFA 4.2. The **averageFuelConsumption** and **averageElectricityConsumption**\
          \ will be ignored.\n    Only supported for [European profiles](../data-api/concepts/profiles).\
          \ Emissions are calculated using the European factors.\n    Supported vehicles\
          \ are the same as those of _EMISSIONS_ISO14083_2023_.\n    This result is\
          \ mutually exclusive with all other ISO14083 calculations.\n * `EMISSIONS_FRENCH_CO2E_DECREE_2017_639`\n\
          \    Response includes information on **emissions** (**French_CO2e_Decree_2017_639**)\
          \ calculated according to the French CO2E decree from 2017 based on the\
          \ total fuel consumption for this route.\n    Only vehicles with **engineType**\
          \ _COMBUSTION_ and **fuelType** _GASOLINE_, _DIESEL_, _COMPRESSED_NATURAL_GAS_\
          \ or _LIQUEFIED_PETROLEUM_GAS_ are supported.\n    For _GASOLINE_ a **bioFuelRatio**\
          \ of _0_, _10_ and _85_ is supported, for _DIESEL_ _0_ and _30_.\n    This\
          \ is a European emission calculation method which should only be used with\
          \ [European profiles](../data-api/concepts/profiles).\n\n**Results available\
          \ only in the POST operation:**\n * `SCHEDULE_EVENTS`\n    We recommend\
          \ to additionally request _WAYPOINT_EVENTS_ to assign service and recreation\
          \ events to the waypoint at which they take place, in particular to distinguish\
          \ them when there are several waypoints at the same location.\n    Response\
          \ includes **events** when the driver takes a break or a rest, performs\
          \ service or waits for a waypoint to open (**schedule**).\n * `SCHEDULE_EVENTS_WITH_DRIVING`\n\
          \    Response includes **events** when the driver drives, takes a break\
          \ or a rest, performs service or waits for a waypoint to open (**schedule**).\
          \ _SCHEDULE_EVENTS_ will automatically be included.\n    We recommend to\
          \ additionally request _WAYPOINT_EVENTS_ to assign service and recreation\
          \ events to the waypoint at which they take place, in particular to distinguish\
          \ them when there are several waypoints at the same location.\n * `SCHEDULE_REPORT`\n\
          \    Response includes the **scheduleReport** which provides an overview\
          \ of the times of the schedule of this route including break and rest times.\n\
          \ * `EV_REPORT`\n    Response includes a report with detailed electricity\
          \ consumption for electric vehicles for the route and, if they are requested,\
          \ for legs. This is only available for concrete models of electric vehicles\
          \ but not for general routing profiles (see documentation of **profile**).\
          \ This result is in a preview state, the API is stable, feature changes\
          \ could be introduced in future.\n * `EV_STATUS_EVENTS`\n    Response includes\
          \ events reporting the electricity consumption along the route in more detail.\
          \ This is only available for concrete models of electric vehicles but not\
          \ for general routing profiles (see documentation of **profile**). This\
          \ result is in a preview state, the API is stable, feature changes could\
          \ be introduced in future.\n * `EV_STATUS_EVENTS_POLYLINE`\n    Response\
          \ includes the polyline for each **evStatus**-event since the previous **evStatus**-event.\
          \ _EV_STATUS_EVENTS_ will automatically be included. This is only available\
          \ for concrete models of electric vehicles but not for general routing profiles\
          \ (see documentation of **profile**). This result is in a preview state,\
          \ the API is stable, feature changes could be introduced in future.\n *\
          \ `EV_CHARGE_EVENTS`\n    Response includes events proposing where the battery\
          \ of the electric vehicle should be charged. The charging time is a proposal,\
          \ currently for information only. It is not included in the travel time\
          \ of the route and the start time of subsequent events is not offset by\
          \ it. This is only available for concrete models of electric vehicles but\
          \ not for general routing profiles (see documentation of **profile**). This\
          \ result is in a preview state, the API is stable, feature changes could\
          \ be introduced in future.\n\n_TOLL_COSTS_, _TOLL_SECTIONS_, _TOLL_SYSTEMS_\
          \ and _TOLL_EVENTS_ will be ignored for non-motorized profiles such as _BICYCLE_\
          \ or _PEDESTRIAN_.\nFor electric vehicles and non-motorized profiles such\
          \ as _BICYCLE_ or _PEDESTRIAN_ all emission values will be 0."
        example:
        - POLYLINE
        - TOLL_EVENTS
        explode: false
        in: query
        name: results
        required: false
        schema:
          items:
            $ref: "#/components/schemas/Results"
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteResponse"
          description: Response on success.
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Response on failure.
      tags:
      - Routing
    post:
      description: Calculates a route by specifying a list of waypoints taking into
        account opening intervals and working hours.
      operationId: calculateRoutePost
      parameters:
      - description: "A profile defines a vehicle by a set of attributes, matching\
          \ typical transport situations.\nIt must either be the name of one of the\
          \ [predefined profiles](../data-api/concepts/profiles) such as _EUR_TRAILER_TRUCK_\
          \ or a UUID of a predefined [vehicle model](../data-api/code-samples/vehicle-models)\
          \ from the Data API.\n\nIf this parameter is not specified and the first\
          \ waypoint or the routeId is located in the Americas,\n_USA_8_SEMITRAILER_5AXLE_\
          \ is used as the default instead of _EUR_TRAILER_TRUCK_.\n\nIf the first\
          \ waypoint or the routeId is located in the Americas but a non-American\
          \ profile is specified or vice-versa, a warning is returned (routing only).\n\
          Always use a profile which matches the region of the waypoints to obtain\
          \ best results.\n\nIf a model of an electric vehicle is used, the electricity\
          \ consumption of the concrete vehicle model can be calculated.\nSome parameters\
          \ like **vehicle[engineType]** cannot be used with a model of an electric\
          \ vehicle.\nThose parameters are automatically filled as applicable from\
          \ the selected model. \nPlease refer to the [concept](./concepts/model-based-ev-consumption-calculation)\
          \ to see specifically which parameters are not compatible.\nThese vehicle\
          \ model profiles are in a preview state, the API is stable, feature changes\
          \ could be introduced in future.\n\nIf the attributes of the profile do\
          \ not fit to your vehicle, the values can be changed by the corresponding\
          \ attributes in the **vehicle** parameter (routing only). \nThe values of\
          \ the predefined profiles may be adapted to reflect current vehicle standards.\
          \ To obtain the same results when values change, it is recommended to \n\
          always send with the request the **vehicle** parameters that are important\
          \ for your use case."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          $ref: "#/components/schemas/Profile"
        style: form
      - description: |-
          Physical and legal properties of the vehicle such as its dimensions to override the values of the selected **profile**.

          These parameters will be ignored for non-motorized profiles such as _BICYCLE_ or _PEDESTRIAN_.
          Unsupported parameters such as **electricityType** for combustion vehicles should not be specified in the request.

          Use array notation like `vehicle[emissionStandard]=EURO_5` to set vehicle attributes.
        explode: true
        in: query
        name: vehicle
        required: false
        schema:
          $ref: "#/components/schemas/Vehicle"
        style: deepObject
      - description: |-
          Options regarding the drivers' working hours.
          If no driver object with a working hours preset is passed with the request, working hours will be unlimited.
        explode: true
        in: query
        name: driver
        required: false
        schema:
          $ref: "#/components/schemas/Driver"
        style: deepObject
      - description: |-
          Routing-relevant options like date of travel or the use of additional data.
          Use array notation like `options[trafficMode]=AVERAGE` to set options.
        explode: true
        in: query
        name: options
        required: false
        schema:
          $ref: "#/components/schemas/Options"
        style: deepObject
      - description: "Relevant options to report emissions.\nUse array notation like\
          \ `emissionOptions[calculationMethods]=ISO14083_2023` to set options.\n\n\
          This parameter supersedes emission-related values in **results**. \nIf specified\
          \ the emission-related values in **results** will be ignored."
        explode: true
        in: query
        name: emissionOptions
        required: false
        schema:
          $ref: "#/components/schemas/EmissionOptions"
        style: deepObject
      - description: |-
          Relevant options to report the monetary costs of a route when _MONETARY_COSTS_ are requested in the **results**.
          Used for monetary cost routing when **options[routingMode]=MONETARY** is set.
          The costs have to be specified in the currency that is set in **options[currency]**.
        explode: true
        in: query
        name: monetaryCostOptions
        required: false
        schema:
          $ref: "#/components/schemas/MonetaryCostOptions"
        style: deepObject
      - description: |-
          Relevant options to report the electricity consumption of an electric vehicle along a route when _EV_REPORT_, _EV_STATUS_EVENTS_, _EV_STATUS_EVENTS_POLYLINE_ or _EV_CHARGE_EVENTS_ are requested in the **results**.
          Use array notation like `evOptions[initialStateOfCharge]=100` to set options.

          This parameter is in a preview state, the API is stable, feature changes could be introduced in future.
        explode: true
        in: query
        name: evOptions
        required: false
        schema:
          $ref: "#/components/schemas/EvOptions"
        style: deepObject
      - description: "Comma-separated list that defines which results will be returned.\n\
          \n**Main results:**\n * `ROUTE_ID`\n    Response includes the route ID.\
          \ See [here](./concepts/route-ids) for more information.\n * `POLYLINE`\n\
          \    Response includes the complete **polyline** of the entire route in\
          \ the format specified by **options[polylineFormat]**.\n * `LEGS`\n    Response\
          \ includes information about the route **legs** defined as the parts of\
          \ the route between two consecutive waypoints.\n * `LEGS_POLYLINE`\n   \
          \ Response includes the **polyline** of each of the **legs** in the format\
          \ specified by **options[polylineFormat]**. _LEGS_ will automatically be\
          \ included.\n * `ALTERNATIVE_ROUTES`\n    Response includes up to three\
          \ alternatives in addition to the optimal route. \n    Not supported, if\
          \ more than two on-road or off-road waypoints are specified or if **options[routingMode]=MONETARY**\
          \ is specified.\n    Please note that the additional calculations will degrade\
          \ the performance.  \n * `GUIDED_NAVIGATION`\n    Response includes the\
          \ guided navigation information for the [PTV Navigator](https://www.myptv.com/en/logistics-software/ptv-navigator).\
          \  \n    See [here](./concepts/guided-navigation) for more information.\n\
          \ * `MONETARY_COSTS`\n    Response includes a report with monetary costs\
          \ for the route. See [here](./concepts/monetary-costs) for more information.\n\
          \n**Toll-related results:**\n * `TOLL_COSTS`\n    Response includes the\
          \ toll **costs** of the route.\n * `TOLL_SECTIONS`\n    Response includes\
          \ the list of toll **sections** defined by the toll operators.\n * `TOLL_SYSTEMS`\n\
          \    Response includes the list of toll **systems** defined by the toll\
          \ operators.\n * `TOLL_EVENTS`\n    Response includes **events** when a\
          \ toll road is entered, exited or a toll booth is passed.\n\n**Events:**\n\
          \ * `MANEUVER_EVENTS`\n    Response includes **events** for a **maneuver**\
          \ when the driver has to take an action, e.g. turn left or right.\n * `BORDER_EVENTS`\n\
          \    Response includes **events** when a **border** of a country or subdivision\
          \ is crossed by the route.\n * `VIOLATION_EVENTS`\n    Response includes\
          \ **events** when the route contains a **violation**, e.g. entering or exiting\
          \ an area where passing with the current vehicle is prohibited.\n * `VIOLATION_EVENTS_POLYLINE`\n\
          \    The response contains the **polyline** of each route violation. _VIOLATION_EVENTS_\
          \ will automatically be included.\n * `WAYPOINT_EVENTS`\n    Response includes\
          \ **events** when a **waypoint** is reached by the route.\n * `UTC_OFFSET_CHANGE_EVENTS`\n\
          \    Response includes **events** when the offset to UTC changes (**utcOffsetChange**).\n\
          \ * `COMBINED_TRANSPORT_EVENTS`\n    Response includes **events** when a\
          \ combined transport is entered or exited.\n * `TRAFFIC_EVENTS`\n    Response\
          \ includes **events** when a traffic incident such as a traffic jam is reached\
          \ by the route.\n * `TRAFFIC_EVENTS_POLYLINE`\n    The response contains\
          \ the **polyline** of each traffic event. _TRAFFIC_EVENTS_ will automatically\
          \ be included.\n * `LOW_EMISSION_ZONE_EVENTS` \n    Response includes **events**\
          \ when a low-emission zone is entered or exited by the route.\n * `DELIVERY_ONLY_EVENTS`\
          \ \n    Response includes **events** when a road prohibited except for delivery\
          \ vehicles is entered or exited by the route.\n * `DELIVERY_ONLY_EVENTS_POLYLINE`\n\
          \    The response contains the **polyline** of each delivery-only event.\
          \ _DELIVERY_ONLY_EVENTS_ will automatically be included.\n\n**Emission-related\
          \ results:**\n\nThese results are superseded by the parameter **emissionOptions**.\
          \ \nIf **emissionOptions** is specified the emission-related results will\
          \ be ignored.\n * `EMISSIONS_EN16258_2012`\n    Response includes information\
          \ on **emissions** (**EN16258_2012**) calculated according to EN16258 from\
          \ 2012 (a.k.a. CEN) based on the total fuel consumption for this route.\n\
          \    Only vehicles with **engineType** _COMBUSTION_ and **fuelType** _GASOLINE_,\
          \ _DIESEL_, _COMPRESSED_NATURAL_GAS_ or _LIQUEFIED_PETROLEUM_GAS_ are supported.\n\
          \    For _GASOLINE_ and _DIESEL_, an arbitrary **bioFuelRatio** is supported.\n\
          \    This is a European emission calculation method which should only be\
          \ used with [European profiles](../data-api/concepts/profiles).\n    This\
          \ result is mutually exclusive with **EMISSIONS_EN16258_2012_HBEFA**.\n\
          \ * `EMISSIONS_EN16258_2012_HBEFA`\n    Response includes information on\
          \ **emissions** (**EN16258_2012**) calculated according to EN 16258 from\
          \ 2012 (a.k.a. CEN) based on the total fuel consumption for this route\n\
          \    which is automatically calculated through HBEFA 4.2. The **averageFuelConsumption**\
          \ will be ignored.\n    This is a European emission calculation method which\
          \ should only be used with [European profiles](../data-api/concepts/profiles).\n\
          \    Supported vehicles are the same as those of _EMISSIONS_EN16258_2012_.\n\
          \    This result is mutually exclusive with **EMISSIONS_EN16258_2012**.\n\
          \ * `EMISSIONS_ISO14083_2022`\n    Draft version of ISO 14083:2023. See\
          \ **EMISSIONS_ISO14083_2023** for more information.\n * `EMISSIONS_ISO14083_2022_DEFAULT_CONSUMPTION`\n\
          \    Draft version of ISO 14083:2023. See **EMISSIONS_ISO14083_2023_DEFAULT_CONSUMPTION**\
          \ for more information.\n * `EMISSIONS_ISO14083_2023`\n    Response includes\
          \ information on **emissions** (**ISO14083_2023**) calculated according\
          \ to ISO 14083:2023 (a.k.a. ISO) based on the total fuel and electricity\
          \ consumption for this route.\n    Only supported for [European and American\
          \ profiles](../data-api/concepts/profiles). Emissions are calculated using\
          \ the respective factors.\n    All fuel and electricity types are supported,\
          \ for _GASOLINE_ and _DIESEL_ an arbitrary **bioFuelRatio** is supported.\n\
          \    For **engineType** _HYBRID_ or **engineType** _COMBUSTION_ with **fuelType**\
          \ _CNG_GASOLINE_ or _LPG_GASOLINE_, an arbitrary **hybridRatio** is supported.\n\
          \    This result is mutually exclusive with all other ISO14083 calculations.\n\
          \ * `EMISSIONS_ISO14083_2023_DEFAULT_CONSUMPTION`\n    Response includes\
          \ information on **emissions** (**ISO14083_2023**) calculated according\
          \ to ISO 14083:2023 (a.k.a. ISO) for based on the default fuel and electricity\
          \ consumption for this route\n    which is automatically calculated through\
          \ HBEFA 4.2. The **averageFuelConsumption** and **averageElectricityConsumption**\
          \ will be ignored.\n    Only supported for [European profiles](../data-api/concepts/profiles).\
          \ Emissions are calculated using the European factors.\n    Supported vehicles\
          \ are the same as those of _EMISSIONS_ISO14083_2023_.\n    This result is\
          \ mutually exclusive with all other ISO14083 calculations.\n * `EMISSIONS_FRENCH_CO2E_DECREE_2017_639`\n\
          \    Response includes information on **emissions** (**French_CO2e_Decree_2017_639**)\
          \ calculated according to the French CO2E decree from 2017 based on the\
          \ total fuel consumption for this route.\n    Only vehicles with **engineType**\
          \ _COMBUSTION_ and **fuelType** _GASOLINE_, _DIESEL_, _COMPRESSED_NATURAL_GAS_\
          \ or _LIQUEFIED_PETROLEUM_GAS_ are supported.\n    For _GASOLINE_ a **bioFuelRatio**\
          \ of _0_, _10_ and _85_ is supported, for _DIESEL_ _0_ and _30_.\n    This\
          \ is a European emission calculation method which should only be used with\
          \ [European profiles](../data-api/concepts/profiles).\n\n**Results available\
          \ only in the POST operation:**\n * `SCHEDULE_EVENTS`\n    We recommend\
          \ to additionally request _WAYPOINT_EVENTS_ to assign service and recreation\
          \ events to the waypoint at which they take place, in particular to distinguish\
          \ them when there are several waypoints at the same location.\n    Response\
          \ includes **events** when the driver takes a break or a rest, performs\
          \ service or waits for a waypoint to open (**schedule**).\n * `SCHEDULE_EVENTS_WITH_DRIVING`\n\
          \    Response includes **events** when the driver drives, takes a break\
          \ or a rest, performs service or waits for a waypoint to open (**schedule**).\
          \ _SCHEDULE_EVENTS_ will automatically be included.\n    We recommend to\
          \ additionally request _WAYPOINT_EVENTS_ to assign service and recreation\
          \ events to the waypoint at which they take place, in particular to distinguish\
          \ them when there are several waypoints at the same location.\n * `SCHEDULE_REPORT`\n\
          \    Response includes the **scheduleReport** which provides an overview\
          \ of the times of the schedule of this route including break and rest times.\n\
          \ * `EV_REPORT`\n    Response includes a report with detailed electricity\
          \ consumption for electric vehicles for the route and, if they are requested,\
          \ for legs. This is only available for concrete models of electric vehicles\
          \ but not for general routing profiles (see documentation of **profile**).\
          \ This result is in a preview state, the API is stable, feature changes\
          \ could be introduced in future.\n * `EV_STATUS_EVENTS`\n    Response includes\
          \ events reporting the electricity consumption along the route in more detail.\
          \ This is only available for concrete models of electric vehicles but not\
          \ for general routing profiles (see documentation of **profile**). This\
          \ result is in a preview state, the API is stable, feature changes could\
          \ be introduced in future.\n * `EV_STATUS_EVENTS_POLYLINE`\n    Response\
          \ includes the polyline for each **evStatus**-event since the previous **evStatus**-event.\
          \ _EV_STATUS_EVENTS_ will automatically be included. This is only available\
          \ for concrete models of electric vehicles but not for general routing profiles\
          \ (see documentation of **profile**). This result is in a preview state,\
          \ the API is stable, feature changes could be introduced in future.\n *\
          \ `EV_CHARGE_EVENTS`\n    Response includes events proposing where the battery\
          \ of the electric vehicle should be charged. The charging time is a proposal,\
          \ currently for information only. It is not included in the travel time\
          \ of the route and the start time of subsequent events is not offset by\
          \ it. This is only available for concrete models of electric vehicles but\
          \ not for general routing profiles (see documentation of **profile**). This\
          \ result is in a preview state, the API is stable, feature changes could\
          \ be introduced in future.\n\n_TOLL_COSTS_, _TOLL_SECTIONS_, _TOLL_SYSTEMS_\
          \ and _TOLL_EVENTS_ will be ignored for non-motorized profiles such as _BICYCLE_\
          \ or _PEDESTRIAN_.\nFor electric vehicles and non-motorized profiles such\
          \ as _BICYCLE_ or _PEDESTRIAN_ all emission values will be 0."
        example:
        - POLYLINE
        - TOLL_EVENTS
        explode: false
        in: query
        name: results
        required: false
        schema:
          items:
            $ref: "#/components/schemas/Results"
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RouteRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteResponse"
          description: Response on success.
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Response on failure.
      tags:
      - Routing
  /routes/{routeId}:
    get:
      description: |-
        Returns the route of a previously calculated route, an alternative route or a route calculated by the Matrix Routing API.
        The response will use the same parameters as the previously calculated route.  If no **results** are specified it will contain all results of the previously calculated route except for _ALTERNATIVE_ROUTES_.  If **results** are specified, the results of the previously calculated route will be ignored, only the specified results will be returned. The result _ALTERNATIVE_ROUTES_ is not allowed to be requested. Emission-related results can be requested only if the previous route was not calculated using **emissionOptions**. Results available only in the POST operation can be requested only if the previous route was calculated using the POST operation. As the response will always contain the requested **routeId**, the result _ROUTE_ID_ will have no effect.
        Although the route itself will be the same, other results might be slightly different such as the travel time or  toll costs. See [here](./concepts/route-ids) for more information.
      operationId: getRouteByRouteId
      parameters:
      - description: The route ID returned from a previous route calculation or alternative
          route.
        explode: false
        in: path
        name: routeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "Comma-separated list that defines which results will be returned.\n\
          \n**Main results:**\n * `ROUTE_ID`\n    Response includes the route ID.\
          \ See [here](./concepts/route-ids) for more information.\n * `POLYLINE`\n\
          \    Response includes the complete **polyline** of the entire route in\
          \ the format specified by **options[polylineFormat]**.\n * `LEGS`\n    Response\
          \ includes information about the route **legs** defined as the parts of\
          \ the route between two consecutive waypoints.\n * `LEGS_POLYLINE`\n   \
          \ Response includes the **polyline** of each of the **legs** in the format\
          \ specified by **options[polylineFormat]**. _LEGS_ will automatically be\
          \ included.\n * `ALTERNATIVE_ROUTES`\n    Response includes up to three\
          \ alternatives in addition to the optimal route. \n    Not supported, if\
          \ more than two on-road or off-road waypoints are specified or if **options[routingMode]=MONETARY**\
          \ is specified.\n    Please note that the additional calculations will degrade\
          \ the performance.  \n * `GUIDED_NAVIGATION`\n    Response includes the\
          \ guided navigation information for the [PTV Navigator](https://www.myptv.com/en/logistics-software/ptv-navigator).\
          \  \n    See [here](./concepts/guided-navigation) for more information.\n\
          \ * `MONETARY_COSTS`\n    Response includes a report with monetary costs\
          \ for the route. See [here](./concepts/monetary-costs) for more information.\n\
          \n**Toll-related results:**\n * `TOLL_COSTS`\n    Response includes the\
          \ toll **costs** of the route.\n * `TOLL_SECTIONS`\n    Response includes\
          \ the list of toll **sections** defined by the toll operators.\n * `TOLL_SYSTEMS`\n\
          \    Response includes the list of toll **systems** defined by the toll\
          \ operators.\n * `TOLL_EVENTS`\n    Response includes **events** when a\
          \ toll road is entered, exited or a toll booth is passed.\n\n**Events:**\n\
          \ * `MANEUVER_EVENTS`\n    Response includes **events** for a **maneuver**\
          \ when the driver has to take an action, e.g. turn left or right.\n * `BORDER_EVENTS`\n\
          \    Response includes **events** when a **border** of a country or subdivision\
          \ is crossed by the route.\n * `VIOLATION_EVENTS`\n    Response includes\
          \ **events** when the route contains a **violation**, e.g. entering or exiting\
          \ an area where passing with the current vehicle is prohibited.\n * `VIOLATION_EVENTS_POLYLINE`\n\
          \    The response contains the **polyline** of each route violation. _VIOLATION_EVENTS_\
          \ will automatically be included.\n * `WAYPOINT_EVENTS`\n    Response includes\
          \ **events** when a **waypoint** is reached by the route.\n * `UTC_OFFSET_CHANGE_EVENTS`\n\
          \    Response includes **events** when the offset to UTC changes (**utcOffsetChange**).\n\
          \ * `COMBINED_TRANSPORT_EVENTS`\n    Response includes **events** when a\
          \ combined transport is entered or exited.\n * `TRAFFIC_EVENTS`\n    Response\
          \ includes **events** when a traffic incident such as a traffic jam is reached\
          \ by the route.\n * `TRAFFIC_EVENTS_POLYLINE`\n    The response contains\
          \ the **polyline** of each traffic event. _TRAFFIC_EVENTS_ will automatically\
          \ be included.\n * `LOW_EMISSION_ZONE_EVENTS` \n    Response includes **events**\
          \ when a low-emission zone is entered or exited by the route.\n * `DELIVERY_ONLY_EVENTS`\
          \ \n    Response includes **events** when a road prohibited except for delivery\
          \ vehicles is entered or exited by the route.\n * `DELIVERY_ONLY_EVENTS_POLYLINE`\n\
          \    The response contains the **polyline** of each delivery-only event.\
          \ _DELIVERY_ONLY_EVENTS_ will automatically be included.\n\n**Emission-related\
          \ results:**\n\nThese results are superseded by the parameter **emissionOptions**.\
          \ \nIf **emissionOptions** is specified the emission-related results will\
          \ be ignored.\n * `EMISSIONS_EN16258_2012`\n    Response includes information\
          \ on **emissions** (**EN16258_2012**) calculated according to EN16258 from\
          \ 2012 (a.k.a. CEN) based on the total fuel consumption for this route.\n\
          \    Only vehicles with **engineType** _COMBUSTION_ and **fuelType** _GASOLINE_,\
          \ _DIESEL_, _COMPRESSED_NATURAL_GAS_ or _LIQUEFIED_PETROLEUM_GAS_ are supported.\n\
          \    For _GASOLINE_ and _DIESEL_, an arbitrary **bioFuelRatio** is supported.\n\
          \    This is a European emission calculation method which should only be\
          \ used with [European profiles](../data-api/concepts/profiles).\n    This\
          \ result is mutually exclusive with **EMISSIONS_EN16258_2012_HBEFA**.\n\
          \ * `EMISSIONS_EN16258_2012_HBEFA`\n    Response includes information on\
          \ **emissions** (**EN16258_2012**) calculated according to EN 16258 from\
          \ 2012 (a.k.a. CEN) based on the total fuel consumption for this route\n\
          \    which is automatically calculated through HBEFA 4.2. The **averageFuelConsumption**\
          \ will be ignored.\n    This is a European emission calculation method which\
          \ should only be used with [European profiles](../data-api/concepts/profiles).\n\
          \    Supported vehicles are the same as those of _EMISSIONS_EN16258_2012_.\n\
          \    This result is mutually exclusive with **EMISSIONS_EN16258_2012**.\n\
          \ * `EMISSIONS_ISO14083_2022`\n    Draft version of ISO 14083:2023. See\
          \ **EMISSIONS_ISO14083_2023** for more information.\n * `EMISSIONS_ISO14083_2022_DEFAULT_CONSUMPTION`\n\
          \    Draft version of ISO 14083:2023. See **EMISSIONS_ISO14083_2023_DEFAULT_CONSUMPTION**\
          \ for more information.\n * `EMISSIONS_ISO14083_2023`\n    Response includes\
          \ information on **emissions** (**ISO14083_2023**) calculated according\
          \ to ISO 14083:2023 (a.k.a. ISO) based on the total fuel and electricity\
          \ consumption for this route.\n    Only supported for [European and American\
          \ profiles](../data-api/concepts/profiles). Emissions are calculated using\
          \ the respective factors.\n    All fuel and electricity types are supported,\
          \ for _GASOLINE_ and _DIESEL_ an arbitrary **bioFuelRatio** is supported.\n\
          \    For **engineType** _HYBRID_ or **engineType** _COMBUSTION_ with **fuelType**\
          \ _CNG_GASOLINE_ or _LPG_GASOLINE_, an arbitrary **hybridRatio** is supported.\n\
          \    This result is mutually exclusive with all other ISO14083 calculations.\n\
          \ * `EMISSIONS_ISO14083_2023_DEFAULT_CONSUMPTION`\n    Response includes\
          \ information on **emissions** (**ISO14083_2023**) calculated according\
          \ to ISO 14083:2023 (a.k.a. ISO) for based on the default fuel and electricity\
          \ consumption for this route\n    which is automatically calculated through\
          \ HBEFA 4.2. The **averageFuelConsumption** and **averageElectricityConsumption**\
          \ will be ignored.\n    Only supported for [European profiles](../data-api/concepts/profiles).\
          \ Emissions are calculated using the European factors.\n    Supported vehicles\
          \ are the same as those of _EMISSIONS_ISO14083_2023_.\n    This result is\
          \ mutually exclusive with all other ISO14083 calculations.\n * `EMISSIONS_FRENCH_CO2E_DECREE_2017_639`\n\
          \    Response includes information on **emissions** (**French_CO2e_Decree_2017_639**)\
          \ calculated according to the French CO2E decree from 2017 based on the\
          \ total fuel consumption for this route.\n    Only vehicles with **engineType**\
          \ _COMBUSTION_ and **fuelType** _GASOLINE_, _DIESEL_, _COMPRESSED_NATURAL_GAS_\
          \ or _LIQUEFIED_PETROLEUM_GAS_ are supported.\n    For _GASOLINE_ a **bioFuelRatio**\
          \ of _0_, _10_ and _85_ is supported, for _DIESEL_ _0_ and _30_.\n    This\
          \ is a European emission calculation method which should only be used with\
          \ [European profiles](../data-api/concepts/profiles).\n\n**Results available\
          \ only in the POST operation:**\n * `SCHEDULE_EVENTS`\n    We recommend\
          \ to additionally request _WAYPOINT_EVENTS_ to assign service and recreation\
          \ events to the waypoint at which they take place, in particular to distinguish\
          \ them when there are several waypoints at the same location.\n    Response\
          \ includes **events** when the driver takes a break or a rest, performs\
          \ service or waits for a waypoint to open (**schedule**).\n * `SCHEDULE_EVENTS_WITH_DRIVING`\n\
          \    Response includes **events** when the driver drives, takes a break\
          \ or a rest, performs service or waits for a waypoint to open (**schedule**).\
          \ _SCHEDULE_EVENTS_ will automatically be included.\n    We recommend to\
          \ additionally request _WAYPOINT_EVENTS_ to assign service and recreation\
          \ events to the waypoint at which they take place, in particular to distinguish\
          \ them when there are several waypoints at the same location.\n * `SCHEDULE_REPORT`\n\
          \    Response includes the **scheduleReport** which provides an overview\
          \ of the times of the schedule of this route including break and rest times.\n\
          \ * `EV_REPORT`\n    Response includes a report with detailed electricity\
          \ consumption for electric vehicles for the route and, if they are requested,\
          \ for legs. This is only available for concrete models of electric vehicles\
          \ but not for general routing profiles (see documentation of **profile**).\
          \ This result is in a preview state, the API is stable, feature changes\
          \ could be introduced in future.\n * `EV_STATUS_EVENTS`\n    Response includes\
          \ events reporting the electricity consumption along the route in more detail.\
          \ This is only available for concrete models of electric vehicles but not\
          \ for general routing profiles (see documentation of **profile**). This\
          \ result is in a preview state, the API is stable, feature changes could\
          \ be introduced in future.\n * `EV_STATUS_EVENTS_POLYLINE`\n    Response\
          \ includes the polyline for each **evStatus**-event since the previous **evStatus**-event.\
          \ _EV_STATUS_EVENTS_ will automatically be included. This is only available\
          \ for concrete models of electric vehicles but not for general routing profiles\
          \ (see documentation of **profile**). This result is in a preview state,\
          \ the API is stable, feature changes could be introduced in future.\n *\
          \ `EV_CHARGE_EVENTS`\n    Response includes events proposing where the battery\
          \ of the electric vehicle should be charged. The charging time is a proposal,\
          \ currently for information only. It is not included in the travel time\
          \ of the route and the start time of subsequent events is not offset by\
          \ it. This is only available for concrete models of electric vehicles but\
          \ not for general routing profiles (see documentation of **profile**). This\
          \ result is in a preview state, the API is stable, feature changes could\
          \ be introduced in future.\n\n_TOLL_COSTS_, _TOLL_SECTIONS_, _TOLL_SYSTEMS_\
          \ and _TOLL_EVENTS_ will be ignored for non-motorized profiles such as _BICYCLE_\
          \ or _PEDESTRIAN_.\nFor electric vehicles and non-motorized profiles such\
          \ as _BICYCLE_ or _PEDESTRIAN_ all emission values will be 0."
        example:
        - POLYLINE
        - TOLL_EVENTS
        explode: false
        in: query
        name: results
        required: false
        schema:
          items:
            $ref: "#/components/schemas/Results"
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RouteResponse"
          description: Response on success.
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Response on failure.
      tags:
      - Routing
  /eta/{routeId}:
    get:
      description: Calculates the estimated time of arrival (ETA) based on a previously
        calculated route and the position of the vehicle.
      operationId: getEstimatedTimeOfArrival
      parameters:
      - description: |
          The route ID returned from a previous route calculation. See [here](./concepts/route-ids) for more information.

          Make sure to assign unique names to all off-road and on-road waypoints in the request to obtain the route ID.
          Otherwise, the route ID cannot be used for ETA calculation because the waypoints cannot be identified. Furthermore,
          the route ID must not contain route-manipulation waypoints, combined-transport waypoints or vehicle parameters at waypoints.
        explode: false
        in: path
        name: routeId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: waypoint
        required: false
        schema:
          $ref: "#/components/schemas/PositionAtWaypoint"
        style: deepObject
      - explode: true
        in: query
        name: position
        required: false
        schema:
          $ref: "#/components/schemas/PositionOnRoute"
        style: deepObject
      - description: "Defines the time when the vehicle position was captured formatted\
          \ according to [RFC 3339](https://tools.ietf.org/html/rfc3339).\nIf not\
          \ specified the current time will be used, i.e. the given position of the\
          \ vehicle is its current position.\n\nIf the date-time string does not include\
          \ an explicit offset to UTC, the time will be interpreted as the local time\
          \ of the position of the vehicle.\nThe date must not be before 1970-01-01T00:00:00+00:00\
          \ nor after 2037-12-31T23:59:59+00:00. \nThe response will contain the offset\
          \ to UTC specified in the request, otherwise it will contain the offset\
          \ to UTC of the position of the vehicle.\nFor best results the time should\
          \ be only several minutes in the past or in the future, otherwise live traffic\
          \ will not be considered properly."
        explode: true
        in: query
        name: time
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: workLogbook
        required: false
        schema:
          $ref: "#/components/schemas/WorkLogbook"
        style: deepObject
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EtaResponse"
          description: Response on success.
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Response on failure.
      tags:
      - Routing
  /reachable-areas:
    get:
      description: "Calculates the areas which can be reached from a waypoint, within\
        \ given horizons (limited to 25 km or 20 minutes). Use the asynchronous POST\
        \ and GET requests for larger horizons or calculation of areas from a route."
      operationId: calculateReachableAreas
      parameters:
      - description: |-
          The start or destination waypoint.
          The format of the waypoint is `<lat>,<lon>[;<attribute>;<attribute>;...]`
          representing a point with the latitude value in degrees from south to north
          and the longitude value in degrees (WGS84/EPSG:4326) from west to east.
          This point will be matched to the nearest possible road.
          By default the air-line connection between given and matched coordinates is not included in the distance or duration.
          We will refer to this type of waypoint as an _on-road waypoint_.

          The behaviour of a waypoint can be changed by appending the following attributes:
            * `includeLastMeters` to include the air-line connection between given and matched coordinates in the distance or duration.
            We will refer to this type of waypoint as an _off-road waypoint_.
            * `roadAccess=<lat>,<lon>`, to use these coordinates for matching to the nearest road. Implies **includeLastMeters**, i.e.
            the air-line connection between the waypoint coordinates and the matched coordinates
            is included in the distance or duration. This is useful if the waypoint should not be matched to the nearest possible road but to some road further away,
            e.g. garage exit at a different road.

          See [here](./concepts/waypoints) for more information.
        example: "49.0133618,8.4277972"
        explode: true
        in: query
        name: waypoint
        required: true
        schema:
          type: string
        style: form
      - description: "A profile defines a vehicle by a set of attributes, matching\
          \ typical transport situations.\nIt must be the name of one of the [predefined\
          \ profiles](../data-api/concepts/profiles) such as _EUR_TRAILER_TRUCK_.\n\
          \nIf this parameter is not specified and the first waypoint or the routeId\
          \ is located in the Americas,\n_USA_8_SEMITRAILER_5AXLE_ is used as the\
          \ default instead of _EUR_TRAILER_TRUCK_.\n\nIf the first waypoint or the\
          \ routeId is located in the Americas but a non-American profile is specified\
          \ or vice-versa, a warning is returned (routing only).\nAlways use a profile\
          \ which matches the region of the waypoints to obtain best results.\n\n\
          If the attributes of the profile do not fit to your vehicle, the values\
          \ can be changed by the corresponding attributes in the **vehicle** parameter\
          \ (routing only). \nThe values of the predefined profiles may be adapted\
          \ to reflect current vehicle standards. To obtain the same results when\
          \ values change, it is recommended to \nalways send with the request the\
          \ **vehicle** parameters that are important for your use case."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          $ref: "#/components/schemas/Profile"
        style: form
      - description: "The distances [m] or travel times [s] of the horizons, depending\
          \ on the **horizonType**. Limited to 5 horizons (or 3 with a **routeId**)."
        explode: false
        in: query
        name: horizons
        required: true
        schema:
          items:
            example: 100
            format: int32
            minimum: 1
            type: integer
          maxItems: 5
          minItems: 1
          type: array
        style: form
      - explode: true
        in: query
        name: horizonType
        required: false
        schema:
          $ref: "#/components/schemas/HorizonType"
        style: form
      - description: |-
          Routing-relevant options like driving direction or the use of additional data.
          Use array notation like `options[trafficMode]=AVERAGE` to set options.
        explode: true
        in: query
        name: options
        required: false
        schema:
          $ref: "#/components/schemas/ReachableOptions"
        style: deepObject
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReachableAreas"
          description: Response on success.
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Response on failure.
      tags:
      - Reachable Areas
    post:
      description: "Starts and creates the areas which can be reached from a waypoint\
        \ or from a route, within given horizons. This type of request is recommended\
        \ when the **horizons** parameter is more than 20 minutes or 25 km."
      operationId: startAndCreateReachableAreas
      parameters:
      - description: |-
          The start or destination waypoint.
          The format of the waypoint is `<lat>,<lon>[;<attribute>;<attribute>;...]`
          representing a point with the latitude value in degrees from south to north
          and the longitude value in degrees (WGS84/EPSG:4326) from west to east.
          This point will be matched to the nearest possible road.
          By default the air-line connection between given and matched coordinates is not included in the distance or duration.
          We will refer to this type of waypoint as an _on-road waypoint_.

          The behaviour of a waypoint can be changed by appending the following attributes:
            * `includeLastMeters` to include the air-line connection between given and matched coordinates in the distance or duration.
            We will refer to this type of waypoint as an _off-road waypoint_.
            * `roadAccess=<lat>,<lon>`, to use these coordinates for matching to the nearest road. Implies **includeLastMeters**, i.e.
            the air-line connection between the waypoint coordinates and the matched coordinates
            is included in the distance or duration. This is useful if the waypoint should not be matched to the nearest possible road but to some road further away,
            e.g. garage exit at a different road.

          See [here](./concepts/waypoints) for more information.
        explode: true
        in: query
        name: waypoint
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Instead of the waypoint mentioned above, a **routeId** from a previously calculated route or a matched track can be entered.
          More information and applying restrictions can be found [here](./concepts/route-ids).
        example: 3a58b824-fa8b-47eb-a5b8-73d6b753e1b4
        explode: true
        in: query
        name: routeId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "A profile defines a vehicle by a set of attributes, matching\
          \ typical transport situations.\nIt must be the name of one of the [predefined\
          \ profiles](../data-api/concepts/profiles) such as _EUR_TRAILER_TRUCK_.\n\
          \nIf this parameter is not specified and the first waypoint or the routeId\
          \ is located in the Americas,\n_USA_8_SEMITRAILER_5AXLE_ is used as the\
          \ default instead of _EUR_TRAILER_TRUCK_.\n\nIf the first waypoint or the\
          \ routeId is located in the Americas but a non-American profile is specified\
          \ or vice-versa, a warning is returned (routing only).\nAlways use a profile\
          \ which matches the region of the waypoints to obtain best results.\n\n\
          If the attributes of the profile do not fit to your vehicle, the values\
          \ can be changed by the corresponding attributes in the **vehicle** parameter\
          \ (routing only). \nThe values of the predefined profiles may be adapted\
          \ to reflect current vehicle standards. To obtain the same results when\
          \ values change, it is recommended to \nalways send with the request the\
          \ **vehicle** parameters that are important for your use case."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          $ref: "#/components/schemas/Profile"
        style: form
      - description: "The distances [m] or travel times [s] of the horizons, depending\
          \ on the **horizonType**. Limited to 5 horizons (or 3 with a **routeId**)."
        explode: false
        in: query
        name: horizons
        required: true
        schema:
          items:
            example: 100
            format: int32
            minimum: 1
            type: integer
          maxItems: 5
          minItems: 1
          type: array
        style: form
      - explode: true
        in: query
        name: horizonType
        required: false
        schema:
          $ref: "#/components/schemas/HorizonType"
        style: form
      - description: |-
          Routing-relevant options like driving direction or the use of additional data.
          Use array notation like `options[trafficMode]=AVERAGE` to set options.
        explode: true
        in: query
        name: options
        required: false
        schema:
          $ref: "#/components/schemas/ReachableOptions"
        style: deepObject
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReachableAreasId"
          description: Response on success.
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Response on failure.
      tags:
      - Reachable Areas
  /reachable-areas/{id}:
    delete:
      description: "Cancels a reachable areas calculation and deletes the calculated\
        \ results specified by its ID. Results already calculated cannot be requested\
        \ by its ID, anymore."
      operationId: deleteReachableAreas
      parameters:
      - description: The ID of the calculated reachable areas.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Response on success.
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Response on failure.
      tags:
      - Reachable Areas
    get:
      description: Gets the results of a reachable areas calculation specified by
        its ID.
      operationId: getReachableAreas
      parameters:
      - description: The ID of the calculated reachable areas.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: |
          If the calculation is still running, this operation will be blocked and will not return before this period [ms] expires. If the calculation is completed, it will return immediately.

          The default of 0 ms will cause the operation to return immediately in any case. Use a value > 0 to implement long polling to reduce the number of requests. See the [tutorial](https://developer.myptv.com/en/resources/tutorials/general/how-use-asynchronous-requests-ptv-developer-apis) on asynchronous requests for details.
        explode: true
        in: query
        name: maximumPollingPeriod
        required: false
        schema:
          default: 0
          format: int32
          maximum: 50000
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReachableAreasResponse"
          description: Response on success.
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Response on failure.
      tags:
      - Reachable Areas
  /reachable-locations:
    post:
      description: Starts the calculation of the sets of reachable and unreachable
        locations from the given ones and creates them as the result.
      operationId: startAndCreateReachableLocations
      parameters:
      - description: |-
          The start or destination waypoint.
          The format of the waypoint is `<lat>,<lon>[;<attribute>;<attribute>;...]`
          representing a point with the latitude value in degrees from south to north
          and the longitude value in degrees (WGS84/EPSG:4326) from west to east.
          This point will be matched to the nearest possible road.
          By default the air-line connection between given and matched coordinates is not included in the distance or duration.
          We will refer to this type of waypoint as an _on-road waypoint_.

          The behaviour of a waypoint can be changed by appending the following attributes:
            * `includeLastMeters` to include the air-line connection between given and matched coordinates in the distance or duration.
            We will refer to this type of waypoint as an _off-road waypoint_.
            * `roadAccess=<lat>,<lon>`, to use these coordinates for matching to the nearest road. Implies **includeLastMeters**, i.e.
            the air-line connection between the waypoint coordinates and the matched coordinates
            is included in the distance or duration. This is useful if the waypoint should not be matched to the nearest possible road but to some road further away,
            e.g. garage exit at a different road.

          See [here](./concepts/waypoints) for more information.
        explode: true
        in: query
        name: waypoint
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Instead of the waypoint mentioned above, a **routeId** from a previously calculated route or a matched track can be entered.
          More information and applying restrictions can be found [here](./concepts/route-ids).
        example: 3a58b824-fa8b-47eb-a5b8-73d6b753e1b4
        explode: true
        in: query
        name: routeId
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: "A profile defines a vehicle by a set of attributes, matching\
          \ typical transport situations.\nIt must be the name of one of the [predefined\
          \ profiles](../data-api/concepts/profiles) such as _EUR_TRAILER_TRUCK_.\n\
          \nIf this parameter is not specified and the first waypoint or the routeId\
          \ is located in the Americas,\n_USA_8_SEMITRAILER_5AXLE_ is used as the\
          \ default instead of _EUR_TRAILER_TRUCK_.\n\nIf the first waypoint or the\
          \ routeId is located in the Americas but a non-American profile is specified\
          \ or vice-versa, a warning is returned (routing only).\nAlways use a profile\
          \ which matches the region of the waypoints to obtain best results.\n\n\
          If the attributes of the profile do not fit to your vehicle, the values\
          \ can be changed by the corresponding attributes in the **vehicle** parameter\
          \ (routing only). \nThe values of the predefined profiles may be adapted\
          \ to reflect current vehicle standards. To obtain the same results when\
          \ values change, it is recommended to \nalways send with the request the\
          \ **vehicle** parameters that are important for your use case."
        explode: true
        in: query
        name: profile
        required: false
        schema:
          $ref: "#/components/schemas/Profile"
        style: form
      - description: "The distance [m] or travel time [s] of the horizons, depending\
          \ of the **horizonType** (limited to 100 km or 1 hours)."
        explode: true
        in: query
        name: horizon
        required: true
        schema:
          example: 100
          format: int32
          minimum: 1
          type: integer
        style: form
      - explode: true
        in: query
        name: horizonType
        required: false
        schema:
          $ref: "#/components/schemas/HorizonType"
        style: form
      - description: |-
          Routing-relevant options like driving direction or the use of additional data.
          Use array notation like `options[trafficMode]=AVERAGE` to set options.
        explode: true
        in: query
        name: options
        required: false
        schema:
          $ref: "#/components/schemas/ReachableOptions"
        style: deepObject
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Locations"
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReachableLocationsId"
          description: Response on success.
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Response on failure.
      tags:
      - Reachable Locations
  /reachable-locations/{id}:
    delete:
      description: "Cancels a reachable locations calculation and deletes the calculated\
        \ results specified by its ID. Results already calculated cannot be requested\
        \ by its ID, anymore."
      operationId: deleteReachableLocations
      parameters:
      - description: The ID of the calculated reachable locations.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: Response on success.
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Response on failure.
      tags:
      - Reachable Locations
    get:
      description: Gets the results of a reachable locations calculation specified
        by its ID.
      operationId: getReachableLocations
      parameters:
      - description: The ID of the calculated reachable locations.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: |
          If the calculation is still running, this operation will be blocked and will not return before this period [ms] expires. If the calculation is completed, it will return immediately.

          The default of 0 ms will cause the operation to return immediately in any case. Use a value > 0 to implement long polling to reduce the number of requests. See the [tutorial](https://developer.myptv.com/en/resources/tutorials/general/how-use-asynchronous-requests-ptv-developer-apis) on asynchronous requests for details.
        explode: true
        in: query
        name: maximumPollingPeriod
        required: false
        schema:
          default: 0
          format: int32
          maximum: 50000
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReachableLocationsResponse"
          description: Response on success.
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
          description: Response on failure.
      tags:
      - Reachable Locations
components:
  parameters:
    WaypointParameter:
      description: |-
        The start or destination waypoint.
        The format of the waypoint is `<lat>,<lon>[;<attribute>;<attribute>;...]`
        representing a point with the latitude value in degrees from south to north
        and the longitude value in degrees (WGS84/EPSG:4326) from west to east.
        This point will be matched to the nearest possible road.
        By default the air-line connection between given and matched coordinates is not included in the distance or duration.
        We will refer to this type of waypoint as an _on-road waypoint_.

        The behaviour of a waypoint can be changed by appending the following attributes:
          * `includeLastMeters` to include the air-line connection between given and matched coordinates in the distance or duration.
          We will refer to this type of waypoint as an _off-road waypoint_.
          * `roadAccess=<lat>,<lon>`, to use these coordinates for matching to the nearest road. Implies **includeLastMeters**, i.e.
          the air-line connection between the waypoint coordinates and the matched coordinates
          is included in the distance or duration. This is useful if the waypoint should not be matched to the nearest possible road but to some road further away,
          e.g. garage exit at a different road.

        See [here](./concepts/waypoints) for more information.
      explode: true
      in: query
      name: waypoint
      required: false
      schema:
        type: string
      style: form
    RouteIdParameter:
      description: |-
        Instead of the waypoint mentioned above, a **routeId** from a previously calculated route or a matched track can be entered.
        More information and applying restrictions can be found [here](./concepts/route-ids).
      example: 3a58b824-fa8b-47eb-a5b8-73d6b753e1b4
      explode: true
      in: query
      name: routeId
      required: false
      schema:
        format: uuid
        type: string
      style: form
    ReachableAreasIdParameter:
      description: The ID of the calculated reachable areas.
      explode: false
      in: path
      name: id
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    ReachableLocationsIdParameter:
      description: The ID of the calculated reachable locations.
      explode: false
      in: path
      name: id
      required: true
      schema:
        format: uuid
        type: string
      style: simple
    MaximumPollingPeriodParameter:
      description: |
        If the calculation is still running, this operation will be blocked and will not return before this period [ms] expires. If the calculation is completed, it will return immediately.

        The default of 0 ms will cause the operation to return immediately in any case. Use a value > 0 to implement long polling to reduce the number of requests. See the [tutorial](https://developer.myptv.com/en/resources/tutorials/general/how-use-asynchronous-requests-ptv-developer-apis) on asynchronous requests for details.
      explode: true
      in: query
      name: maximumPollingPeriod
      required: false
      schema:
        default: 0
        format: int32
        maximum: 50000
        minimum: 0
        type: integer
      style: form
    ReachableOptionsParameter:
      description: |-
        Routing-relevant options like driving direction or the use of additional data.
        Use array notation like `options[trafficMode]=AVERAGE` to set options.
      explode: true
      in: query
      name: options
      required: false
      schema:
        $ref: "#/components/schemas/ReachableOptions"
      style: deepObject
    HorizonsParameter:
      description: "The distances [m] or travel times [s] of the horizons, depending\
        \ on the **horizonType**. Limited to 5 horizons (or 3 with a **routeId**)."
      explode: false
      in: query
      name: horizons
      required: true
      schema:
        items:
          example: 100
          format: int32
          minimum: 1
          type: integer
        maxItems: 5
        minItems: 1
        type: array
      style: form
    HorizonTypeParameter:
      explode: true
      in: query
      name: horizonType
      required: false
      schema:
        $ref: "#/components/schemas/HorizonType"
      style: form
    ProfileParameter:
      description: "A profile defines a vehicle by a set of attributes, matching typical\
        \ transport situations.\nIt must be the name of one of the [predefined profiles](../data-api/concepts/profiles)\
        \ such as _EUR_TRAILER_TRUCK_.\n\nIf this parameter is not specified and the\
        \ first waypoint or the routeId is located in the Americas,\n_USA_8_SEMITRAILER_5AXLE_\
        \ is used as the default instead of _EUR_TRAILER_TRUCK_.\n\nIf the first waypoint\
        \ or the routeId is located in the Americas but a non-American profile is\
        \ specified or vice-versa, a warning is returned (routing only).\nAlways use\
        \ a profile which matches the region of the waypoints to obtain best results.\n\
        \nIf the attributes of the profile do not fit to your vehicle, the values\
        \ can be changed by the corresponding attributes in the **vehicle** parameter\
        \ (routing only). \nThe values of the predefined profiles may be adapted to\
        \ reflect current vehicle standards. To obtain the same results when values\
        \ change, it is recommended to \nalways send with the request the **vehicle**\
        \ parameters that are important for your use case."
      explode: true
      in: query
      name: profile
      required: false
      schema:
        $ref: "#/components/schemas/Profile"
      style: form
    ProfileParameterPost:
      description: "A profile defines a vehicle by a set of attributes, matching typical\
        \ transport situations.\nIt must either be the name of one of the [predefined\
        \ profiles](../data-api/concepts/profiles) such as _EUR_TRAILER_TRUCK_ or\
        \ a UUID of a predefined [vehicle model](../data-api/code-samples/vehicle-models)\
        \ from the Data API.\n\nIf this parameter is not specified and the first waypoint\
        \ or the routeId is located in the Americas,\n_USA_8_SEMITRAILER_5AXLE_ is\
        \ used as the default instead of _EUR_TRAILER_TRUCK_.\n\nIf the first waypoint\
        \ or the routeId is located in the Americas but a non-American profile is\
        \ specified or vice-versa, a warning is returned (routing only).\nAlways use\
        \ a profile which matches the region of the waypoints to obtain best results.\n\
        \nIf a model of an electric vehicle is used, the electricity consumption of\
        \ the concrete vehicle model can be calculated.\nSome parameters like **vehicle[engineType]**\
        \ cannot be used with a model of an electric vehicle.\nThose parameters are\
        \ automatically filled as applicable from the selected model. \nPlease refer\
        \ to the [concept](./concepts/model-based-ev-consumption-calculation) to see\
        \ specifically which parameters are not compatible.\nThese vehicle model profiles\
        \ are in a preview state, the API is stable, feature changes could be introduced\
        \ in future.\n\nIf the attributes of the profile do not fit to your vehicle,\
        \ the values can be changed by the corresponding attributes in the **vehicle**\
        \ parameter (routing only). \nThe values of the predefined profiles may be\
        \ adapted to reflect current vehicle standards. To obtain the same results\
        \ when values change, it is recommended to \nalways send with the request\
        \ the **vehicle** parameters that are important for your use case."
      explode: true
      in: query
      name: profile
      required: false
      schema:
        $ref: "#/components/schemas/Profile"
      style: form
    VehicleParameter:
      description: |-
        Physical and legal properties of the vehicle such as its dimensions to override the values of the selected **profile**.

        These parameters will be ignored for non-motorized profiles such as _BICYCLE_ or _PEDESTRIAN_.
        Unsupported parameters such as **electricityType** for combustion vehicles should not be specified in the request.

        Use array notation like `vehicle[emissionStandard]=EURO_5` to set vehicle attributes.
      explode: true
      in: query
      name: vehicle
      required: false
      schema:
        $ref: "#/components/schemas/Vehicle"
      style: deepObject
    DriverParameter:
      description: |-
        Options regarding the drivers' working hours.
        If no driver object with a working hours preset is passed with the request, working hours will be unlimited.
      explode: true
      in: query
      name: driver
      required: false
      schema:
        $ref: "#/components/schemas/Driver"
      style: deepObject
    OptionsParameter:
      description: |-
        Routing-relevant options like date of travel or the use of additional data.
        Use array notation like `options[trafficMode]=AVERAGE` to set options.
      explode: true
      in: query
      name: options
      required: false
      schema:
        $ref: "#/components/schemas/Options"
      style: deepObject
    EmissionOptionsParameter:
      description: "Relevant options to report emissions.\nUse array notation like\
        \ `emissionOptions[calculationMethods]=ISO14083_2023` to set options.\n\n\
        This parameter supersedes emission-related values in **results**. \nIf specified\
        \ the emission-related values in **results** will be ignored."
      explode: true
      in: query
      name: emissionOptions
      required: false
      schema:
        $ref: "#/components/schemas/EmissionOptions"
      style: deepObject
    EvOptionsParameter:
      description: |-
        Relevant options to report the electricity consumption of an electric vehicle along a route when _EV_REPORT_, _EV_STATUS_EVENTS_, _EV_STATUS_EVENTS_POLYLINE_ or _EV_CHARGE_EVENTS_ are requested in the **results**.
        Use array notation like `evOptions[initialStateOfCharge]=100` to set options.

        This parameter is in a preview state, the API is stable, feature changes could be introduced in future.
      explode: true
      in: query
      name: evOptions
      required: false
      schema:
        $ref: "#/components/schemas/EvOptions"
      style: deepObject
    MonetaryOptionsParameter:
      description: |-
        Relevant options to report the monetary costs of a route when _MONETARY_COSTS_ are requested in the **results**.
        Used for monetary cost routing when **options[routingMode]=MONETARY** is set.
        The costs have to be specified in the currency that is set in **options[currency]**.
      explode: true
      in: query
      name: monetaryCostOptions
      required: false
      schema:
        $ref: "#/components/schemas/MonetaryCostOptions"
      style: deepObject
    ResultsParameter:
      description: "Comma-separated list that defines which results will be returned.\n\
        \n**Main results:**\n * `ROUTE_ID`\n    Response includes the route ID. See\
        \ [here](./concepts/route-ids) for more information.\n * `POLYLINE`\n    Response\
        \ includes the complete **polyline** of the entire route in the format specified\
        \ by **options[polylineFormat]**.\n * `LEGS`\n    Response includes information\
        \ about the route **legs** defined as the parts of the route between two consecutive\
        \ waypoints.\n * `LEGS_POLYLINE`\n    Response includes the **polyline** of\
        \ each of the **legs** in the format specified by **options[polylineFormat]**.\
        \ _LEGS_ will automatically be included.\n * `ALTERNATIVE_ROUTES`\n    Response\
        \ includes up to three alternatives in addition to the optimal route. \n \
        \   Not supported, if more than two on-road or off-road waypoints are specified\
        \ or if **options[routingMode]=MONETARY** is specified.\n    Please note that\
        \ the additional calculations will degrade the performance.  \n * `GUIDED_NAVIGATION`\n\
        \    Response includes the guided navigation information for the [PTV Navigator](https://www.myptv.com/en/logistics-software/ptv-navigator).\
        \  \n    See [here](./concepts/guided-navigation) for more information.\n\
        \ * `MONETARY_COSTS`\n    Response includes a report with monetary costs for\
        \ the route. See [here](./concepts/monetary-costs) for more information.\n\
        \n**Toll-related results:**\n * `TOLL_COSTS`\n    Response includes the toll\
        \ **costs** of the route.\n * `TOLL_SECTIONS`\n    Response includes the list\
        \ of toll **sections** defined by the toll operators.\n * `TOLL_SYSTEMS`\n\
        \    Response includes the list of toll **systems** defined by the toll operators.\n\
        \ * `TOLL_EVENTS`\n    Response includes **events** when a toll road is entered,\
        \ exited or a toll booth is passed.\n\n**Events:**\n * `MANEUVER_EVENTS`\n\
        \    Response includes **events** for a **maneuver** when the driver has to\
        \ take an action, e.g. turn left or right.\n * `BORDER_EVENTS`\n    Response\
        \ includes **events** when a **border** of a country or subdivision is crossed\
        \ by the route.\n * `VIOLATION_EVENTS`\n    Response includes **events** when\
        \ the route contains a **violation**, e.g. entering or exiting an area where\
        \ passing with the current vehicle is prohibited.\n * `VIOLATION_EVENTS_POLYLINE`\n\
        \    The response contains the **polyline** of each route violation. _VIOLATION_EVENTS_\
        \ will automatically be included.\n * `WAYPOINT_EVENTS`\n    Response includes\
        \ **events** when a **waypoint** is reached by the route.\n * `UTC_OFFSET_CHANGE_EVENTS`\n\
        \    Response includes **events** when the offset to UTC changes (**utcOffsetChange**).\n\
        \ * `COMBINED_TRANSPORT_EVENTS`\n    Response includes **events** when a combined\
        \ transport is entered or exited.\n * `TRAFFIC_EVENTS`\n    Response includes\
        \ **events** when a traffic incident such as a traffic jam is reached by the\
        \ route.\n * `TRAFFIC_EVENTS_POLYLINE`\n    The response contains the **polyline**\
        \ of each traffic event. _TRAFFIC_EVENTS_ will automatically be included.\n\
        \ * `LOW_EMISSION_ZONE_EVENTS` \n    Response includes **events** when a low-emission\
        \ zone is entered or exited by the route.\n * `DELIVERY_ONLY_EVENTS` \n  \
        \  Response includes **events** when a road prohibited except for delivery\
        \ vehicles is entered or exited by the route.\n * `DELIVERY_ONLY_EVENTS_POLYLINE`\n\
        \    The response contains the **polyline** of each delivery-only event. _DELIVERY_ONLY_EVENTS_\
        \ will automatically be included.\n\n**Emission-related results:**\n\nThese\
        \ results are superseded by the parameter **emissionOptions**. \nIf **emissionOptions**\
        \ is specified the emission-related results will be ignored.\n * `EMISSIONS_EN16258_2012`\n\
        \    Response includes information on **emissions** (**EN16258_2012**) calculated\
        \ according to EN16258 from 2012 (a.k.a. CEN) based on the total fuel consumption\
        \ for this route.\n    Only vehicles with **engineType** _COMBUSTION_ and\
        \ **fuelType** _GASOLINE_, _DIESEL_, _COMPRESSED_NATURAL_GAS_ or _LIQUEFIED_PETROLEUM_GAS_\
        \ are supported.\n    For _GASOLINE_ and _DIESEL_, an arbitrary **bioFuelRatio**\
        \ is supported.\n    This is a European emission calculation method which\
        \ should only be used with [European profiles](../data-api/concepts/profiles).\n\
        \    This result is mutually exclusive with **EMISSIONS_EN16258_2012_HBEFA**.\n\
        \ * `EMISSIONS_EN16258_2012_HBEFA`\n    Response includes information on **emissions**\
        \ (**EN16258_2012**) calculated according to EN 16258 from 2012 (a.k.a. CEN)\
        \ based on the total fuel consumption for this route\n    which is automatically\
        \ calculated through HBEFA 4.2. The **averageFuelConsumption** will be ignored.\n\
        \    This is a European emission calculation method which should only be used\
        \ with [European profiles](../data-api/concepts/profiles).\n    Supported\
        \ vehicles are the same as those of _EMISSIONS_EN16258_2012_.\n    This result\
        \ is mutually exclusive with **EMISSIONS_EN16258_2012**.\n * `EMISSIONS_ISO14083_2022`\n\
        \    Draft version of ISO 14083:2023. See **EMISSIONS_ISO14083_2023** for\
        \ more information.\n * `EMISSIONS_ISO14083_2022_DEFAULT_CONSUMPTION`\n  \
        \  Draft version of ISO 14083:2023. See **EMISSIONS_ISO14083_2023_DEFAULT_CONSUMPTION**\
        \ for more information.\n * `EMISSIONS_ISO14083_2023`\n    Response includes\
        \ information on **emissions** (**ISO14083_2023**) calculated according to\
        \ ISO 14083:2023 (a.k.a. ISO) based on the total fuel and electricity consumption\
        \ for this route.\n    Only supported for [European and American profiles](../data-api/concepts/profiles).\
        \ Emissions are calculated using the respective factors.\n    All fuel and\
        \ electricity types are supported, for _GASOLINE_ and _DIESEL_ an arbitrary\
        \ **bioFuelRatio** is supported.\n    For **engineType** _HYBRID_ or **engineType**\
        \ _COMBUSTION_ with **fuelType** _CNG_GASOLINE_ or _LPG_GASOLINE_, an arbitrary\
        \ **hybridRatio** is supported.\n    This result is mutually exclusive with\
        \ all other ISO14083 calculations.\n * `EMISSIONS_ISO14083_2023_DEFAULT_CONSUMPTION`\n\
        \    Response includes information on **emissions** (**ISO14083_2023**) calculated\
        \ according to ISO 14083:2023 (a.k.a. ISO) for based on the default fuel and\
        \ electricity consumption for this route\n    which is automatically calculated\
        \ through HBEFA 4.2. The **averageFuelConsumption** and **averageElectricityConsumption**\
        \ will be ignored.\n    Only supported for [European profiles](../data-api/concepts/profiles).\
        \ Emissions are calculated using the European factors.\n    Supported vehicles\
        \ are the same as those of _EMISSIONS_ISO14083_2023_.\n    This result is\
        \ mutually exclusive with all other ISO14083 calculations.\n * `EMISSIONS_FRENCH_CO2E_DECREE_2017_639`\n\
        \    Response includes information on **emissions** (**French_CO2e_Decree_2017_639**)\
        \ calculated according to the French CO2E decree from 2017 based on the total\
        \ fuel consumption for this route.\n    Only vehicles with **engineType**\
        \ _COMBUSTION_ and **fuelType** _GASOLINE_, _DIESEL_, _COMPRESSED_NATURAL_GAS_\
        \ or _LIQUEFIED_PETROLEUM_GAS_ are supported.\n    For _GASOLINE_ a **bioFuelRatio**\
        \ of _0_, _10_ and _85_ is supported, for _DIESEL_ _0_ and _30_.\n    This\
        \ is a European emission calculation method which should only be used with\
        \ [European profiles](../data-api/concepts/profiles).\n\n**Results available\
        \ only in the POST operation:**\n * `SCHEDULE_EVENTS`\n    We recommend to\
        \ additionally request _WAYPOINT_EVENTS_ to assign service and recreation\
        \ events to the waypoint at which they take place, in particular to distinguish\
        \ them when there are several waypoints at the same location.\n    Response\
        \ includes **events** when the driver takes a break or a rest, performs service\
        \ or waits for a waypoint to open (**schedule**).\n * `SCHEDULE_EVENTS_WITH_DRIVING`\n\
        \    Response includes **events** when the driver drives, takes a break or\
        \ a rest, performs service or waits for a waypoint to open (**schedule**).\
        \ _SCHEDULE_EVENTS_ will automatically be included.\n    We recommend to additionally\
        \ request _WAYPOINT_EVENTS_ to assign service and recreation events to the\
        \ waypoint at which they take place, in particular to distinguish them when\
        \ there are several waypoints at the same location.\n * `SCHEDULE_REPORT`\n\
        \    Response includes the **scheduleReport** which provides an overview of\
        \ the times of the schedule of this route including break and rest times.\n\
        \ * `EV_REPORT`\n    Response includes a report with detailed electricity\
        \ consumption for electric vehicles for the route and, if they are requested,\
        \ for legs. This is only available for concrete models of electric vehicles\
        \ but not for general routing profiles (see documentation of **profile**).\
        \ This result is in a preview state, the API is stable, feature changes could\
        \ be introduced in future.\n * `EV_STATUS_EVENTS`\n    Response includes events\
        \ reporting the electricity consumption along the route in more detail. This\
        \ is only available for concrete models of electric vehicles but not for general\
        \ routing profiles (see documentation of **profile**). This result is in a\
        \ preview state, the API is stable, feature changes could be introduced in\
        \ future.\n * `EV_STATUS_EVENTS_POLYLINE`\n    Response includes the polyline\
        \ for each **evStatus**-event since the previous **evStatus**-event. _EV_STATUS_EVENTS_\
        \ will automatically be included. This is only available for concrete models\
        \ of electric vehicles but not for general routing profiles (see documentation\
        \ of **profile**). This result is in a preview state, the API is stable, feature\
        \ changes could be introduced in future.\n * `EV_CHARGE_EVENTS`\n    Response\
        \ includes events proposing where the battery of the electric vehicle should\
        \ be charged. The charging time is a proposal, currently for information only.\
        \ It is not included in the travel time of the route and the start time of\
        \ subsequent events is not offset by it. This is only available for concrete\
        \ models of electric vehicles but not for general routing profiles (see documentation\
        \ of **profile**). This result is in a preview state, the API is stable, feature\
        \ changes could be introduced in future.\n\n_TOLL_COSTS_, _TOLL_SECTIONS_,\
        \ _TOLL_SYSTEMS_ and _TOLL_EVENTS_ will be ignored for non-motorized profiles\
        \ such as _BICYCLE_ or _PEDESTRIAN_.\nFor electric vehicles and non-motorized\
        \ profiles such as _BICYCLE_ or _PEDESTRIAN_ all emission values will be 0."
      example:
      - POLYLINE
      - TOLL_EVENTS
      explode: false
      in: query
      name: results
      required: false
      schema:
        items:
          $ref: "#/components/schemas/Results"
        type: array
      style: form
  schemas:
    Vehicle:
      properties:
        engineType:
          $ref: "#/components/schemas/EngineType"
        fuelType:
          $ref: "#/components/schemas/FuelType"
        electricityType:
          $ref: "#/components/schemas/ElectricityType"
        averageFuelConsumption:
          description: |
            The average fuel consumption of the vehicle.
            Depending on the **fuelType** [l/100km] for liquid fuel types or [kg/100km] for gaseous fuel types.

            Supported for **engineType** _COMBUSTION_  or _HYBRID_. Relevant for `emissions`.
          example: 35
          exclusiveMinimum: true
          format: double
          minimum: 0
          type: number
        averageElectricityConsumption:
          description: |
            The average electricity consumption of the vehicle [kWh/100km].

            Supported for **engineType** _ELECTRIC_ or _HYBRID_. Relevant for `emissions`.
          example: 115
          exclusiveMinimum: true
          format: double
          minimum: 0
          type: number
        bioFuelRatio:
          description: |
            The ratio of biofuel to conventional fuel [%], i.e. 10 for E10 with 10% biofuel.

            Supported for **engineType** _COMBUSTION_ or _HYBRID_ and only for the fuel types _GASOLINE_, _DIESEL_, _CNG_GASOLINE_ and _LNG_GASOLINE_.
            Relevant for `emissions`.
          example: 0
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        hybridRatio:
          description: |
            Electric energy usage ratio from the total amount of energy consumed by the vehicle.

            Supported for **engineType** _HYBRID_. Relevant for `emissions`.
          example: 50
          format: int32
          maximum: 99
          minimum: 1
          type: integer
        dualFuelRatio:
          description: |
            Ratio of CNG or LPG usage from the total amount of fuel consumption.

            Supported for **engineType** _COMBUSTION_ with **fuelType**  _CNG_GASOLINE_ or _LPG_GASOLINE_. Relevant for `emissions`.
          example: 50
          format: int32
          maximum: 99
          minimum: 1
          type: integer
        cylinderCapacity:
          description: |
            The cylinder capacity of the vehicle [cm&#x00B3;]. This value is present for compatibility reasons and does not influence
            any of the results.

            Supported for **engineType** _COMBUSTION_ or _HYBRID_.
          example: 12000
          format: int32
          minimum: 1
          type: integer
        emissionStandard:
          $ref: "#/components/schemas/EmissionStandard"
        co2EmissionClass:
          description: "The CO&#8322; emission class valid in the European Union.\
            \ See also the \n[Directive 1999/62/EC](https://eur-lex.europa.eu/eli/dir/1999/62/2022-03-24)\
            \ of the European Parliament and \nof the Council on the charging of heavy\
            \ goods vehicles for the use of certain infrastructures, Article 7ga.\n\
            \nMust be 1 for combustion and hybrid vehicles with any **emissionStandard**,\
            \ 2-4 for combustion and hybrid vehicles with **emissionStandard**\nof\
            \ at least _EURO_6_, and 5 for electric vehicles. \n\nRelevant for `toll`.\n"
          example: 1
          format: int32
          maximum: 5
          minimum: 1
          type: integer
        lowEmissionZoneTypes:
          deprecated: true
          description: "Comma-separated list of the low-emission zone types of the\
            \ vehicle.\nThis parameter is deprecated and superseded by **lowEmissionZoneApprovals**.\n\
            When still being used, only low-emission zones in Germany are affected,\
            \ zones\nin other countries which need an environmental badge or vehicle\
            \ registration can be entered without restriction.\nIt is not possible\
            \ to specify both parameters.\n\nAvailable values are provided by type\
            \ `LowEmissionZoneTypes`: \n\"DE_GREEN\" \"DE_YELLOW\" \"DE_RED\" \"DE_NONE\"\
            \n\nRelevant for `routing`.\n"
          type: string
        lowEmissionZoneApprovals:
          description: "Comma-separated list of approvals to enter low-emission zones.\n\
            Usually, such approvals are environmental badges to be placed on the windscreen,\n\
            but that can also be any other kind of approval or vehicle registration\n\
            allowing it to enter a low-emission zone.\n\nLow-emission zones which\
            \ do not need any kind of approval but depend only on the **emissionStandard**\n\
            are not affected by this parameter. Instead they can be entered if the\
            \ **emissionStandard** \nis sufficient. Electric vehicles can always enter\
            \ these zones.\n\nThe default of the selected predefined profile allows\
            \ entering all low-emission zones\nthe vehicle can get an approval for.\
            \ So, if you do not want to care about that and your \nvehicle operates\
            \ in a region where it has all necessary approvals, leave this parameter\
            \ empty.\n\nIn order to consider low-emission zones depending on the actually\
            \ available approvals, i.e. on \nthe environmental badges on the windscreen\
            \ and other vehicle registrations, specify all of them here.\nThe vehicle\
            \ can then enter only those zones for which a proper approval is present.\
            \ Low-emission zones in countries\nfor which no value is specified cannot\
            \ be entered.\n\nAvailable values are provided by type `LowEmissionZoneApprovals`.\n\
            \"NONE\" \"AT_EURO_1\" \"AT_EURO_2\" \"AT_EURO_3\" \"AT_EURO_4\" \"AT_EURO_5\"\
            \ \"AT_EURO_6\"\n\"DE_GREEN\" \"DE_YELLOW\" \"DE_RED\" \"DK_AUTHORIZED\"\
            \ \"ES_CAT_B\" \"ES_CAT_C\" \"ES_CAT_ECO\" \"ES_CAT_ZERO\"\n\"FR_CRITAIR_0\"\
            \ \"FR_CRITAIR_1\" \"FR_CRITAIR_2\" \"FR_CRITAIR_3\" \"FR_CRITAIR_4\"\
            \ \"FR_CRITAIR_5\"\n\nOnly one value per country can be specified. Relevant\
            \ for `routing`.\nSee [here](./concepts/low-emission-zones) for more information.\n"
          example: "DE_GREEN,DK_AUTHORIZED,FR_CRITAIR_1"
          type: string
          x-extensible-enum:
          - NONE
          - AT_EURO_1
          - AT_EURO_2
          - AT_EURO_3
          - AT_EURO_4
          - AT_EURO_5
          - AT_EURO_6
          - DE_GREEN
          - DE_YELLOW
          - DE_RED
          - DK_AUTHORIZED
          - ES_CAT_B
          - ES_CAT_C
          - ES_CAT_ECO
          - ES_CAT_ZERO
          - FR_CRITAIR_0
          - FR_CRITAIR_1
          - FR_CRITAIR_2
          - FR_CRITAIR_3
          - FR_CRITAIR_4
          - FR_CRITAIR_5
        lowEmissionZoneExemptions:
          description: "Comma-separated list of exemptions to enter low-emission zones.\n\
            \nAvailable values are provided by type `LowEmissionZoneExemptions`:\n\
            \"BE_LAGE_EMISSIEZONE_ANTWERPEN\" \"BE_LAGE_EMISSIEZONE_GENT\" \"BE_ZONE_BASSE_EMISSION_BRUXELLES\"\
            \ \"DK_AALBORG_MILJOZONE\" \"DK_ARHUS_MILJOZONE\" \"DK_FREDERIKSBERG_MILJOZONE\"\
            \ \"DK_KOBENHAVN_MILJOZONE\" \"DK_ODENSE_MILJOZONE\" \"ES_ZBE_ALMERIA\"\
            \ \"ES_ZBE_BILBAO\" \"ES_ZBE_CORDOBA\" \"ES_ZBE_SAN_SEBASTIAN\" \"ES_ZBE_TORREMOLINOS\"\
            \ \"ES_ZBE_VALLADOLID\" \"FR_STRASBOURG_ZFE\" \"GB_ABERDEEN_LEZ\" \"GB_BATH_CAZ\"\
            \ \"GB_BIRMINGHAM_CAZ\" \"GB_BRADFORD_CAZ\" \"GB_BRISTOL_CAZ\" \"GB_DUNDEE_LEZ\"\
            \ \"GB_EDINBURGH_LEZ\" \"GB_GLASGOW_LEZ\" \"GB_LONDON_ULTRA_LOW_EMISSION_ZONE\"\
            \ \"GB_NEWCASTLE_CAZ\" \"GB_PORTSMOUTH_CAZ\" \"GB_SHEFFIELD_CAZ\" \"IT_MILANO_AREA_C\"\
            \ \"IT_PALERMO_ZTL\" \"NL_AMSTERDAM_MILIEUZONE\" \"NL_AMSTERDAM_ZERO_EMISSIEZONE\"\
            \ \"NL_ARNHEM_MILIEUZONE\" \"NL_ASSEN_ZERO_EMISSIEZONE\" \"NL_BREDA_MILIEUZONE\"\
            \ \"NL_DELFT_HAAG_ZERO_EMISSIEZONE\" \"NL_DELFT_MILIEUZONE\" \"NL_DEN_HAAG_MILIEUZONE\"\
            \ \"NL_DEN_HAAG_ZERO_EMISSIEZONE\" \"NL_EINDHOVEN_MILIEUZONE\" \"NL_EINDHOVEN_ZERO_EMISSIEZONE\"\
            \ \"NL_GOUDA_ZERO_EMISSIEZONE\" \"NL_HAARLEM_MILIEUZONE\" \"NL_LEIDEN_MILIEUZONE\"\
            \ \"NL_LEIDEN_ZERO_EMISSIEZONE\" \"NL_MAASTRICHT_MILIEUZONE\" \"NL_MAASTRICHT_ZERO_EMISSIEZONE\"\
            \ \"NL_MAASVLAKTE_ROTTERDAM_MILIEUZONE\" \"NL_NIJMEGEN_ZERO_EMISSIEZONE\"\
            \ \"NL_RIJSWIJK_MILIEUZONE\" \"NL_ROTTERDAM_MILIEUZONE\" \"NL_ROTTERDAM_ZERO_EMISSIEZONE\"\
            \ \"NL_S_GRAVENDIJKWAL_MILIEUZONE\" \"NL_S_HERTOGENBOSCH_MILIEUZONE\"\
            \ \"NL_TILBURG_MILIEUZONE\" \"NL_TILBURG_ZERO_EMISSIEZONE\" \"NL_UTRECHT_MILIEUZONE\"\
            \ \"NL_UTRECHT_ZERO_EMISSIEZONE\" \"NL_ZWOLLE_ZERO_EMISSIEZONE\"\n   \
            \        \nRelevant for `routing`.\nSee [here](./concepts/low-emission-zones)\
            \ for more information.\n"
          example: "FR_STRASBOURG_ZFE,GB_LONDON_ULTRA_LOW_EMISSION_ZONE"
          type: string
          x-extensible-enum:
          - BE_LAGE_EMISSIEZONE_ANTWERPEN
          - BE_LAGE_EMISSIEZONE_GENT
          - BE_ZONE_BASSE_EMISSION_BRUXELLES
          - DK_AALBORG_MILJOZONE
          - DK_ARHUS_MILJOZONE
          - DK_FREDERIKSBERG_MILJOZONE
          - DK_KOBENHAVN_MILJOZONE
          - DK_ODENSE_MILJOZONE
          - ES_ZBE_ALMERIA
          - ES_ZBE_BILBAO
          - ES_ZBE_CORDOBA
          - ES_ZBE_SAN_SEBASTIAN
          - ES_ZBE_TORREMOLINOS
          - ES_ZBE_VALLADOLID
          - FR_STRASBOURG_ZFE
          - GB_ABERDEEN_LEZ
          - GB_BATH_CAZ
          - GB_BIRMINGHAM_CAZ
          - GB_BRADFORD_CAZ
          - GB_BRISTOL_CAZ
          - GB_DUNDEE_LEZ
          - GB_EDINBURGH_LEZ
          - GB_GLASGOW_LEZ
          - GB_LONDON_ULTRA_LOW_EMISSION_ZONE
          - GB_NEWCASTLE_CAZ
          - GB_PORTSMOUTH_CAZ
          - GB_SHEFFIELD_CAZ
          - IT_MILANO_AREA_C
          - IT_PALERMO_ZTL
          - NL_AMSTERDAM_MILIEUZONE
          - NL_AMSTERDAM_ZERO_EMISSIEZONE
          - NL_ARNHEM_MILIEUZONE
          - NL_ASSEN_ZERO_EMISSIEZONE
          - NL_BREDA_MILIEUZONE
          - NL_DELFT_HAAG_ZERO_EMISSIEZONE
          - NL_DELFT_MILIEUZONE
          - NL_DEN_HAAG_MILIEUZONE
          - NL_DEN_HAAG_ZERO_EMISSIEZONE
          - NL_EINDHOVEN_MILIEUZONE
          - NL_EINDHOVEN_ZERO_EMISSIEZONE
          - NL_GOUDA_ZERO_EMISSIEZONE
          - NL_HAARLEM_MILIEUZONE
          - NL_LEIDEN_MILIEUZONE
          - NL_LEIDEN_ZERO_EMISSIEZONE
          - NL_MAASTRICHT_MILIEUZONE
          - NL_MAASTRICHT_ZERO_EMISSIEZONE
          - NL_MAASVLAKTE_ROTTERDAM_MILIEUZONE
          - NL_NIJMEGEN_ZERO_EMISSIEZONE
          - NL_RIJSWIJK_MILIEUZONE
          - NL_ROTTERDAM_MILIEUZONE
          - NL_ROTTERDAM_ZERO_EMISSIEZONE
          - NL_S_GRAVENDIJKWAL_MILIEUZONE
          - NL_S_HERTOGENBOSCH_MILIEUZONE
          - NL_TILBURG_MILIEUZONE
          - NL_TILBURG_ZERO_EMISSIEZONE
          - NL_UTRECHT_MILIEUZONE
          - NL_UTRECHT_ZERO_EMISSIEZONE
          - NL_ZWOLLE_ZERO_EMISSIEZONE
        particleReductionClass:
          $ref: "#/components/schemas/ParticleReductionClass"
        emptyWeight:
          description: |
            The empty weight of the vehicle [kg].

            Relevant for `routing`, `emissions`, `range calculation`.
          example: 15000
          format: int32
          minimum: 1
          type: integer
        loadWeight:
          description: |
            The weight of the vehicle's load [kg].

            Relevant for `routing`, `emissions`, `range calculation`.
          example: 25000
          format: int32
          minimum: 0
          type: integer
        totalPermittedWeight:
          description: "The total permitted weight of the vehicle and its load [kg].\
            \ This is the weight the vehicle is usually registered with.\nIf this\
            \ value is not specified but **totalTechnicallyPermittedWeight** is specified\
            \ then that value is used \nfor both **totalPermittedWeight** and **totalTechnicallyPermittedWeight**.\n\
            \nRelevant for `routing`, `toll`, `emissions`.\n"
          example: 40000
          format: int32
          minimum: 1
          type: integer
        totalTechnicallyPermittedWeight:
          description: "The total technically permitted weight of the vehicle and\
            \ its load [kg]. \nSometimes vehicles are registered with a smaller **totalPermittedWeight**\
            \ than technically possible. For \nsuch cases the possibly larger total\
            \ technically permitted weight is specified here, it is relevant for \n\
            toll calculation in some European countries.\nIf this value is not specified\
            \ but **totalPermittedWeight** is specified then that value is used \n\
            for both **totalPermittedWeight** and **totalTechnicallyPermittedWeight**.\n\
            \nRelevant for `toll`.\n"
          example: 40000
          format: int32
          minimum: 1
          type: integer
        axleWeight:
          description: |
            The maximum distributed weight that may be supported by an axle of the vehicle [kg].

            Relevant for `routing`, `toll`.
          example: 11500
          format: int32
          minimum: 1
          type: integer
        numberOfAxles:
          description: |
            The total number of axles of the vehicle including the trailers.

            Relevant for `toll`.
          example: 5
          format: int32
          minimum: 1
          type: integer
        numberOfTires:
          description: |
            The total number of tires of the vehicle including the trailers.

            Relevant for `toll`.
          example: 10
          format: int32
          minimum: 1
          type: integer
        height:
          description: |
            The height of the vehicle [cm].

            Relevant for `routing`, `toll`.
          example: 400
          format: int32
          minimum: 1
          type: integer
        heightAboveFrontAxle:
          description: |
            The height above the front axle [cm].

            Relevant for `toll`.
          example: 400
          format: int32
          minimum: 1
          type: integer
        length:
          description: |
            The length of the vehicle [cm].

            Relevant for `routing`, `toll`.
          example: 1650
          format: int32
          minimum: 1
          type: integer
        width:
          description: |
            The width of the vehicle [cm].

            Relevant for `routing`, `toll`.
          example: 254
          format: int32
          minimum: 1
          type: integer
        hazardousMaterials:
          description: "Comma-separated list of hazardous materials the vehicle has\
            \ loaded. If none of the specific values applies,\nspecify _OTHER_ to\
            \ mark the vehicle carrying unspecific hazardous materials. If _NONE_\
            \ is specified along with\nother hazardous materials it is ignored. Depending\
            \ on the load the route will avoid roads prohibited\nfor and/or prefer\
            \ roads prescribed for specific hazardous materials.\n\nAvailable values\
            \ are provided by type `HazardousMaterials`: \n\"HAZARDOUS_TO_WATER\"\
            \ \"EXPLOSIVE\" \"FLAMMABLE\" \"RADIOACTIVE\" \"INHALATION_HAZARD\" \"\
            MEDICAL_WASTE\" \"OTHER\" \"NONE\"\n\nRelevant for `routing`.\n"
          type: string
        tunnelRestrictionCode:
          $ref: "#/components/schemas/TunnelRestrictionCode"
        truckRoutes:
          description: "Comma-separated list of truck routes the vehicle has to follow.\n\
            \nAvailable values are provided by type `TruckRoutes`:\n * `DE_LKWUEBERLSTVAUSNV`\n\
            \ Preferred routes for long trucks in Germany, also known as Lang-LKW.\n\
            \ * `NL_LZV`\n Preferred routes for long trucks in the Netherlands, also\
            \ known as LZV (Langere en Zwaardere Vrachtautocombinatie).\n * `NZ_HPMV`\n\
            \ The network for High Productivity Motor Vehicles (HPMV) carrying the\
            \ maximum loads available under a permit (New Zealand Transport Agency).\n\
            \ * `SE_BK_1`\n Public roads and bridges that support up to 64 t total\
            \ permitted weight (Swedish Transport Administration).\n * `SE_BK_2`\n\
            \ Public roads and bridges that support up to 51.4 t total permitted weight.\n\
            \ Actual limit depends on wheelbase and axle weight (Swedish Transport\
            \ Administration).\n * `SE_BK_3`\n Public roads and bridges that support\
            \ up to 37.5 t total permitted weight.\n Actual limit depends on wheelbase\
            \ and axle weight (Swedish Transport Administration).\n * `SE_BK_4`\n\
            \ Public roads and bridges that support up to 74 t total permitted weight\
            \ (draft summer 2018, Swedish Transport Administration).\n * `US_STAA`\n\
            \ Routes that belong to the highway network as defined by the Surface\
            \ Transportation Assistance Act in the US.\n * `US_TD`\n Part of a state-designated\
            \ highway network for trucks in the US.\n * `AU_B_DOUBLE`\n B-Double routes\
            \ as defined in Australia.\n * `AU_B_DOUBLE_HML`\n Routes for B-Double\
            \ vehicle combinations operating at Higher Mass Limits (HML) (Australian\
            \ Transport Administration).\n * `AU_B_TRIPLE`\n B-Triple routes as defined\
            \ in Australia.\n * `AU_B_TRIPLE_HML`\n Routes for B-Triple vehicle combinations\
            \ operating at Higher Mass Limits (HML) (Australian Transport Administration).\n\
            \ * `AU_AB_TRIPLE`\n Routes for AB-Triple vehicle combinations operating\
            \ (Australian Transport Administration).\n * `AU_AB_TRIPLE_HML`\n Routes\
            \ for AB-Triple vehicle combinations operating at Higher Mass Limits (HML)\
            \ (Australian Transport Administration).\n * `GENERAL_TRUCK_ROUTES`\n\
            \ General routes designated for trucks, for example to prevent trucks\
            \ routing through city centres when they are on transit.\n * `NONE`\n\
            \ Overrides the profile settings to specify not to follow any truck routes.\
            \ \n If _NONE_ is specified along with other truck routes it is ignored.\n\
            \nThis parameter will be ignored for non-truck profiles, e.g. _EUR_CAR_,\
            \ _EUR_VAN_, _USA_1_PICKUP_ or _AUS_LCV_LIGHT_COMMERCIAL_\nand for routing\
            \ modes other than _FAST_.\nRelevant for `routing`.\n"
          type: string
        commercial:
          description: |
            Specifies if the vehicle usage is commercial.

            Relevant for `toll`.
          example: false
          type: boolean
        etcSubscriptions:
          description: "Comma-separated list of ETC Subscriptions.\nSee [here](./concepts/electronic-toll-collection)\
            \ for more information on available subscriptions.\n\nAvailable values\
            \ are provided by type `EtcSubscriptionTypes`: \n\"AT_GOBOX\" \"BE_TELETOL\"\
            \ \"BE_VIAPASS\" \"CH_LSVA\" \"DE_QUICKBOX\" \"DE_TOLLCOLLECT\" \"DE_WARNOWTUNNEL_RFID\"\
            \ \"DK_BROPAS_BUSINESS\" \"IT_TELEPASS\" \"NL_TELECARD\" \"NL_TTAG\" \"\
            NO_AUTOPASS\" \"PT_VIA_VERDE\" \"US_APASS\" \"US_BREEZEBY\" \"US_DOWNBEACH_EXPRESSPASS\"\
            \ \"US_EPASS\" \"US_EXPRESSACCOUNT\" \"US_EXPRESSCARD\" \"US_EXPRESSPASS\"\
            \ \"US_EXPRESSTOLL\" \"US_EZPASS\" \"US_EZTAG\" \"US_FASTRAK\" \"US_GEAUXPASS\"\
            \ \"US_GOODTOGO\" \"US_GOPASS\" \"US_IPASS\" \"US_KTAG\" \"US_LEEWAY\"\
            \ \"US_MACKINACBRIDGE_MACPASS\" \"US_MARYLAND_EZPASS\" \"US_MASSACHUSETTS_EZPASS\"\
            \ \"US_NC_QUICKPASS\" \"US_NEWHAMPSHIRE_EZPASS\" \"US_NEWJERSEY_EZPASS\"\
            \ \"US_NEWYORK_EZPASS\" \"US_NEXPRESS\" \"US_OHIO_EZPASS\" \"US_PALPASS\"\
            \ \"US_PIKEPASS\" \"US_RIVERLINK\" \"US_RIVERLINK_NOTRANSPONDER\" \"US_SEAWAYTRANSITCARD\"\
            \ \"US_SUNPASS\" \"US_TOLLTAG\" \"US_TXTAG\" \"US_VIRGINIA_EZPASS\" \"\
            US_WESTVIRGINIA_EZPASS\" \"US_PEACHPASS\" \"US_NEXUS\" \"US_DELAWARE_EZPASS\"\
            \ \"US_GROSSEILETOLLBRIDGE_PASSTAG\" \"US_EZPASS_PAYBYPLATE\"\n\nRelevant\
            \ for `toll`.\n"
          type: string
      type: object
    EngineType:
      description: "The engine type of the vehicle.\nWhen changing the engine type\
        \ further parameters must be specified to define a valid vehicle and to\n\
        obtain proper results. For a hybrid or an electric vehicle **electricityType**\
        \ and **averageElectricityConsumption**\nmust be specified, for a hybrid vehicle\
        \ additionally the **hybridRatio**.\n\nThis and all dependent parameters cannot\
        \ be used with a model of an electric vehicle, because all applicable \nparameters\
        \ are automatically provided by the model.\nPlease refer to the [concept](./concepts/model-based-ev-consumption-calculation)\
        \ to see specifically which \nparameters are not compatible and automatically\
        \ set from the vehicle model.\n\nRelevant for `toll`, `emissions`.\n"
      enum:
      - COMBUSTION
      - ELECTRIC
      - HYBRID
      example: COMBUSTION
      type: string
      x-enum-varnames:
      - COMBUSTION
      - ELECTRIC
      - HYBRID
    FuelType:
      description: |
        The fuel type of the vehicle.
        The fuel types _CNG_GASOLINE_ and _LNG_GASOLINE_ are used for dual-fuel vehicles, therefore the **dualFuelRatio**
        has to be specified. These fuel types cannot be used with hybrid vehicles.

        Supported for **engineType** _COMBUSTION_ and _HYBRID_. Relevant for `emissions`.
      enum:
      - GASOLINE
      - DIESEL
      - COMPRESSED_NATURAL_GAS
      - LIQUEFIED_PETROLEUM_GAS
      - LIQUEFIED_NATURAL_GAS
      - CNG_GASOLINE
      - LPG_GASOLINE
      - ETHANOL
      - NONE
      example: DIESEL
      type: string
      x-enum-varnames:
      - GASOLINE
      - DIESEL
      - COMPRESSED_NATURAL_GAS
      - LIQUEFIED_PETROLEUM_GAS
      - LIQUEFIED_NATURAL_GAS
      - CNG_GASOLINE
      - LPG_GASOLINE
      - ETHANOL
      - NONE
    ElectricityType:
      description: |
        The electricity type of the vehicle.

        Supported for **engineType** _ELECTRIC_ or _HYBRID_. Relevant for `emissions`.
      enum:
      - BATTERY
      - HYDROGEN_FUEL_CELL
      - NONE
      example: BATTERY
      type: string
      x-enum-varnames:
      - BATTERY
      - HYDROGEN_FUEL_CELL
      - NONE
    EmissionStandard:
      description: "The emission standard of the vehicle valid in the European Union.\n\
        This parameter is not only important for proper toll and emission calculation,\
        \ \nthere are also low-emission zones which can be entered only if the vehicle\
        \ has a proper emission standard.\nIn contrast to explicit approvals like\
        \ environmental badges or vehicle registrations\nthe emission standard is\
        \ automatically considered when entering such low-emission zones.\n\nValues\
        \ different from _NONE_ are supported for **engineType** _COMBUSTION_ and\
        \ _HYBRID_. Relevant for `routing`, `toll`, `emissions`.\n"
      enum:
      - NONE
      - EURO_0
      - EURO_1
      - EURO_2
      - EURO_3
      - EURO_4
      - EURO_5
      - EURO_EEV
      - EURO_6
      - EURO_6C
      - EURO_6D_TEMP
      - EURO_6D
      - EURO_6E
      - EURO_7
      example: EURO_6
      type: string
      x-enum-varnames:
      - NONE
      - EURO_0
      - EURO_1
      - EURO_2
      - EURO_3
      - EURO_4
      - EURO_5
      - EURO_EEV
      - EURO_6
      - EURO_6C
      - EURO_6D_TEMP
      - EURO_6D
      - EURO_6E
      - EURO_7
    LowEmissionZoneTypes:
      enum:
      - DE_GREEN
      - DE_YELLOW
      - DE_RED
      - DE_NONE
      type: string
      x-enum-varnames:
      - DE_GREEN
      - DE_YELLOW
      - DE_RED
      - DE_NONE
    LowEmissionZoneApprovals:
      enum:
      - NONE
      - AT_EURO_1
      - AT_EURO_2
      - AT_EURO_3
      - AT_EURO_4
      - AT_EURO_5
      - AT_EURO_6
      - DE_GREEN
      - DE_YELLOW
      - DE_RED
      - DK_AUTHORIZED
      - ES_CAT_B
      - ES_CAT_C
      - ES_CAT_ECO
      - ES_CAT_ZERO
      - FR_CRITAIR_0
      - FR_CRITAIR_1
      - FR_CRITAIR_2
      - FR_CRITAIR_3
      - FR_CRITAIR_4
      - FR_CRITAIR_5
      type: string
      x-enum-varnames:
      - NONE
      - AT_EURO_1
      - AT_EURO_2
      - AT_EURO_3
      - AT_EURO_4
      - AT_EURO_5
      - AT_EURO_6
      - DE_GREEN
      - DE_YELLOW
      - DE_RED
      - DK_AUTHORIZED
      - ES_CAT_B
      - ES_CAT_C
      - ES_CAT_ECO
      - ES_CAT_ZERO
      - FR_CRITAIR_0
      - FR_CRITAIR_1
      - FR_CRITAIR_2
      - FR_CRITAIR_3
      - FR_CRITAIR_4
      - FR_CRITAIR_5
    LowEmissionZoneExemptions:
      enum:
      - BE_LAGE_EMISSIEZONE_ANTWERPEN
      - BE_LAGE_EMISSIEZONE_GENT
      - BE_ZONE_BASSE_EMISSION_BRUXELLES
      - DK_AALBORG_MILJOZONE
      - DK_ARHUS_MILJOZONE
      - DK_FREDERIKSBERG_MILJOZONE
      - DK_KOBENHAVN_MILJOZONE
      - DK_ODENSE_MILJOZONE
      - ES_ZBE_ALMERIA
      - ES_ZBE_BILBAO
      - ES_ZBE_CORDOBA
      - ES_ZBE_SAN_SEBASTIAN
      - ES_ZBE_TORREMOLINOS
      - ES_ZBE_VALLADOLID
      - FR_STRASBOURG_ZFE
      - GB_ABERDEEN_LEZ
      - GB_BATH_CAZ
      - GB_BIRMINGHAM_CAZ
      - GB_BRADFORD_CAZ
      - GB_BRISTOL_CAZ
      - GB_DUNDEE_LEZ
      - GB_EDINBURGH_LEZ
      - GB_GLASGOW_LEZ
      - GB_LONDON_ULTRA_LOW_EMISSION_ZONE
      - GB_NEWCASTLE_CAZ
      - GB_PORTSMOUTH_CAZ
      - GB_SHEFFIELD_CAZ
      - IT_MILANO_AREA_C
      - IT_PALERMO_ZTL
      - NL_AMSTERDAM_MILIEUZONE
      - NL_AMSTERDAM_ZERO_EMISSIEZONE
      - NL_ARNHEM_MILIEUZONE
      - NL_ASSEN_ZERO_EMISSIEZONE
      - NL_BREDA_MILIEUZONE
      - NL_DELFT_HAAG_ZERO_EMISSIEZONE
      - NL_DELFT_MILIEUZONE
      - NL_DEN_HAAG_MILIEUZONE
      - NL_DEN_HAAG_ZERO_EMISSIEZONE
      - NL_EINDHOVEN_MILIEUZONE
      - NL_EINDHOVEN_ZERO_EMISSIEZONE
      - NL_GOUDA_ZERO_EMISSIEZONE
      - NL_HAARLEM_MILIEUZONE
      - NL_LEIDEN_MILIEUZONE
      - NL_LEIDEN_ZERO_EMISSIEZONE
      - NL_MAASTRICHT_MILIEUZONE
      - NL_MAASTRICHT_ZERO_EMISSIEZONE
      - NL_MAASVLAKTE_ROTTERDAM_MILIEUZONE
      - NL_NIJMEGEN_ZERO_EMISSIEZONE
      - NL_RIJSWIJK_MILIEUZONE
      - NL_ROTTERDAM_MILIEUZONE
      - NL_ROTTERDAM_ZERO_EMISSIEZONE
      - NL_S_GRAVENDIJKWAL_MILIEUZONE
      - NL_S_HERTOGENBOSCH_MILIEUZONE
      - NL_TILBURG_MILIEUZONE
      - NL_TILBURG_ZERO_EMISSIEZONE
      - NL_UTRECHT_MILIEUZONE
      - NL_UTRECHT_ZERO_EMISSIEZONE
      - NL_ZWOLLE_ZERO_EMISSIEZONE
      type: string
      x-enum-varnames:
      - BE_LAGE_EMISSIEZONE_ANTWERPEN
      - BE_LAGE_EMISSIEZONE_GENT
      - BE_ZONE_BASSE_EMISSION_BRUXELLES
      - DK_AALBORG_MILJOZONE
      - DK_ARHUS_MILJOZONE
      - DK_FREDERIKSBERG_MILJOZONE
      - DK_KOBENHAVN_MILJOZONE
      - DK_ODENSE_MILJOZONE
      - ES_ZBE_ALMERIA
      - ES_ZBE_BILBAO
      - ES_ZBE_CORDOBA
      - ES_ZBE_SAN_SEBASTIAN
      - ES_ZBE_TORREMOLINOS
      - ES_ZBE_VALLADOLID
      - FR_STRASBOURG_ZFE
      - GB_ABERDEEN_LEZ
      - GB_BATH_CAZ
      - GB_BIRMINGHAM_CAZ
      - GB_BRADFORD_CAZ
      - GB_BRISTOL_CAZ
      - GB_DUNDEE_LEZ
      - GB_EDINBURGH_LEZ
      - GB_GLASGOW_LEZ
      - GB_LONDON_ULTRA_LOW_EMISSION_ZONE
      - GB_NEWCASTLE_CAZ
      - GB_PORTSMOUTH_CAZ
      - GB_SHEFFIELD_CAZ
      - IT_MILANO_AREA_C
      - IT_PALERMO_ZTL
      - NL_AMSTERDAM_MILIEUZONE
      - NL_AMSTERDAM_ZERO_EMISSIEZONE
      - NL_ARNHEM_MILIEUZONE
      - NL_ASSEN_ZERO_EMISSIEZONE
      - NL_BREDA_MILIEUZONE
      - NL_DELFT_HAAG_ZERO_EMISSIEZONE
      - NL_DELFT_MILIEUZONE
      - NL_DEN_HAAG_MILIEUZONE
      - NL_DEN_HAAG_ZERO_EMISSIEZONE
      - NL_EINDHOVEN_MILIEUZONE
      - NL_EINDHOVEN_ZERO_EMISSIEZONE
      - NL_GOUDA_ZERO_EMISSIEZONE
      - NL_HAARLEM_MILIEUZONE
      - NL_LEIDEN_MILIEUZONE
      - NL_LEIDEN_ZERO_EMISSIEZONE
      - NL_MAASTRICHT_MILIEUZONE
      - NL_MAASTRICHT_ZERO_EMISSIEZONE
      - NL_MAASVLAKTE_ROTTERDAM_MILIEUZONE
      - NL_NIJMEGEN_ZERO_EMISSIEZONE
      - NL_RIJSWIJK_MILIEUZONE
      - NL_ROTTERDAM_MILIEUZONE
      - NL_ROTTERDAM_ZERO_EMISSIEZONE
      - NL_S_GRAVENDIJKWAL_MILIEUZONE
      - NL_S_HERTOGENBOSCH_MILIEUZONE
      - NL_TILBURG_MILIEUZONE
      - NL_TILBURG_ZERO_EMISSIEZONE
      - NL_UTRECHT_MILIEUZONE
      - NL_UTRECHT_ZERO_EMISSIEZONE
      - NL_ZWOLLE_ZERO_EMISSIEZONE
    ParticleReductionClass:
      description: |
        The particle reduction class (Partikelminderungsklasse) according to 'Anlage XIV zu &sect; 48 StVZO' (German law).
        This value is present for compatibility reasons and does not influence any of the results.

        Supported for **engineType** _COMBUSTION_ and _HYBRID_.
      enum:
      - PMK_0
      - PMK_1
      - PMK_2
      - PMK_3
      - PMK_4
      - NONE
      example: PMK_0
      type: string
      x-enum-varnames:
      - PMK_0
      - PMK_1
      - PMK_2
      - PMK_3
      - PMK_4
      - NONE
    HazardousMaterials:
      enum:
      - HAZARDOUS_TO_WATER
      - EXPLOSIVE
      - FLAMMABLE
      - RADIOACTIVE
      - INHALATION_HAZARD
      - MEDICAL_WASTE
      - OTHER
      - NONE
      example: OTHER
      type: string
      x-enum-varnames:
      - HAZARDOUS_TO_WATER
      - EXPLOSIVE
      - FLAMMABLE
      - RADIOACTIVE
      - INHALATION_HAZARD
      - MEDICAL_WASTE
      - OTHER
      - NONE
    TunnelRestrictionCode:
      description: |
        The tunnel restriction code according to ADR (European Agreement Concerning the International Carriage of Dangerous Goods by Road) depending on the load of the vehicle.
        See [here](./concepts/truck-restrictions#tunnel-restriction-codes) for more information.

        Relevant for `routing`.
      enum:
      - NONE
      - B
      - C
      - D
      - E
      example: NONE
      type: string
      x-enum-varnames:
      - NONE
      - B
      - C
      - D
      - E
    TruckRoutesList:
      description: "Comma-separated list of truck routes the vehicle has to follow.\n\
        \nAvailable values are provided by type `TruckRoutes`:\n * `DE_LKWUEBERLSTVAUSNV`\n\
        \ Preferred routes for long trucks in Germany, also known as Lang-LKW.\n *\
        \ `NL_LZV`\n Preferred routes for long trucks in the Netherlands, also known\
        \ as LZV (Langere en Zwaardere Vrachtautocombinatie).\n * `NZ_HPMV`\n The\
        \ network for High Productivity Motor Vehicles (HPMV) carrying the maximum\
        \ loads available under a permit (New Zealand Transport Agency).\n * `SE_BK_1`\n\
        \ Public roads and bridges that support up to 64 t total permitted weight\
        \ (Swedish Transport Administration).\n * `SE_BK_2`\n Public roads and bridges\
        \ that support up to 51.4 t total permitted weight.\n Actual limit depends\
        \ on wheelbase and axle weight (Swedish Transport Administration).\n * `SE_BK_3`\n\
        \ Public roads and bridges that support up to 37.5 t total permitted weight.\n\
        \ Actual limit depends on wheelbase and axle weight (Swedish Transport Administration).\n\
        \ * `SE_BK_4`\n Public roads and bridges that support up to 74 t total permitted\
        \ weight (draft summer 2018, Swedish Transport Administration).\n * `US_STAA`\n\
        \ Routes that belong to the highway network as defined by the Surface Transportation\
        \ Assistance Act in the US.\n * `US_TD`\n Part of a state-designated highway\
        \ network for trucks in the US.\n * `AU_B_DOUBLE`\n B-Double routes as defined\
        \ in Australia.\n * `AU_B_DOUBLE_HML`\n Routes for B-Double vehicle combinations\
        \ operating at Higher Mass Limits (HML) (Australian Transport Administration).\n\
        \ * `AU_B_TRIPLE`\n B-Triple routes as defined in Australia.\n * `AU_B_TRIPLE_HML`\n\
        \ Routes for B-Triple vehicle combinations operating at Higher Mass Limits\
        \ (HML) (Australian Transport Administration).\n * `AU_AB_TRIPLE`\n Routes\
        \ for AB-Triple vehicle combinations operating (Australian Transport Administration).\n\
        \ * `AU_AB_TRIPLE_HML`\n Routes for AB-Triple vehicle combinations operating\
        \ at Higher Mass Limits (HML) (Australian Transport Administration).\n * `GENERAL_TRUCK_ROUTES`\n\
        \ General routes designated for trucks, for example to prevent trucks routing\
        \ through city centres when they are on transit.\n * `NONE`\n Overrides the\
        \ profile settings to specify not to follow any truck routes. \n If _NONE_\
        \ is specified along with other truck routes it is ignored.\n\nThis parameter\
        \ will be ignored for non-truck profiles, e.g. _EUR_CAR_, _EUR_VAN_, _USA_1_PICKUP_\
        \ or _AUS_LCV_LIGHT_COMMERCIAL_\nand for routing modes other than _FAST_.\n\
        Relevant for `routing`.\n"
      type: string
    TruckRoutes:
      enum:
      - DE_LKWUEBERLSTVAUSNV
      - NL_LZV
      - NZ_HPMV
      - SE_BK_1
      - SE_BK_2
      - SE_BK_3
      - SE_BK_4
      - US_STAA
      - US_TD
      - AU_B_DOUBLE
      - AU_B_DOUBLE_HML
      - AU_B_TRIPLE
      - AU_B_TRIPLE_HML
      - AU_AB_TRIPLE
      - AU_AB_TRIPLE_HML
      - GENERAL_TRUCK_ROUTES
      - NONE
      example: SE_BK_1
      type: string
      x-enum-varnames:
      - DE_LKWUEBERLSTVAUSNV
      - NL_LZV
      - NZ_HPMV
      - SE_BK_1
      - SE_BK_2
      - SE_BK_3
      - SE_BK_4
      - US_STAA
      - US_TD
      - AU_B_DOUBLE
      - AU_B_DOUBLE_HML
      - AU_B_TRIPLE
      - AU_B_TRIPLE_HML
      - AU_AB_TRIPLE
      - AU_AB_TRIPLE_HML
      - GENERAL_TRUCK_ROUTES
      - NONE
    EtcSubscriptionTypes:
      enum:
      - AT_GOBOX
      - BE_TELETOL
      - BE_VIAPASS
      - CH_LSVA
      - DE_QUICKBOX
      - DE_TOLLCOLLECT
      - DE_WARNOWTUNNEL_RFID
      - DK_BROPAS_BUSINESS
      - IT_TELEPASS
      - NL_TELECARD
      - NL_TTAG
      - NO_AUTOPASS
      - PT_VIA_VERDE
      - US_APASS
      - US_BREEZEBY
      - US_DOWNBEACH_EXPRESSPASS
      - US_EPASS
      - US_EXPRESSACCOUNT
      - US_EXPRESSCARD
      - US_EXPRESSPASS
      - US_EXPRESSTOLL
      - US_EZPASS
      - US_EZTAG
      - US_FASTRAK
      - US_GEAUXPASS
      - US_GOODTOGO
      - US_GOPASS
      - US_IPASS
      - US_KTAG
      - US_LEEWAY
      - US_MACKINACBRIDGE_MACPASS
      - US_MARYLAND_EZPASS
      - US_MASSACHUSETTS_EZPASS
      - US_NC_QUICKPASS
      - US_NEWHAMPSHIRE_EZPASS
      - US_NEWJERSEY_EZPASS
      - US_NEWYORK_EZPASS
      - US_NEXPRESS
      - US_OHIO_EZPASS
      - US_PALPASS
      - US_PIKEPASS
      - US_RIVERLINK
      - US_RIVERLINK_NOTRANSPONDER
      - US_SEAWAYTRANSITCARD
      - US_SUNPASS
      - US_TOLLTAG
      - US_TXTAG
      - US_VIRGINIA_EZPASS
      - US_WESTVIRGINIA_EZPASS
      - US_PEACHPASS
      - US_NEXUS
      - US_DELAWARE_EZPASS
      - US_GROSSEILETOLLBRIDGE_PASSTAG
      - US_EZPASS_PAYBYPLATE
      example: DE_TOLLCOLLECT
      type: string
      x-enum-varnames:
      - AT_GOBOX
      - BE_TELETOL
      - BE_VIAPASS
      - CH_LSVA
      - DE_QUICKBOX
      - DE_TOLLCOLLECT
      - DE_WARNOWTUNNEL_RFID
      - DK_BROPAS_BUSINESS
      - IT_TELEPASS
      - NL_TELECARD
      - NL_TTAG
      - NO_AUTOPASS
      - PT_VIA_VERDE
      - US_APASS
      - US_BREEZEBY
      - US_DOWNBEACH_EXPRESSPASS
      - US_EPASS
      - US_EXPRESSACCOUNT
      - US_EXPRESSCARD
      - US_EXPRESSPASS
      - US_EXPRESSTOLL
      - US_EZPASS
      - US_EZTAG
      - US_FASTRAK
      - US_GEAUXPASS
      - US_GOODTOGO
      - US_GOPASS
      - US_IPASS
      - US_KTAG
      - US_LEEWAY
      - US_MACKINACBRIDGE_MACPASS
      - US_MARYLAND_EZPASS
      - US_MASSACHUSETTS_EZPASS
      - US_NC_QUICKPASS
      - US_NEWHAMPSHIRE_EZPASS
      - US_NEWJERSEY_EZPASS
      - US_NEWYORK_EZPASS
      - US_NEXPRESS
      - US_OHIO_EZPASS
      - US_PALPASS
      - US_PIKEPASS
      - US_RIVERLINK
      - US_RIVERLINK_NOTRANSPONDER
      - US_SEAWAYTRANSITCARD
      - US_SUNPASS
      - US_TOLLTAG
      - US_TXTAG
      - US_VIRGINIA_EZPASS
      - US_WESTVIRGINIA_EZPASS
      - US_PEACHPASS
      - US_NEXUS
      - US_DELAWARE_EZPASS
      - US_GROSSEILETOLLBRIDGE_PASSTAG
      - US_EZPASS_PAYBYPLATE
    AvoidFeature:
      enum:
      - TOLL
      - FERRIES
      - RAIL_SHUTTLES
      - HIGHWAYS
      type: string
      x-enum-varnames:
      - TOLL
      - FERRIES
      - RAIL_SHUTTLES
      - HIGHWAYS
    Profile:
      default: EUR_TRAILER_TRUCK
      description: "A profile defines a vehicle by a set of attributes, matching typical\
        \ transport situations."
      maxLength: 50
      minLength: 1
      type: string
    AccessType:
      description: "Indicates if a route section is entered or exited. Not present\
        \ for violation events of type _SCHEDULE_.\n * `ENTER` - Entering a section.\
        \  \n * `EXIT` - Exiting a section.  \n * `PASS` - Passing an intersection,\
        \ a gate or a specific location. Can only occur with violation events of type\
        \ _RESTRICTED_ACCESS_ and _PROHIBITED_BY_INTERSECTING_POLYLINE_."
      enum:
      - ENTER
      - EXIT
      - PASS
      type: string
      x-enum-varnames:
      - ENTER
      - EXIT
      - PASS
    CombinedTransportType:
      description: |-
        The type of the combined transport, i.e. how the vehicle is transported.
         * `BOAT` - The combined transport is by boat, i.e. on a ferry.
         * `RAIL` - The combined transport is by rail, i.e. on a train or rail shuttle.
      enum:
      - BOAT
      - RAIL
      type: string
      x-enum-varnames:
      - BOAT
      - RAIL
    BorderEvent:
      description: "Issued when a border of a country of a subdivision is crossed\
        \ by the route, i.e. the current country code changes. Requires _BORDER_EVENTS_\
        \ to be requested."
      example:
        countryCode: countryCode
      properties:
        countryCode:
          description: "The country or subdivision the route enters represented by\
            \ its code according to [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\
            \ or [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) if referring\
            \ to a subdivision."
          type: string
      required:
      - countryCode
      type: object
    Results:
      enum:
      - ROUTE_ID
      - LEGS
      - LEGS_POLYLINE
      - TOLL_COSTS
      - TOLL_SECTIONS
      - TOLL_SYSTEMS
      - TOLL_EVENTS
      - POLYLINE
      - MANEUVER_EVENTS
      - BORDER_EVENTS
      - VIOLATION_EVENTS
      - VIOLATION_EVENTS_POLYLINE
      - WAYPOINT_EVENTS
      - UTC_OFFSET_CHANGE_EVENTS
      - COMBINED_TRANSPORT_EVENTS
      - TRAFFIC_EVENTS
      - TRAFFIC_EVENTS_POLYLINE
      - LOW_EMISSION_ZONE_EVENTS
      - DELIVERY_ONLY_EVENTS
      - DELIVERY_ONLY_EVENTS_POLYLINE
      - SCHEDULE_EVENTS
      - SCHEDULE_EVENTS_WITH_DRIVING
      - EMISSIONS_EN16258_2012
      - EMISSIONS_EN16258_2012_HBEFA
      - EMISSIONS_ISO14083_2022
      - EMISSIONS_ISO14083_2022_DEFAULT_CONSUMPTION
      - EMISSIONS_ISO14083_2023
      - EMISSIONS_ISO14083_2023_DEFAULT_CONSUMPTION
      - EMISSIONS_FRENCH_CO2E_DECREE_2017_639
      - ALTERNATIVE_ROUTES
      - SCHEDULE_REPORT
      - GUIDED_NAVIGATION
      - MONETARY_COSTS
      - EV_REPORT
      - EV_STATUS_EVENTS
      - EV_STATUS_EVENTS_POLYLINE
      - EV_CHARGE_EVENTS
      type: string
      x-enum-varnames:
      - ROUTE_ID
      - LEGS
      - LEGS_POLYLINE
      - TOLL_COSTS
      - TOLL_SECTIONS
      - TOLL_SYSTEMS
      - TOLL_EVENTS
      - POLYLINE
      - MANEUVER_EVENTS
      - BORDER_EVENTS
      - VIOLATION_EVENTS
      - VIOLATION_EVENTS_POLYLINE
      - WAYPOINT_EVENTS
      - UTC_OFFSET_CHANGE_EVENTS
      - COMBINED_TRANSPORT_EVENTS
      - TRAFFIC_EVENTS
      - TRAFFIC_EVENTS_POLYLINE
      - LOW_EMISSION_ZONE_EVENTS
      - DELIVERY_ONLY_EVENTS
      - DELIVERY_ONLY_EVENTS_POLYLINE
      - SCHEDULE_EVENTS
      - SCHEDULE_EVENTS_WITH_DRIVING
      - EMISSIONS_EN16258_2012
      - EMISSIONS_EN16258_2012_HBEFA
      - EMISSIONS_ISO14083_2022
      - EMISSIONS_ISO14083_2022_DEFAULT_CONSUMPTION
      - EMISSIONS_ISO14083_2023
      - EMISSIONS_ISO14083_2023_DEFAULT_CONSUMPTION
      - EMISSIONS_FRENCH_CO2E_DECREE_2017_639
      - ALTERNATIVE_ROUTES
      - SCHEDULE_REPORT
      - GUIDED_NAVIGATION
      - MONETARY_COSTS
      - EV_REPORT
      - EV_STATUS_EVENTS
      - EV_STATUS_EVENTS_POLYLINE
      - EV_CHARGE_EVENTS
    ErrorResponse:
      example:
        traceId: dc5b4c9a240458dd57128194dfbef0c8
        description: Invalid or missing authentication credentials.
        errorCode: GENERAL_UNAUTHENTICATED
        details:
          message: Invalid API Key.
      properties:
        description:
          description: A human readable message that describes the error.
          type: string
        errorCode:
          description: |-
            A constant string that can be used to identify this error class programmatically.

            If additional information is available for an errorCode, it will be provided as key-value pairs with the parameter **details**. The keys available for a specific errorCode are documented directly with the errorCode. Unless stated otherwise, the values are of type string.

            As an example, the following errorCode provides one key-value pair in the **details**. The key is called **message**.
            * `GENERAL_UNAUTHENTICATED` - Invalid or missing authentication credentials.
              * `message` - An additional error message.

            Note that additional errorCodes as well as the **details** of existing errorCodes may be added at any time. Furthermore, the **description** may change at any time.

            **HTTP status code: 400**
            * `GENERAL_VALIDATION_ERROR` - The validation of the request failed. Details can be found in **causes**.
            * `GENERAL_PARSING_ERROR` - The JSON syntax is invalid.
            * `ROUTING_ERROR` - The calculation failed. Details can be found in **causes**.

            **HTTP status code: 401**
            * `GENERAL_UNAUTHENTICATED` - Invalid or missing authentication credentials.
              * `message` - An additional error message.

            **HTTP status code: 403**
            * `GENERAL_FORBIDDEN` - Insufficient access rights.
            * `GENERAL_QUOTA_EXCEEDED` - The transaction limit is exceeded.
              * `message` - An additional error message.
            * `ROUTING_RESTRICTION_EXCEEDED` - A product-specific restriction is exceeded.

            **HTTP status code: 404**
            * `GENERAL_RESOURCE_NOT_FOUND` - A requested resource does not exist.
              * `message` - An additional error message.

            **HTTP status code: 429**
            * `GENERAL_RATE_LIMIT_EXCEEDED` - The rate limit is exceeded.

            **HTTP status code: 500**
            * `GENERAL_INTERNAL_SERVER_ERROR` - The request could not be processed due to an internal error.
              * `message` - An additional error message.
              * `hint` - A hint how to solve the problem.

            **HTTP status code: 503**
            * `GENERAL_SERVICE_UNAVAILABLE` - The service is temporarily unavailable.

            **HTTP status code: 4xx-5xx**
            * `GENERAL_INTERNAL_GATEWAY_ERROR` - The request could not be processed due to an internal gateway error.
              * `hint` - A hint how to solve the problem.
          type: string
        traceId:
          description: A unique identifier of the corresponding trace forest. It can
            be used to trace errors by the support.
          type: string
        errorId:
          description: A unique identifier specific to this error instance. It can
            be used to trace errors by the support.
          type: string
        causes:
          description: A list of affected parameters and/or properties that caused
            this error.
          items:
            $ref: "#/components/schemas/CausingError"
          type: array
        details:
          additionalProperties: true
          description: Additional properties specific to this error class.
          type: object
      required:
      - description
      - errorCode
      - traceId
      type: object
    CausingError:
      properties:
        description:
          description: A human readable message that describes the error.
          type: string
        errorCode:
          description: |-
            A constant string that can be used to identify this error class programmatically.

            If additional information is available for an errorCode, it will be provided as key-value pairs with the parameter **details**. The keys available for a specific errorCode are documented directly with the errorCode. Unless stated otherwise, the values are of type string.

            As an example, the following errorCode provides one key-value pair in the **details**. The key is called **value**.
            * `GENERAL_INVALID_VALUE` - A parameter is set to an invalid value.
              * `value` - The invalid value.

            Note that additional errorCodes as well as the **details** of existing errorCodes may be added at any time. Furthermore, the **description** may change at any time.

            **Error codes for** `GENERAL_VALIDATION_ERROR`

            * `GENERAL_UNRECOGNIZED_PARAMETER` - A parameter is unknown.
            * `GENERAL_MISSING_PARAMETER` - A required parameter is missing.
            * `GENERAL_TYPE_VIOLATED` - The value of a parameter has an invalid type.
              * `type` - The type.
            * `GENERAL_FORMAT_VIOLATED` - The value of a parameter has an invalid format.
              * `format` - The format.
            * `GENERAL_PATTERN_VIOLATED` - The value of a string parameter does not satisfy the required pattern.
              * `pattern` - The pattern.
            * `GENERAL_MINIMUM_LENGTH_VIOLATED` - The minimum length of a string is violated.
              * `minimumLength` - The minimum length (integer).
            * `GENERAL_MAXIMUM_LENGTH_VIOLATED` - The maximum length of a string is violated.
              * `maximumLength` - The maximum length (integer).
            * `GENERAL_MINIMUM_ITEMS_VIOLATED` - The minimum number of items of an array is violated.
              * `minimumItems` - The minimum number of items (integer).
            * `GENERAL_MAXIMUM_ITEMS_VIOLATED` - The maximum number of items of an array is violated.
              * `maximumItems` - The maximum number of items (integer).
            * `GENERAL_MINIMUM_VALUE_VIOLATED` - The minimum value of a parameter is violated.
              * `minimumValue` - The minimum value (integer or double).
            * `GENERAL_MAXIMUM_VALUE_VIOLATED` - The maximum value of a parameter is violated.
              * `maximumValue` - The maximum value (integer or double).
            * `GENERAL_ENUM_VIOLATED` - The value of a parameter is not one of the specified enum values.
              * `enum` - The allowed enum values.
            * `GENERAL_INVALID_VALUE` - A parameter is set to an invalid value.
              * `value` - The invalid value.
            * `GENERAL_DUPLICATE_PARAMETER` - A parameter is duplicated.
            * `GENERAL_INVALID_LIST` - A list has an invalid format such as duplicate commas.
              * `value` - The invalid list.
            * `GENERAL_INVALID_INTERVAL` - A time interval is invalid, i.e. start is greater than end.
            * `ROUTING_INVALID_WAYPOINT_ATTRIBUTE` - A waypoint attribute is set to an invalid value.
              * `attribute` - The invalid waypoint attribute.
            * `ROUTING_UNRECOGNIZED_WAYPOINT_ATTRIBUTE` - A waypoint attribute is unknown.
              * `attribute` - The invalid waypoint key.
            * `ROUTING_DUPLICATE_WAYPOINT_ATTRIBUTE` - A waypoint attribute is duplicated.
              * `attribute` - The duplicated waypoint key.
            * `ROUTING_WAYPOINT_ATTRIBUTE_CONFLICT` - Two waypoint attributes are in conflict with each other.
              * `attribute` - The first conflicting attribute.
              * `conflictingAttribute` - The second conflicting attribute.
            * `ROUTING_INVALID_MANIPULATION_WAYPOINT_ORDER` - The manipulation waypoint is not valid for start or destination.
            * `ROUTING_INVALID_COMBINED_TRANSPORT_WAYPOINT_ORDER` - The combinedTransport waypoint is not valid for start or destination.
            * `ROUTING_INVALID_WAYPOINT_LIST_FOR_ALTERNATIVE_ROUTES` - Alternative routes are supported only for two on-road or off-road waypoints.
            * `ROUTING_INVALID_WAYPOINT` - A waypoint contains multiple types or none of them, but exactly one must be specified.
            * `ROUTING_MUST_HAVE_WAYPOINTS_OR_ROUTE_ID` - The request must have either at least two **waypoints** or a **routeId**.
            * `ROUTING_EMISSIONS_MUTUALLY_EXCLUSIVE` - All emissions _EN16258_2012_ results and _ISO14083_2022_ or _ISO14083_2023_ results are mutually exclusive.
              * `attribute` - The first conflicting emissions standard.
              * `conflictingAttributes` - The list of other conflicting emissions standards.
            * `ROUTING_START_AND_ARRIVAL_TIME_MUTUALLY_EXCLUSIVE` - **options[startTime]** and **options[arrivalTime]** are mutually exclusive. - _The **parameter** remains empty._
            * `ROUTING_ESTIMATED_DISTANCE_TOO_LONG` - The distance of the route (estimated by air-line) for the selected vehicle is too long. - _The **parameter** remains empty._
              * `distance` - The estimated distance (integer).
              * `limit` - The maximum allowable distance (integer).
            * `ROUTING_PARAMETER_CONFLICT` - Two parameters are in conflict with each other.
              * `conflictingParameter` - The conflicting parameter.
              * `message` - The error message.
            * `ROUTING_NO_VALID_COUNTRY_ALLOWED` - The list of allowed countries does not contain any of the available countries so that the effective list of countries allowed for routing is empty.
              * `allowedCountries` - The list of allowed countries.
            * `ROUTING_ALL_VALID_COUNTRIES_PROHIBITED` - The list of prohibited countries contains all available countries so that the effective list of countries allowed for routing is empty.
              * `prohibitedCountries` - The list of prohibited countries.
            * `ROUTING_MAXIMUM_HORIZON_VALUE_VIOLATED` - The maximum value of horizon is violated.
              * `limit` - The maximum allowable horizon (integer).
            * `ROUTING_MUST_HAVE_ONE_WAYPOINT_OR_ROUTE_ID` - The request must have either a **waypoint** or a **routeId**.
            * `ROUTING_HORIZONS_EQUAL_OR_NOT_ASCENDING` - The horizons have equal values or are not ascending.
              * `value` - The invalid horizon.
            * `ROUTING_ROUTE_TOO_LONG_FOR_REACHABILITY` - The route is too long to be used with reachable areas or locations.
              * `length` - The actual route length (integer).
              * `limit` - The maximum allowable route length (integer).
            * `ROUTING_ALLOWED_AND_PROHIBITED_COUNTRIES_IN_CONFLICT_WITH_ROUTE_ID` - The lists of allowed and prohibited countries are in conflict with the **routeId** which passes an effectively prohibited country.
              * `value` - The value in conflict.
            * `ROUTING_ROUTE_ID_NOT_FOUND` - The **routeId** cannot be found.
              * `value` - The routeId.
            * `ROUTING_ROUTE_ID_CANNOT_BE_USED` - The **routeId** cannot be used for this operation as it was created by a service other than routing and lacks a routing context.
              * `value` - The routeId.
            * `ROUTING_PROFILE_NOT_FOUND` - The requested **profile** could not be found.
              * `value` - The profile name.
            * `ROUTING_UNSUPPORTED_CURRENCY` - The specified currency is not supported.
              * `currency` - The unsupported currency.
            * `ROUTING_PARAMETER_ONLY_SUPPORTED_BY_POST` - The requested parameter is not supported by this GET operation, it is only supported by the corresponding POST operation.
              * `value` - The invalid parameter value.
            * `ROUTING_PARAMETER_NOT_SUPPORTED_BY_GET_ROUTE_BY_ROUTE_ID` - The requested parameter is not supported by this **getRouteByRouteId** operation.
              * `value` - The invalid parameter value.
            * `ROUTING_OPENING_INTERVALS_REQUIRE_TIME` - When using opening intervals with a waypoint and with **options[trafficMode]** _AVERAGE_ a start time has to be specified.
            * `ROUTING_ARRIVAL_TIME_WITH_SCHEDULE` - **options[arrivalTime]** cannot be used with the **results** _SCHEDULE_REPORT_ and _SCHEDULE_EVENT_ nor when **openingIntervals**, **serviceTime** or **workingHoursPreset** are specified.
              * `value` - The invalid parameter value.
            * `ROUTING_INVALID_NUMBER_OF_COORDINATES` - The polyline cannot be parsed because the number of coordinates is not even or less than 4.
              * `value` - The invalid parameter value.
              * `polylineIndex` - The index denoting the polyline in which the error was found (integer).
            * `ROUTING_INVALID_COORDINATE` - The provided coordinate is not in the valid range or cannot be parsed.
              * `value` - The invalid parameter value.
              * `polylineIndex` - The index denoting the polyline in which the error was found (integer).
              * `coordinateIndex` - The index denoting the erroneous coordinate within the polyline (integer).
            * `ROUTING_FEATURE_NOT_SUPPORTED_WITH_MONETARY_COSTS` - The requested feature is not supported when **options[routingMode]** is _MONETARY_.
              * `value` - The invalid parameter value.
            * `ROUTING_MUST_HAVE_MONETARY_COST_VALUE` - Both values **monetaryCostOptions[costPerKilometer]** and **monetaryCostOptions[workingCostPerHour]** are zero. Use a value greater zero for at least one of this **monetaryCostOptions** parameters.
            * `ROUTING_CUSTOM_ROAD_ATTRIBUTE_SCENARIO_NOT_FOUND` - At least one of the requested **options[customRoadAttributeScenarios]** could not be found.
              * `scenarios` - The scenarios which could not be found (comma-separated list).
            * `ROUTING_CUSTOM_ROAD_ATTRIBUTE_SCENARIOS_TOO_LARGE` - The scenarios given in **options[customRoadAttributeScenarios]** are too large and can not all be considered at the same time.
            * `ROUTING_POSITION_AND_WAYPOINT_MUTUALLY_EXCLUSIVE` - **position** and **waypoint** are mutually exclusive. - _The **parameter** remains empty._
            * `ROUTING_VEHICLE_POSITION_MISSING` - The position of the vehicle must be specified by either **position** or **waypoint**. - _The **parameter** remains empty._
            * `ROUTING_UNSUPPORTED_WAYPOINT_TYPE_FOR_ETA_CALCULATION` - The ETA calculation does not support route-manipulation waypoints, combined-transport waypoints or vehicle parameters at waypoints.
              * `waypointIndex` - The index of the waypoint (integer).
            * `ROUTING_MISSING_WAYPOINT_NAME` - The requested route for the **routeId** contains a waypoint which does not have a name.
              * `waypointIndex` - The index of the waypoint (integer).
            * `ROUTING_DUPLICATE_WAYPOINT_NAME` - The requested route for the **routeId** contains waypoints with a duplicate name.
              * `waypointIndexes` - The indexes of the waypoints with the duplicated name (comma-separated list).
              * `name` - The duplicate waypoint name.
            * `ROUTING_WAYPOINT_NAME_NOT_FOUND` - The waypoint name could not be found in the requested route for the **routeId**.
              * `name` - The invalid waypoint name.
            * `ROUTING_VEHICLE_POSITION_BEFORE_FIRST_WAYPOINT` - The position of the vehicle cannot be before the first waypoint.
            * `ROUTING_ROUTE_ID_REQUIRES_WORKLOGBOOK` - The route associated with the given **routeId** has been calculated with a **driver** and requires the **workLogbook** to be specified in the ETA request.
            * `ROUTING_ROUTE_ID_DOES_NOT_SUPPORT_WORKLOGBOOK` - The route associated with the given **routeId** has been calculated without a **driver** and does not support the **workLogbook** specified in the ETA request.
            * `ROUTING_CONFLICTING_LOW_EMISSION_ZONE_TYPES` - Some requested low-emission zone types are in conflict with each other, specify only one of them.
            * `ROUTING_SERVICE_CANNOT_BE_SCHEDULED` - The **serviceTime** at a waypoint cannot be scheduled as it exceeds the maximum time between breaks permitted by the selected **workingHoursPreset**. - _The **parameter** remains empty._

            **Error codes for** `ROUTING_ERROR`

            * `ROUTING_WAYPOINT_CANNOT_BE_MATCHED` - The waypoint cannot be matched to the nearest possible road.
            * `ROUTING_ROUTE_NOT_FOUND` - A route between at least two waypoints could not be found for the current configuration and profile. The **parameter** contains the waypoint where the problematic part that could not be routed starts, i.e., the problematic part of the route is between this waypoint and the next one. Note that only the first problematic part that was encountered is reported.
            * `ROUTING_TIMEOUT` - The route calculation has timed out.
            * `ROUTING_UTC_OFFSET_CANNOT_BE_DETERMINED` - The UTC offset of the start waypoint cannot be determined.
            * `ROUTING_BLOCK_INTERSECTING_ROADS_TOO_MANY_SEGMENTS` - The maximum number of road segments intersecting one polyline must not exceed 5000.

            **Error codes for** `ROUTING_RESTRICTION_EXCEEDED`

            * `ROUTING_TOO_MANY_WAYPOINTS` - The request contains too many waypoints.
              * `limit`- The maximum allowed number of waypoints for a single request (integer).

            **Error codes for** `GENERAL_RESOURCE_NOT_FOUND`

            * `GENERAL_INVALID_ID` - No resource exists for the provided ID.
              * `value` - The ID for which no resource exists.
          type: string
        parameter:
          description: The name of the affected query or path parameter or a JSONPath
            to the affected property of the request.
          type: string
        details:
          additionalProperties: true
          description: Additional properties specific to this error class.
          type: object
      required:
      - description
      - errorCode
      type: object
    Warning:
      example:
        warningCode: warningCode
        description: description
        details:
          key: ""
      properties:
        description:
          description: A human readable message that describes the warning.
          type: string
        warningCode:
          description: "A constant string that can be used to identify this warning\
            \ class programmatically.\n\nIf additional information is available for\
            \ a warningCode, it will be provided as key-value pairs with the parameter\
            \ **details**. The keys available for a specific warningCode are documented\
            \ directly with the warningCode. Unless stated otherwise, the values are\
            \ of type string.\n\nAs an example, the following warningCode provides\
            \ four key-value pairs in the **details**. \nThe keys are called **parameter**,\
            \ **value**, **relatedParameter** and **relatedValue**.\n* `GENERAL_PARAMETER_IGNORED`\
            \ - A parameter was ignored.\n  * `parameter` - The ignored parameter.\n\
            \  * `value` - The value of the ignored parameter.\n  * `relatedParameter`\
            \ - The parameter which caused the parameter in question to be ignored.\n\
            \  * `relatedValue` - The value which caused the parameter in question\
            \ to be ignored. Not present if the conflict is independent of the value.\n\
            \nNote that additional warningCode as well as the **details** of existing\
            \ warningCode may be added at any time. Furthermore, the **description**\
            \ may change at any time.\n\n* `GENERAL_PARAMETER_IGNORED` - A parameter\
            \ was ignored.\n  * `parameter` - The ignored parameter.\n  * `value`\
            \ - The value of the ignored parameter.\n  * `relatedParameter` - The\
            \ parameter which caused the parameter in question to be ignored.\n  *\
            \ `relatedValue` - The value which caused the parameter in question to\
            \ be ignored. Not present if the conflict is independent of the value.\n\
            * `ROUTING_PARAMETER_INCONSISTENCY` - A parameter was inconsistent with\
            \ other vehicle parameters. Some results like emissions or toll may not\
            \ be correct.\n  * `parameter` - The inconsistent parameter.\n  * `value`\
            \ - The value of the inconsistent parameter.\n  * `relatedParameter` -\
            \ The parameter which caused the parameter in question to be inconsistent.\n\
            \  * `relatedValue` - The value which caused the parameter in question\
            \ to be inconsistent.\n* `ROUTING_MISSING_VEHICLE_PARAMETER` - The requested\
            \ vehicle contains a parameter which requires another parameter to be\
            \ specified. Some results like emissions or toll may not be correct.\n\
            \  * `missingParameter` - The missing parameter.\n  * `relatedParameter`\
            \ - The parameter which requires the missing parameter to be specified.\n\
            \  * `relatedValue` - The value which requires the missing parameter to\
            \ be specified.\n* `ROUTING_MANEUVERS_IN_DIFFERENT_LANGUAGE` - The requested\
            \ language is not available for maneuvers, a different language is used\
            \ instead.\n  * `requestedLanguage` - The language requested by the user.\n\
            \  * `usedLanguage` - The language of maneuvers in the response.\n* `ROUTING_UNSUPPORTED_EMISSION_PARAMETER`\
            \ - The requested emission calculation method does not support the specified\
            \ vehicle.\n  * `relatedParameter` - The parameter causing the emission\
            \ calculation failure.\n  * `relatedValue` - The value of the related\
            \ parameter.\n* `ROUTING_REGION_NOT_SUPPORTED_BY_EMISSION_STANDARD` -\
            \ The requested emission calculation method does not support the region\
            \ the profile was designed for.\n  * `region` - The requested region not\
            \ supported by the requested emission calculation method.\n  * `supportedRegions`\
            \ - The regions which are supported by the requested emission calculation\
            \ method.\n  * `emissionStandard` - The requested emission calculation\
            \ method.\n* `ROUTING_COUNTRY_IGNORED` - The country code given in **options[allowedCountries]**\
            \ or **options[prohibitedCountries]** was ignored as it is not covered\
            \ by the map.\n  * `ignoredCountryCode` - The ignored country code.\n\
            * `ROUTING_SUBDIVISION_FALLBACK` - The country code given in **options[allowedCountries]**\
            \ contains a country subdivision code that is not supported by the map,\
            \ and that instead the enclosing country code was used. In such cases,\
            \ routes are constrained to the country, rather than only the subdivision.\n\
            \  * `requestedSubdivisionCode` - The country subdivision code that was\
            \ requested, but cannot be used.\n  * `fallbackCountryCode` - The enclosing\
            \ country that is used as a fallback instead.\n* `ROUTING_LIVE_TRAFFIC_DATA_UNAVAILABLE`\
            \ - Live traffic data are temporarily unavailable.\n* `ROUTING_ETC_SUBSCRIPTION_REQUIRED`\
            \ - The route passes through toll areas but the configured vehicle does\
            \ not contain the required electronic toll collection subscriptions.\n\
            \  * `requiredEtcSubscriptions` - The required electronic toll collection\
            \ subscriptions.\n* `ROUTING_WAYPOINT_MATCH_DISTANCE` - The distance from\
            \ the waypoint to the nearest accessible road is greater than 1000 meters.\
            \ Closed areas, countries or roads can be the reason for this.\n  * `distance`-\
            \ The air-line distance between waypoint and match point on the road.\n\
            \  * `parameter` - The waypoint parameter.\n* `ROUTING_COMBINED_TRANSPORT_WAYPOINT_IGNORED`\
            \ - The combined-transport waypoint was ignored as no connection could\
            \ be found.\n  * `parameter` - The waypoint parameter.\n  * `availableConnections`\
            \ - The list of connections available for the start coordinates (array\
            \ of strings). This will only be returned if connections for the start\
            \ coordinates are found, but none match the destination coordinates.\n\
            * `ROUTING_COMBINED_TRANSPORT_WAYPOINT_AMBIGUOUS` - The combined-transport\
            \ waypoint was ambiguous.\n  * `parameter` - The waypoint parameter.\n\
            \  * `usedConnection` - The connection used for this route.\n  * `availableConnections`\
            \ - The list of connections available for the combined-transport waypoint\
            \ (array of strings).\n* `ROUTING_WAYPOINTS_DONT_MATCH_PROFILE_REGION`\
            \ - The **waypoints** or the **routeId** do not match the region of the\
            \ **profile** specified in the request.\n  * `waypointsRegion` - The region\
            \ of the **waypoints** or **routeId**.\n  * `profileRegion` - The region\
            \ of the profile.\n* `ROUTING_INACTIVE_ROADATTRIBUTE_SCENARIOS` - The\
            \ scenarios given in **options[customRoadAttributeScenarios]** or the\
            \ **routeId** contain at least one which is not active.\n  * `scenarios`\
            \ - The inactive scenarioIds (comma-separated list).\n* `ROUTING_ROADATTRIBUTES_MAYBE_IGNORED`\
            \ - At least one of the scenarios given in **options[customRoadAttributeScenarios]**\
            \ or the **routeId** could not be fully considered in the route calculation\
            \ after a map update, i.e. some road attributes may have been ignored.\n\
            \  * `scenarios` - The scenarios that may be ignored (comma-separated\
            \ list).\n* `ROUTING_PARAMETER_VALUE_DEPRECATED` - The parameter value\
            \ is deprecated.\n  * `parameter` - The deprecated parameter.\n  * `value`\
            \ - The deprecated value.\n* `ROUTING_UPDATED_ROUTE_ID` - The requested\
            \ **routeId** has been updated to a new map.\n* `ROUTING_RANGE_CALCULATION_FALLBACK`\
            \ - A predefined profile is used with range calculation. Only vehicles\
            \ models are officially supported for range calculation (evReport, evStatusEvents,\
            \ evChargeEvents). As a fallback, a similar vehicle model has been used\
            \ for the range calculation. Please consider using a vehicle model for\
            \ this feature.\n* `ROUTING_STATE_OF_CHARGE_BELOW_MINIMUM` - The state\
            \ of charge of the electric vehicle fell below the minimum defined in\
            \ **evOptions[minimumStateOfCharge]** at least once. The calculated route\
            \ may not be feasible.\n* `ROUTING_WEATHER_SERVICE_UNAVAILABLE` - The\
            \ weather service is temporarily unavailable. A fallback to default weather\
            \ was used for the consumption calculation. Please specify the weather\
            \ explicitly, if this is not sufficient.\n* `ROUTING_WEATHER_FORECAST_UNAVAILABLE`\
            \ - The weather forecast for at least one waypoint is unavailable because\
            \ the time is too far in the future. A fallback to default weather is\
            \ used for the consumption calculation if weather is unavailable for all\
            \ waypoints. Please specify the weather explicitly, if this is not sufficient.\n\
            \  * `maximumDaysInFuture` - The maximum number of days the past, for\
            \ which weather forecast is available.\n* `ROUTING_ELEVATIONS_UNAVAILABLE`\
            \ - Elevations are unavailable for regions beyond -60° and +60° latitude.\n\
            \  * `results` - No elevations were considered when calculating these\
            \ **results** for such parts of the route.\n"
          type: string
        details:
          additionalProperties: true
          description: Additional properties specific to this class of warnings.
          type: object
      required:
      - description
      - warningCode
      type: object
    Emissions:
      description: "Emissions such as the CO2-equivalent (CO2e) according to the selected\
        \ standards. \nThe CO2e value is the unit for comparing the radiative forcing\
        \ of a greenhouse gas to carbon\ndioxide according to [ISO 14064-1:2006](https://en.wikipedia.org/wiki/ISO_14064)."
      example:
        iso14083_2022:
          co2eTankToWheel: 0.3353193347011243
          co2eWellToWheel: 0.30937452626664474
          electricityConsumption: 0.6704019297950036
          energyUseTankToWheel: 0.7143538047012307
          fuelConsumption: 0.5944895607614016
          energyUseWellToWheel: 0.08851374739011653
        iso14083_2023:
          co2eTankToWheel: 0.010263654006109402
          co2eWellToWheel: 0.46523964329332457
          electricityConsumption: 0.6519180951018382
          energyUseTankToWheel: 0.8969578798196912
          fuelConsumption: 0.7058770351582356
          energyUseWellToWheel: 0.7740351818741174
        frenchCO2eDecree2017_639:
          co2eWellToWheel: 0.30205796992916245
          co2eTankToWheel: 0.3057610024104934
        en16258_2012:
          co2eTankToWheel: 0.1284659006116532
          co2eWellToWheel: 0.288416212666878
          energyUseTankToWheel: 0.6778324963048014
          fuelConsumption: 0.6965117697638845
          energyUseWellToWheel: 0.6878052220127876
      properties:
        en16258_2012:
          $ref: "#/components/schemas/Emissions_EN16258_2012"
        iso14083_2022:
          $ref: "#/components/schemas/Emissions_ISO14083_2022"
        iso14083_2023:
          $ref: "#/components/schemas/Emissions_ISO14083_2023"
        frenchCO2eDecree2017_639:
          $ref: "#/components/schemas/Emissions_French_CO2e_Decree_2017_639"
      type: object
    Emissions_EN16258_2012:
      description: Emissions according to EN16258 from 2012 (a.k.a. CEN standard).
      example:
        co2eTankToWheel: 0.1284659006116532
        co2eWellToWheel: 0.288416212666878
        energyUseTankToWheel: 0.6778324963048014
        fuelConsumption: 0.6965117697638845
        energyUseWellToWheel: 0.6878052220127876
      properties:
        fuelConsumption:
          description: "The total fuel consumption [kg]."
          format: double
          minimum: 0
          type: number
        co2eTankToWheel:
          description: "The amount of emitted CO2e from tank to wheel [kg]."
          format: double
          minimum: 0
          type: number
        co2eWellToWheel:
          description: "The amount of emitted CO2e from well to wheel [kg]."
          format: double
          minimum: 0
          type: number
        energyUseTankToWheel:
          description: "The tank-to-wheel energy use [MJ]."
          format: double
          minimum: 0
          type: number
        energyUseWellToWheel:
          description: "The well-to-wheel energy use [MJ]."
          format: double
          minimum: 0
          type: number
      required:
      - co2eTankToWheel
      - co2eWellToWheel
      - energyUseTankToWheel
      - energyUseWellToWheel
      - fuelConsumption
      type: object
    Emissions_ISO14083_2022:
      description: Emissions according to the draft version of ISO 14083:2023.
      example:
        co2eTankToWheel: 0.3353193347011243
        co2eWellToWheel: 0.30937452626664474
        electricityConsumption: 0.6704019297950036
        energyUseTankToWheel: 0.7143538047012307
        fuelConsumption: 0.5944895607614016
        energyUseWellToWheel: 0.08851374739011653
      properties:
        fuelConsumption:
          description: "The total conventional fuel consumption [kg]."
          format: double
          minimum: 0
          type: number
        electricityConsumption:
          description: "The total electric power consumption of the vehicle if the\
            \ **engineType** is _ELECTRIC_ or _HYBRID_ [kWh]."
          format: double
          minimum: 0
          type: number
        co2eTankToWheel:
          description: "The amount of emitted CO2e from tank to wheel [kg]."
          format: double
          minimum: 0
          type: number
        co2eWellToWheel:
          description: "The amount of emitted CO2e from well to wheel [kg]."
          format: double
          minimum: 0
          type: number
        energyUseTankToWheel:
          description: "The tank-to-wheel energy use [MJ]."
          format: double
          minimum: 0
          type: number
        energyUseWellToWheel:
          description: "The well-to-wheel energy use [MJ]."
          format: double
          minimum: 0
          type: number
      required:
      - co2eTankToWheel
      - co2eWellToWheel
      - electricityConsumption
      - energyUseTankToWheel
      - energyUseWellToWheel
      - fuelConsumption
      type: object
    Emissions_ISO14083_2023:
      description: Emissions according to ISO 14083:2023 (a.k.a. ISO standard).
      example:
        co2eTankToWheel: 0.010263654006109402
        co2eWellToWheel: 0.46523964329332457
        electricityConsumption: 0.6519180951018382
        energyUseTankToWheel: 0.8969578798196912
        fuelConsumption: 0.7058770351582356
        energyUseWellToWheel: 0.7740351818741174
      properties:
        fuelConsumption:
          description: "The total conventional fuel consumption [kg]."
          format: double
          minimum: 0
          type: number
        electricityConsumption:
          description: "The total electric power consumption of the vehicle if the\
            \ **engineType** is _ELECTRIC_ or _HYBRID_ [kWh]."
          format: double
          minimum: 0
          type: number
        co2eTankToWheel:
          description: "The amount of emitted CO2e from tank to wheel [kg]."
          format: double
          minimum: 0
          type: number
        co2eWellToWheel:
          description: "The amount of emitted CO2e from well to wheel [kg]."
          format: double
          minimum: 0
          type: number
        energyUseTankToWheel:
          description: "The tank-to-wheel energy use [MJ]."
          format: double
          minimum: 0
          type: number
        energyUseWellToWheel:
          description: "The well-to-wheel energy use [MJ]."
          format: double
          minimum: 0
          type: number
      required:
      - co2eTankToWheel
      - co2eWellToWheel
      - electricityConsumption
      - energyUseTankToWheel
      - energyUseWellToWheel
      - fuelConsumption
      type: object
    Emissions_French_CO2e_Decree_2017_639:
      description: Emissions according to the French CO2E decree from 2017.
      example:
        co2eWellToWheel: 0.30205796992916245
        co2eTankToWheel: 0.3057610024104934
      properties:
        co2eWellToWheel:
          description: "The amount of emitted CO2e from well to wheel [kg]."
          format: double
          minimum: 0
          type: number
        co2eTankToWheel:
          description: "The amount of emitted CO2e from tank to wheel [kg]."
          format: double
          minimum: 0
          type: number
      required:
      - co2eTankToWheel
      - co2eWellToWheel
      type: object
    Leg:
      example:
        violated: false
        travelTime: 56
        evReport:
          weatherAtEnd:
            temperature: 22.329474196844842
            windDirection: 5
            windSpeed: 0
          electricityConsumption: 0.8008281904610115
          batteryStateOfCharge: 58
          weatherAtStart:
            temperature: 22.329474196844842
            windDirection: 5
            windSpeed: 0
        distance: 1422
        trafficDelay: 0
        tollCosts:
          convertedPrice: ""
          countries:
          - convertedPrice:
              price: 12.91
              currency: EUR
            countryCode: countryCode
            price:
              price: 12.91
              currency: EUR
          - convertedPrice:
              price: 12.91
              currency: EUR
            countryCode: countryCode
            price:
              price: 12.91
              currency: EUR
          prices:
          - price: 12.91
            currency: EUR
          - price: 12.91
            currency: EUR
          containsApproximatedSections: false
        polyline: polyline
      properties:
        distance:
          description: "The distance of the leg [m]."
          example: 1422
          format: int32
          minimum: 0
          type: integer
        travelTime:
          description: "The travel time for the leg [s]."
          example: 56
          format: int32
          minimum: 0
          type: integer
        trafficDelay:
          description: |-
            The total delay due to live traffic on this leg [s].

            This value contains the sum of all traffic events on this leg and will be non-zero only if **options[trafficMode]=REALISTIC**.
            See [here](./concepts/traffic-modes) for more information.
          example: 0
          format: int32
          minimum: 0
          type: integer
        violated:
          description: "If there is no valid connection between the waypoints of this\
            \ leg but the resulting leg can be calculated by using actually prohibited\
            \ roads, the route is marked as violated."
          example: false
          type: boolean
        tollCosts:
          $ref: "#/components/schemas/TollCosts"
        polyline:
          description: "The polyline of the leg in the format specified by **options[polylineFormat]**."
          type: string
        evReport:
          $ref: "#/components/schemas/EvReportLeg"
      required:
      - distance
      - travelTime
      - violated
      type: object
    Legs:
      description: The legs of the route.
      items:
        $ref: "#/components/schemas/Leg"
      type: array
    ManeuverEvent:
      description: "Issued when the driver has to perform a maneuver, e.g. to turn\
        \ or to enter a roundabout. Requires _MANEUVER_EVENTS_ to be requested."
      example:
        roadAhead:
          number: number
          name: name
        combinedTransportType: BOAT
        roundaboutExit: 0
        combinedTransportName: combinedTransportName
        description: description
        absoluteDirection: 265
        crossingRoadName: crossingRoadName
        type: START
        directionSignText: directionSignText
        relativeDirection: -30
        exitNumber: exitNumber
        exitName: exitName
      properties:
        type:
          $ref: "#/components/schemas/ManeuverType"
        relativeDirection:
          description: The direction of the outgoing road relative to continuing in
            the same direction as the incoming road (clockwise).
          format: int32
          maximum: 180
          minimum: -180
          type: integer
        absoluteDirection:
          description: The absolute direction of the outgoing road (clockwise). North
            represents 0 degrees.
          format: int32
          maximum: 360
          minimum: 0
          type: integer
        description:
          description: "A descriptive text for the current maneuver. The language\
            \ can be specified by the parameter **options[language]**. A warning with\
            \ **warningCode** _ROUTING_MANEUVERS_IN_DIFFERENT_LANGUAGE_ and the actual\
            \ language is returned when the requested language is not available. Geographical\
            \ names such as town and road names are always given in the local language."
          type: string
        roadAhead:
          $ref: "#/components/schemas/RoadAhead"
        directionSignText:
          description: The city names and road numbers on a signpost at the current
            location to follow for the current maneuver. Empty if no signpost is present
            or the data is not available.
          type: string
        exitNumber:
          description: The number of an exit or interchange of a highway or a freeway-like
            road. Only present if the maneuver type is _CHANGE_ or _EXIT_. Empty if
            the data does not contain an exit number.
          type: string
        exitName:
          description: The name of an exit or interchange of a highway or a freeway-like
            road. Only present if the maneuver type is _CHANGE_ or _EXIT_. Empty if
            the data does not contain an exit name.
          type: string
        roundaboutExit:
          description: The exit number at a roundabout. Only drivable roads are counted.
            Only present if the maneuver type is _TAKE\_ROUNDABOUT_.
          format: int32
          minimum: 0
          type: integer
        combinedTransportName:
          description: The name of the combined transport to take a the current location.
            Only present if the maneuver type is _TAKE\_COMBINED\_TRANSPORT_.
          type: string
        combinedTransportType:
          $ref: "#/components/schemas/CombinedTransportType"
        crossingRoadName:
          description: The name of the crossing road at which a U-turn has to be made.
            Only present if the maneuver type is _MAKE\_U\_TURN_ and if the U-turn
            takes place at a crossing.
          type: string
      required:
      - description
      - type
      type: object
    ManeuverType:
      description: "Describes the type of maneuver to execute.   \n * `START` - Departure\
        \ at an on-road waypoint.   \n * `START_LEFT` - Departure at an off-road waypoint\
        \ to begin the route heading left.   \n * `START_RIGHT` - Departure at an\
        \ off-road waypoint to begin the route heading right.   \n * `ARRIVE` - Arrival\
        \ at an on-road waypoint.   \n * `ARRIVE_LEFT` - Arrival at an off-road waypoint\
        \ if the waypoint is on the left.   \n * `ARRIVE_RIGHT` - Arrival at an off-road\
        \ waypoint if the waypoint is on the right.   \n * `CONTINUE` - Follow the\
        \ current road, usually when the road type changes although the road goes\
        \ straight.   \n * `KEEP_STRAIGHT` - Stay on the straight lane, usually in\
        \ fork-shaped intersections with more than two spikes.   \n * `KEEP_LEFT`\
        \ - Keep left or to take the left lane, usually in Y-shaped intersections.\
        \   \n * `KEEP_RIGHT` - Keep right or to take the right lane, usually  in\
        \ Y-shaped intersections.   \n * `TURN_HALF_LEFT` - Turn half left at a crossing\
        \ where at least one additional trailing road exists,\n usually at T- or X-shaped\
        \ crossings on urban or country roads. Even if the name of the turning road\
        \ does not change a maneuver will be created.   \n * `TURN_LEFT` - Turn left\
        \ at a crossing where at least one additional trailing road exists, usually\n\
        \ at T- or X-shaped crossings on urban or country roads. Even if the name\
        \ of the turning road does not change a maneuver will be created.   \n * `TURN_SHARP_LEFT`\
        \ - Turn sharp left at a crossing where at least one additional trailing road\
        \ exists, usually \n at T- or X-shaped crossings on urban or country roads.\
        \ Even if the name of the turning road does not change a maneuver will be\
        \ created.   \n * `TURN_HALF_RIGHT` - Turn half right at a crossing where\
        \ at least one additional trailing road exists, usually \n at T- or X-shaped\
        \ crossings on urban or country roads. Even if the name of the turning road\
        \ does not change a maneuver will be created.   \n * `TURN_RIGHT` - Turn right\
        \ at a crossing where at least one additional trailing road exists, usually\n\
        \ at T- or X-shaped crossings on urban or country roads. Even if the name\
        \ of the turning road does not change a maneuver will be created.   \n * `TURN_SHARP_RIGHT`\
        \ - Turn sharp right at a crossing where at least one additional trailing\
        \ road exists, usually \n at T- or X-shaped crossings on urban or country\
        \ roads. Even if the name of the turning road does not change a maneuver will\
        \ be created.   \n * `MAKE_U_TURN` - Make a U-turn, either at the same road\
        \ or at structurally separated roads. The **relativeDirection** \n indicates\
        \ whether to turn left or right.   \n * `TAKE_ROUNDABOUT_LEFT` - Enter a roundabout\
        \ to the left and leave it at the given **roundaboutExit**. \n Only drivable\
        \ roads of the roundabout are counted.   \n * `TAKE_ROUNDABOUT_RIGHT` - Enter\
        \ a roundabout to the right and leave it at the given **roundaboutExit**.\
        \ \n Only drivable roads of the roundabout are counted.   \n * `TAKE_COMBINED_TRANSPORT`\
        \ - Take boat (ferry) or rail (train or rail shuttle) connection.\n * `ENTER`\
        \ - Enter a highway/freeway/major road straight.   \n * `ENTER_LEFT` - Enter\
        \ a highway/freeway/major road to the left.   \n * `ENTER_RIGHT` - Enter a\
        \ highway/freeway/major road to the right.   \n * `EXIT` - Leave a highway/freeway/major\
        \ road straight.   \n * `EXIT_LEFT` - Leave a highway/freeway/major road to\
        \ the left.   \n * `EXIT_RIGHT` - Leave a highway/freeway/major road to the\
        \ right.   \n * `CHANGE` - Change straight to another highway/freeway at an\
        \ interchange.   \n * `CHANGE_LEFT` - Change to the left to another highway/freeway\
        \ at an interchange.   \n * `CHANGE_RIGHT` - Change to the right to another\
        \ highway/freeway at an interchange."
      enum:
      - START
      - START_LEFT
      - START_RIGHT
      - ARRIVE
      - ARRIVE_LEFT
      - ARRIVE_RIGHT
      - CONTINUE
      - KEEP_STRAIGHT
      - KEEP_LEFT
      - KEEP_RIGHT
      - TURN_HALF_LEFT
      - TURN_LEFT
      - TURN_SHARP_LEFT
      - TURN_HALF_RIGHT
      - TURN_RIGHT
      - TURN_SHARP_RIGHT
      - MAKE_U_TURN
      - TAKE_ROUNDABOUT_LEFT
      - TAKE_ROUNDABOUT_RIGHT
      - TAKE_COMBINED_TRANSPORT
      - ENTER
      - ENTER_LEFT
      - ENTER_RIGHT
      - EXIT
      - EXIT_LEFT
      - EXIT_RIGHT
      - CHANGE
      - CHANGE_LEFT
      - CHANGE_RIGHT
      type: string
      x-enum-varnames:
      - START
      - START_LEFT
      - START_RIGHT
      - ARRIVE
      - ARRIVE_LEFT
      - ARRIVE_RIGHT
      - CONTINUE
      - KEEP_STRAIGHT
      - KEEP_LEFT
      - KEEP_RIGHT
      - TURN_HALF_LEFT
      - TURN_LEFT
      - TURN_SHARP_LEFT
      - TURN_HALF_RIGHT
      - TURN_RIGHT
      - TURN_SHARP_RIGHT
      - MAKE_U_TURN
      - TAKE_ROUNDABOUT_LEFT
      - TAKE_ROUNDABOUT_RIGHT
      - TAKE_COMBINED_TRANSPORT
      - ENTER
      - ENTER_LEFT
      - ENTER_RIGHT
      - EXIT
      - EXIT_LEFT
      - EXIT_RIGHT
      - CHANGE
      - CHANGE_LEFT
      - CHANGE_RIGHT
    PaymentMethod:
      description: "A payment method for toll costs.  \n * `ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION`\
        \ - Pay with an electronic toll collection system for which a subscription\
        \ is required.  \n * `ELECTRONIC_TOLL_COLLECTION` - Pay with some electronic\
        \ toll collection system for which no prior subscription is required.  \n\
        \ * `CASH` - Pay with cash at a toll booth.  \n * `CREDIT_CARD` - Pay with\
        \ credit card at a toll booth."
      enum:
      - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
      - ELECTRONIC_TOLL_COLLECTION
      - CASH
      - CREDIT_CARD
      type: string
      x-enum-varnames:
      - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
      - ELECTRONIC_TOLL_COLLECTION
      - CASH
      - CREDIT_CARD
    RoadAhead:
      description: Name and number of the road ahead.
      example:
        number: number
        name: name
      properties:
        name:
          description: "The name of the road. It does not depend on the selected language,\
            \ instead it is presented as it can be found on local signs."
          type: string
        number:
          description: The number of the road which may consist of several numbers
            separated by "/".
          type: string
      type: object
    Event:
      example:
        border:
          countryCode: countryCode
        waypoint:
          name: name
          index: 0
        travelTimeFromStart: 56
        utcOffset: 731
        deliveryOnly:
          accessType: null
          relatedEventIndex: 0
          polyline: polyline
        charge:
          cost:
            price: 12.91
            currency: EUR
          electricityCharged: 0.6438423552598547
          chargingTime: 1
          percentageCharged: 1
        latitude: 49.254878
        evStatus:
          electricityConsumption: 8.762042012749001
          batteryStateOfCharge: 58
          polyline: polyline
        toll:
          sectionIndex: 0
          accessType: ENTER
          displayName: displayName
          relatedEventIndex: 0
        utcOffsetChange:
          utcOffset: 443
        maneuver:
          roadAhead:
            number: number
            name: name
          combinedTransportType: BOAT
          roundaboutExit: 0
          combinedTransportName: combinedTransportName
          description: description
          absoluteDirection: 265
          crossingRoadName: crossingRoadName
          type: START
          directionSignText: directionSignText
          relativeDirection: -30
          exitNumber: exitNumber
          exitName: exitName
        schedule:
          duration: 0
          scheduleTypes:
          - BREAK
          - BREAK
        combinedTransport:
          accessType: null
          name: name
          relatedEventIndex: 0
          type: null
        countryCode: DE
        violation:
          accessType: null
          temporary: true
          scheduleViolationTypes:
          - OPENING_INTERVAL
          - OPENING_INTERVAL
          timeDomain: "[(y2016M2h10){m30}]"
          relatedEventIndex: 0
          type: PROHIBITED
          violatedVehicleProperties:
          - property: property
            limit: 1
            value: value
          - property: property
            limit: 1
            value: value
          polyline: polyline
        startsAt: 2020-04-06T06:00:00Z
        lowEmissionZone:
          accessType: null
          name: name
          relatedEventIndex: 0
        longitude: 8.544585
        distanceFromStart: 1422
        traffic:
          accessType: null
          delay: 5
          relatedEventIndex: 0
          description: description
          language: language
          polyline: polyline
      properties:
        latitude:
          description: The latitude of the position where the event takes place in
            degrees (WGS84/EPSG:4326) from south to north.
          example: 49.254878
          format: double
          maximum: 90
          minimum: -90
          type: number
        longitude:
          description: The longitude of the position where the event takes place in
            degrees (WGS84/EPSG:4326) from west to east.
          example: 8.544585
          format: double
          maximum: 180
          minimum: -180
          type: number
        startsAt:
          description: "The time at which the event starts formatted according to\
            \ [RFC 3339](https://tools.ietf.org/html/rfc3339). Will not be present\
            \ for **trafficMode** _AVERAGE_ when neither **startTime** nor **arrivalTime**\
            \ is specified."
          example: 2020-04-06T06:00:00Z
          format: date-time
          type: string
        distanceFromStart:
          description: "The distance from the start to this event [m]."
          example: 1422
          format: int32
          minimum: 0
          type: integer
        travelTimeFromStart:
          description: "The travel time from the start to this event [s]."
          example: 56
          format: int32
          minimum: 0
          type: integer
        countryCode:
          description: "Countries are represented according to their [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\
            \ or [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) if referring\
            \ to a subdivision."
          example: DE
          type: string
        utcOffset:
          description: "The offset to UTC [min]. Will not contain daylight-saving\
            \ time for **trafficMode** _AVERAGE_ when neither **startTime** nor **arrivalTime**\
            \ is specified."
          format: int32
          maximum: 840
          minimum: -720
          type: integer
        toll:
          $ref: "#/components/schemas/TollEvent"
        maneuver:
          $ref: "#/components/schemas/ManeuverEvent"
        border:
          $ref: "#/components/schemas/BorderEvent"
        violation:
          $ref: "#/components/schemas/ViolationEvent"
        waypoint:
          $ref: "#/components/schemas/WaypointEvent"
        utcOffsetChange:
          $ref: "#/components/schemas/UTCOffsetChangeEvent"
        schedule:
          $ref: "#/components/schemas/ScheduleEvent"
        combinedTransport:
          $ref: "#/components/schemas/CombinedTransportEvent"
        traffic:
          $ref: "#/components/schemas/TrafficEvent"
        lowEmissionZone:
          $ref: "#/components/schemas/LowEmissionZoneEvent"
        deliveryOnly:
          $ref: "#/components/schemas/DeliveryOnlyEvent"
        evStatus:
          $ref: "#/components/schemas/EvStatusEvent"
        charge:
          $ref: "#/components/schemas/ChargeEvent"
      required:
      - countryCode
      - distanceFromStart
      - latitude
      - longitude
      - travelTimeFromStart
      - utcOffset
      type: object
    Events:
      description: "Detailed information on maneuvers, border crossings and other\
        \ events along the route in chronological order."
      items:
        $ref: "#/components/schemas/Event"
      type: array
    Options:
      properties:
        startTime:
          description: "Defines the start time of the route formatted according to\
            \ [RFC 3339](https://tools.ietf.org/html/rfc3339).\nIf none of them is\
            \ specified the current time will be used as the start time for **trafficMode**\
            \ _REALISTIC_.\n\nIf the date-time string does not include an explicit\
            \ offset to UTC, the time will be interpreted as the local time of the\
            \ start waypoint.\nThe date must not be before 1970-01-01T00:00:00+00:00\
            \ nor after 2037-12-31T23:59:59+00:00. \nThe response will contain the\
            \ offset to UTC specified in the request or that of the start waypoint.\n\
            For best results it should not be more than one month in the past nor\
            \ more than six months in the future.  \nThis parameter is mutually exclusive\
            \ with **arrivalTime** and **tollTime**.\nSee [here](./concepts/date-and-time)\
            \ for more information on the relevance of date and time."
          example: 2020-12-04T06:00:00Z
          format: date-time
          type: string
        arrivalTime:
          description: "Defines the arrival time of the route formatted according\
            \ to [RFC 3339](https://tools.ietf.org/html/rfc3339).\n\nIf the date-time\
            \ string does not include an explicit offset to UTC, the time will be\
            \ interpreted as the local time of the destination waypoint.\nThe date\
            \ must not be before 1970-01-01T00:00:00+00:00 nor after 2037-12-31T23:59:59+00:00.\
            \ \nThe response will contain the offset to UTC specified in the request\
            \ or that of the destination waypoint.\nFor best results it should not\
            \ be more than one month in the past nor more than six months in the future.\
            \  \nThis parameter is mutually exclusive with **startTime** and **tollTime**\
            \ and cannot be used with the **results** _SCHEDULE_REPORT_ and _SCHEDULE_EVENT_\
            \ nor\nwhen **openingIntervals**, **serviceTime** or **workingHoursPreset**\
            \ are specified.\nSee [here](./concepts/date-and-time) for more information\
            \ on the relevance of date and time."
          format: date-time
          type: string
        tollTime:
          description: "Defines the date and time at which to calculate toll prices\
            \ formatted according to [RFC 3339](https://tools.ietf.org/html/rfc3339).\n\
            \nIf the date-time string does not include an explicit offset to UTC,\
            \ the time will be interpreted as the local time of the start waypoint.\n\
            The date must not be before 1970-01-01T00:00:00+00:00 nor after 2037-12-31T23:59:59+00:00.\
            \  \nThis parameter only has an influence if toll related results are\
            \ requested. It can only be used in combination with **trafficMode** _AVERAGE_\
            \ \nand is mutually exclusive with both **startTime** and **arrivalTime**.\n\
            It will be ignored for non-motorized profiles such as _BICYCLE_ or _PEDESTRIAN_.\n\
            See [here](./concepts/date-and-time) for more information on the relevance\
            \ of date and time."
          format: date-time
          type: string
        trafficMode:
          $ref: "#/components/schemas/TrafficMode"
        language:
          default: en
          description: "The language of texts such as the descriptions of _MANEUVER_EVENTS_\
            \ and _TRAFFIC_EVENTS_.\nLanguages have to be specified according to their\
            \ [ISO-639-1](https://www.loc.gov/standards/iso639-2/php/code_list.php)\n\
            code or as a combination of language code and sub-tag according to [BCP47](https://tools.ietf.org/rfc/bcp/bcp47.txt).\
            \  \nThe **warningCode** _ROUTING_MANEUVERS_IN_DIFFERENT_LANGUAGE_ is\
            \ returned if the language is not supported for maneuvers."
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        polylineFormat:
          $ref: "#/components/schemas/PolylineFormat"
        polylineMapType:
          $ref: "#/components/schemas/PolylineMapType"
        allowedCountries:
          description: |-
            Comma-separated list of countries the route is allowed to pass. By default, all countries are allowed. If this parameter is present, only these countries are allowed to be passed,
            i.e. drive only in these countries.
            Countries are represented according to their [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) or [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) if referring to a subdivision.
            This parameter is mutually exclusive with **prohibitedCountries** and will be ignored, if a **routeId** is specified.
          type: string
        prohibitedCountries:
          description: "Comma-separated list of countries the route must not pass.\
            \ By default, all countries are allowed. If this parameter is present,\
            \ all but the given countries are allowed to be passed,\ni.e. do not drive\
            \ in these countries. \nCountries are represented according to their [ISO\
            \ 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) or\
            \ [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) if referring\
            \ to a subdivision.\nThis parameter is mutually exclusive with **allowedCountries**\
            \ and will be ignored, if a **routeId** is specified."
          type: string
        currency:
          description: "The currency code according to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).\
            \  \nIf it is not specified, the currency is taken from the **profile**.\
            \  \nIt is used for the costs in the monetary cost report if _MONETARY_COSTS_\
            \ are requested in the **results** and for \ntoll price conversion if\
            \ _TOLL_COSTS_ or _TOLL_SECTIONS_ are requested in the **results**. Furthermore,\
            \ it is used \nwhen setting **options[routingMode]=MONETARY**."
          pattern: "[A-Z]{3}"
          type: string
        preferTurnsOnPassengerSide:
          default: false
          description: "Specifies that the route is constructed such that turns to\
            \ the passenger side are preferred. \nThis parameter will be ignored,\
            \ if **options[routingMode]=MONETARY**, **vehicle[truckRoutes]** or a\
            \ **routeId** is specified.\nIt will also be ignored for non-motorized\
            \ profiles such as _BICYCLE_ or _PEDESTRIAN_.\n"
          example: false
          type: boolean
        avoid:
          description: "Comma-separated list of features which should be avoided on\
            \ the route.\nAvoided features could be included in a route if there is\
            \ no possibility to reach the target otherwise.\n\nAvailable values are\
            \ provided by type `AvoidFeature`:\n* `TOLL` - Avoid roads with toll.\n\
            * `FERRIES` - Avoid ferries. Ferries which cannot be avoided can be requested\
            \ with _COMBINED_TRANSPORT_EVENTS_ and will appear with the type _BOAT_.\n\
            * `RAIL_SHUTTLES` - Avoid rail shuttles. Rail shuttles which cannot be\
            \ avoided can be requested with _COMBINED_TRANSPORT_EVENTS_ and will appear\
            \ with the type _RAIL_.\n* `HIGHWAYS` - Avoid highways and motorways.\
            \ Waypoints will not be matched to highways, they will be matched to the\
            \ nearest road which is not a highway.\n\nThis parameter will be ignored,\
            \ if **options[routingMode]=MONETARY** or a **routeId** is specified.\n\
            See [here](./concepts/avoid) for more information. "
          type: string
        blockIntersectingRoads:
          description: "Pipe-separated list of polylines.  \nRoads and combined transports\
            \ that intersect the given polylines will be considered as blocked.\n\
            Each list element is a polyline. Each point is a coordinate of latitude\
            \ and longitude. Coordinates and points are separated by a comma.\nFormat:\
            \ `<poly1_lat1>,<poly1_lon1>,...,<poly1_latN>,<poly1_lonN>|<poly2_lat1>,<poly2_lon1>,...,<poly2_latN>,<poly2_lonN>|...`\
            \  \nNotes:\n* Be aware of the URL length restrictions.\n* If there is\
            \ no other route connecting two waypoints the will be reported as violated\
            \ and correspondingly violation events with type **BLOCKED_ROAD_BY_INTERSECTION**\
            \ will be reported if violation events are requested.\n* Requests will\
            \ be rejected if at least one provided polyline\n  * does not consist\
            \ of an even number of coordinates,\n  * consists of less than two points,\n\
            \  * contains invalid coordinates or\n  * intersects more than 5000 road\
            \ segments.\n\nThis parameter will be ignored, if a **routeId** is specified.\n"
          example: "49.8,9.9,49.9,10|33.1,-111.1,33.0,-111.2"
          type: string
        customRoadAttributeScenarios:
          description: "Comma-separated list of [custom road attribute scenarios](../data-api/concepts/custom-road-attributes)\
            \ to be considered in the route calculation. \nEach scenario can be specified\
            \ by its name or its ID. A shared scenario can only be specified by its\
            \ ID.\n\nThe size limitations that apply to each scenario, also apply\
            \ to the collection of scenarios, i.e. the limit \non the number of roads\
            \ in one scenario can not be circumvented by splitting it in multiple\
            \ scenarios.\nIf the request contains a **routeId**, specifying custom\
            \ road attribute scenarios may lead to violated routes in case one of\
            \ the\nrequested scenarios prohibits roads on the route represented by\
            \ the **routeId**."
          type: string
        routingMode:
          $ref: "#/components/schemas/RoutingMode"
        maximumSpeed:
          description: "The maximum speed of the vehicle [km/h]. The speeds for calculating\
            \ the driving times on all roads\nwill be limited to this value. \nSee\
            \ [here](./concepts/speeds) for more information."
          format: int32
          minimum: 1
          type: integer
        speedFactor:
          default: 1
          description: "An additional factor to apply to the speed of the vehicle.\
            \ This modified speed is used to modify the driving times after the\n\
            route has been calculated. That means in particular that the route itself\
            \ will not be modified by applying a speed factor.\nWhen lower than one,\
            \ the driving time of the vehicle will increase, when greater than one,\
            \ the driving time of the vehicle will decrease.\nNote that the factor\
            \ is only applied on the parts of the route where the vehicle is driving.\
            \ Therefore, a speed factor of 1.1 does not\nnecessarily mean that the\
            \ **travelTime** of the resulting route will be 10% faster. The speed\
            \ is not capped by the maximum speed of the \nvehicle or of the road.\
            \ \nSee [here](./concepts/speeds) for more information."
          example: 1.1
          format: double
          maximum: 10
          minimum: 0.1
          type: number
      type: object
    EmissionOptions:
      properties:
        calculationMethods:
          description: "Comma-separated list of the calculation method to be returned.\n\
            \nAvailable values are provided by type `EmissionCalculationMethod`:\n\
            \ * `EN16258_2012`\n    Emissions according to EN16258 from 2012 (a.k.a.\
            \ CEN).\n * `ISO14083_2023`\n    Emissions according to ISO 14083:2023\
            \ (a.k.a. ISO). \n    Only supported for [European and American profiles](../data-api/concepts/profiles).\n\
            \    If **defaultConsumption** is true, only supported for [European profiles](../data-api/concepts/profiles).\n\
            \ * `FRENCH_CO2E_DECREE_2017_639`\n    Emissions according to the French\
            \ CO2E decree from 2017."
          minLength: 1
          type: string
        defaultConsumption:
          default: false
          description: "If true, the fuel or electricity consumption is automatically\
            \ calculated through HBEFA 4.2. \nOtherwise, the **averageFuelConsumption**\
            \ or **averageElectricityConsumption** specified calculating the route\
            \ represented by **routeId** will be considered.\nThis parameter will\
            \ be ignored for calculation method _FRENCH_CO2E_DECREE_2017_639_."
          type: boolean
        iso14083EmissionFactorsVersion:
          $ref: "#/components/schemas/Iso14083EmissionFactorsVersion"
      required:
      - calculationMethods
      type: object
    Iso14083EmissionFactorsVersion:
      default: INITIAL
      description: Defines the version of the emission factors to use for emission
        calculation based on ISO 14083. This parameter will be ignored for other calculation
        methods.
      enum:
      - INITIAL
      - VERSION_2
      - LATEST
      type: string
      x-enum-varnames:
      - INITIAL
      - VERSION_2
      - LATEST
    EmissionCalculationMethod:
      enum:
      - EN16258_2012
      - ISO14083_2023
      - FRENCH_CO2E_DECREE_2017_639
      type: string
      x-enum-varnames:
      - EN16258_2012
      - ISO14083_2023
      - FRENCH_CO2E_DECREE_2017_639
    VehicleParametersAtWaypoint:
      description: |
        The vehicle parameters that change at a waypoint. A vehicle parameter specified at a waypoint overrides the
        setting from the **profile** and **vehicle**. It is valid until the end of the route unless it is changed again
        at a subsequent waypoint.
      example:
        averageElectricityConsumption: 115
        loadWeight: 25000
        truckRoutes:
        - SE_BK_1
        - SE_BK_1
        averageFuelConsumption: 35
        length: 1650
        width: 254
        tunnelRestrictionCode: NONE
        axleWeight: 11500
        hazardousMaterials:
        - OTHER
        - OTHER
        height: 400
      properties:
        averageFuelConsumption:
          description: |
            The average fuel consumption of the vehicle.
            Depending on the **fuelType** [l/100km] for liquid fuel types or [kg/100km] for gaseous fuel types.

            Supported for **engineType** _COMBUSTION_  or _HYBRID_. Relevant for `emissions`.
          example: 35
          exclusiveMinimum: true
          format: double
          minimum: 0
          type: number
        averageElectricityConsumption:
          description: "The average electricity consumption of the vehicle if the\
            \ **engineType** is _ELECTRIC_ or _HYBRID_ [kWh/100km].\n\nThis parameter\
            \ is not used, if a model of an electric vehicle is used. In this case\
            \ the average electricity \nconsumption from the model based consumption\
            \ calculation is used for the emissions calculation.\n\nSupported for\
            \ **engineType** _ELECTRIC_ or _HYBRID_. Relevant for `emissions`.\n"
          example: 115
          exclusiveMinimum: true
          format: double
          minimum: 0
          type: number
        loadWeight:
          description: |
            The weight of the vehicle's load [kg].

            Relevant for `routing`, `emissions`, `range calculation`.
          example: 25000
          format: int32
          minimum: 0
          type: integer
        axleWeight:
          description: |
            The maximum distributed weight that may be supported by an axle of the vehicle [kg].

            Relevant for `routing`, `toll`.
          example: 11500
          format: int32
          minimum: 1
          type: integer
        height:
          description: |
            The height of the vehicle [cm].

            Relevant for `routing`, `toll`.
          example: 400
          format: int32
          minimum: 1
          type: integer
        length:
          description: |
            The length of the vehicle [cm].

            Relevant for `routing`, `toll`.
          example: 1650
          format: int32
          minimum: 1
          type: integer
        width:
          description: |
            The width of the vehicle [cm].

            Relevant for `routing`, `toll`.
          example: 254
          format: int32
          minimum: 1
          type: integer
        hazardousMaterials:
          description: |
            The list of hazardous materials the vehicle has loaded.
            Use a list with only the _NONE_ value to specify that no hazardous material is loaded from that waypoint
            on. An empty list means that the hazardous materials don't change at the waypoint. If _NONE_ is specified
            along with other hazardous materials it is ignored.

            Relevant for `routing`.
          items:
            $ref: "#/components/schemas/HazardousMaterials"
          type: array
        tunnelRestrictionCode:
          $ref: "#/components/schemas/TunnelRestrictionCode"
        truckRoutes:
          description: |
            The list of truck routes the vehicle has to follow.
             * `DE_LKWUEBERLSTVAUSNV`
             Preferred routes for long trucks in Germany, also known as Lang-LKW.
             * `NL_LZV`
             Preferred routes for long trucks in the Netherlands, also known as LZV (Langere en Zwaardere Vrachtautocombinatie).
             * `NZ_HPMV`
             The network for High Productivity Motor Vehicles (HPMV) carrying the maximum loads available under a permit (New Zealand Transport Agency).
             * `SE_BK_1`
             Public roads and bridges that support up to 64 t total permitted weight (Swedish Transport Administration).
             * `SE_BK_2`
             Public roads and bridges that support up to 51.4 t total permitted weight.
             Actual limit depends on wheelbase and axle weight (Swedish Transport Administration).
             * `SE_BK_3`
             Public roads and bridges that support up to 37.5 t total permitted weight.
             Actual limit depends on wheelbase and axle weight (Swedish Transport Administration).
             * `SE_BK_4`
             Public roads and bridges that support up to 74 t total permitted weight (draft summer 2018, Swedish Transport Administration).
             * `US_STAA`
             Routes that belong to the highway network as defined by the Surface Transportation Assistance Act in the US.
             * `US_TD`
             Part of a state-designated highway network for trucks in the US.
             * `AU_B_DOUBLE`
             B-Double routes as defined in Australia.
             * `AU_B_DOUBLE_HML`
             Routes for B-Double vehicle combinations operating at Higher Mass Limits (HML) (Australian Transport Administration).
             * `AU_B_TRIPLE`
             B-Triple routes as defined in Australia.
             * `AU_B_TRIPLE_HML`
             Routes for B-Triple vehicle combinations operating at Higher Mass Limits (HML) (Australian Transport Administration).
             * `AU_AB_TRIPLE`
             Routes for AB-Triple vehicle combinations operating (Australian Transport Administration).
             * `AU_AB_TRIPLE_HML`
             Routes for AB-Triple vehicle combinations operating at Higher Mass Limits (HML) (Australian Transport Administration).
             * `GENERAL_TRUCK_ROUTES`
             General routes designated for trucks, for example to prevent trucks routing through city centres when they are on transit.
             * `NONE`
             Use a list with only the _NONE_ value for the truck routes
             at a waypoint to specify that no truck route must be used from that waypoint on. An empty list of truck routes
             at a waypoint means that the truck routes don't change at the waypoint. If _NONE_ is specified along with other
             truck routes it is ignored.

            This parameter will be ignored for non-truck profiles, e.g. _EUR_CAR_, _EUR_VAN_, _USA_1_PICKUP_ or _AUS_LCV_LIGHT_COMMERCIAL_
            and for routing modes other than _FAST_.
            Relevant for `routing`.
          items:
            $ref: "#/components/schemas/TruckRoutes"
          type: array
      type: object
    RouteResponse:
      example:
        violated: false
        travelTime: 56
        evReport:
          cost:
            price: 12.91
            currency: EUR
          electricityConsumption: 6.628464275087742
          electricityCharged: 0.10414449161182959
          batteryStateOfCharge: 58
          chargingTime: 0
          percentageCharged: 0
        distance: 1422
        scheduleReport:
          restTime: 0
          breakTime: 0
          drivingTime: 0
          waitingTime: 0
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          serviceTime: 0
        warnings:
        - warningCode: warningCode
          description: description
          details:
            key: ""
        - warningCode: warningCode
          description: description
          details:
            key: ""
        toll:
          costs:
            convertedPrice: ""
            countries:
            - convertedPrice:
                price: 12.91
                currency: EUR
              countryCode: countryCode
              price:
                price: 12.91
                currency: EUR
            - convertedPrice:
                price: 12.91
                currency: EUR
              countryCode: countryCode
              price:
                price: 12.91
                currency: EUR
            prices:
            - price: 12.91
              currency: EUR
            - price: 12.91
              currency: EUR
            containsApproximatedSections: false
          systems:
          - tariffVersionValidFrom: 2000-01-23T04:56:07.000+00:00
            name: name
            tariffVersion: tariffVersion
            operatorName: operatorName
          - tariffVersionValidFrom: 2000-01-23T04:56:07.000+00:00
            name: name
            tariffVersion: tariffVersion
            operatorName: operatorName
          sections:
          - costs:
            - convertedPrice: ""
              etcSubscriptions:
              - etcSubscriptions
              - etcSubscriptions
              price: 0.5637376656633328
              paymentMethods:
              - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
              - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
              currency: currency
            - convertedPrice: ""
              etcSubscriptions:
              - etcSubscriptions
              - etcSubscriptions
              price: 0.5637376656633328
              paymentMethods:
              - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
              - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
              currency: currency
            approximated: false
            tollRoadType: GENERAL
            calculatedDistance: 141
            countryCode: countryCode
            displayName: displayName
            officialDistance: 142
            tollSystemIndex: 0
          - costs:
            - convertedPrice: ""
              etcSubscriptions:
              - etcSubscriptions
              - etcSubscriptions
              price: 0.5637376656633328
              paymentMethods:
              - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
              - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
              currency: currency
            - convertedPrice: ""
              etcSubscriptions:
              - etcSubscriptions
              - etcSubscriptions
              price: 0.5637376656633328
              paymentMethods:
              - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
              - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
              currency: currency
            approximated: false
            tollRoadType: GENERAL
            calculatedDistance: 141
            countryCode: countryCode
            displayName: displayName
            officialDistance: 142
            tollSystemIndex: 0
          currencies:
            date: 2000-01-23
            provider: provider
            exchangeRates:
            - rate: 7.061401241503109
              currency: currency
            - rate: 7.061401241503109
              currency: currency
            baseCurrency: baseCurrency
        monetaryCosts:
          tollCost: 0.05199002018724985
          distanceCost: 0.9132027271330689
          currency: currency
          workingTimeCost: 0.08774076871421566
          totalCost: 0.7260521264802103
          energyCost: 0.9702963800023566
        routeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        trafficDelay: 0
        alternativeRoutes:
        - violated: false
          travelTime: 56
          routeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          distance: 1422
          trafficDelay: 0
          polyline: polyline
        - violated: false
          travelTime: 56
          routeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          distance: 1422
          trafficDelay: 0
          polyline: polyline
        legs:
        - violated: false
          travelTime: 56
          evReport:
            weatherAtEnd:
              temperature: 22.329474196844842
              windDirection: 5
              windSpeed: 0
            electricityConsumption: 0.8008281904610115
            batteryStateOfCharge: 58
            weatherAtStart:
              temperature: 22.329474196844842
              windDirection: 5
              windSpeed: 0
          distance: 1422
          trafficDelay: 0
          tollCosts:
            convertedPrice: ""
            countries:
            - convertedPrice:
                price: 12.91
                currency: EUR
              countryCode: countryCode
              price:
                price: 12.91
                currency: EUR
            - convertedPrice:
                price: 12.91
                currency: EUR
              countryCode: countryCode
              price:
                price: 12.91
                currency: EUR
            prices:
            - price: 12.91
              currency: EUR
            - price: 12.91
              currency: EUR
            containsApproximatedSections: false
          polyline: polyline
        - violated: false
          travelTime: 56
          evReport:
            weatherAtEnd:
              temperature: 22.329474196844842
              windDirection: 5
              windSpeed: 0
            electricityConsumption: 0.8008281904610115
            batteryStateOfCharge: 58
            weatherAtStart:
              temperature: 22.329474196844842
              windDirection: 5
              windSpeed: 0
          distance: 1422
          trafficDelay: 0
          tollCosts:
            convertedPrice: ""
            countries:
            - convertedPrice:
                price: 12.91
                currency: EUR
              countryCode: countryCode
              price:
                price: 12.91
                currency: EUR
            - convertedPrice:
                price: 12.91
                currency: EUR
              countryCode: countryCode
              price:
                price: 12.91
                currency: EUR
            prices:
            - price: 12.91
              currency: EUR
            - price: 12.91
              currency: EUR
            containsApproximatedSections: false
          polyline: polyline
        emissions:
          iso14083_2022:
            co2eTankToWheel: 0.3353193347011243
            co2eWellToWheel: 0.30937452626664474
            electricityConsumption: 0.6704019297950036
            energyUseTankToWheel: 0.7143538047012307
            fuelConsumption: 0.5944895607614016
            energyUseWellToWheel: 0.08851374739011653
          iso14083_2023:
            co2eTankToWheel: 0.010263654006109402
            co2eWellToWheel: 0.46523964329332457
            electricityConsumption: 0.6519180951018382
            energyUseTankToWheel: 0.8969578798196912
            fuelConsumption: 0.7058770351582356
            energyUseWellToWheel: 0.7740351818741174
          frenchCO2eDecree2017_639:
            co2eWellToWheel: 0.30205796992916245
            co2eTankToWheel: 0.3057610024104934
          en16258_2012:
            co2eTankToWheel: 0.1284659006116532
            co2eWellToWheel: 0.288416212666878
            energyUseTankToWheel: 0.6778324963048014
            fuelConsumption: 0.6965117697638845
            energyUseWellToWheel: 0.6878052220127876
        polyline: polyline
        events:
        - border:
            countryCode: countryCode
          waypoint:
            name: name
            index: 0
          travelTimeFromStart: 56
          utcOffset: 731
          deliveryOnly:
            accessType: null
            relatedEventIndex: 0
            polyline: polyline
          charge:
            cost:
              price: 12.91
              currency: EUR
            electricityCharged: 0.6438423552598547
            chargingTime: 1
            percentageCharged: 1
          latitude: 49.254878
          evStatus:
            electricityConsumption: 8.762042012749001
            batteryStateOfCharge: 58
            polyline: polyline
          toll:
            sectionIndex: 0
            accessType: ENTER
            displayName: displayName
            relatedEventIndex: 0
          utcOffsetChange:
            utcOffset: 443
          maneuver:
            roadAhead:
              number: number
              name: name
            combinedTransportType: BOAT
            roundaboutExit: 0
            combinedTransportName: combinedTransportName
            description: description
            absoluteDirection: 265
            crossingRoadName: crossingRoadName
            type: START
            directionSignText: directionSignText
            relativeDirection: -30
            exitNumber: exitNumber
            exitName: exitName
          schedule:
            duration: 0
            scheduleTypes:
            - BREAK
            - BREAK
          combinedTransport:
            accessType: null
            name: name
            relatedEventIndex: 0
            type: null
          countryCode: DE
          violation:
            accessType: null
            temporary: true
            scheduleViolationTypes:
            - OPENING_INTERVAL
            - OPENING_INTERVAL
            timeDomain: "[(y2016M2h10){m30}]"
            relatedEventIndex: 0
            type: PROHIBITED
            violatedVehicleProperties:
            - property: property
              limit: 1
              value: value
            - property: property
              limit: 1
              value: value
            polyline: polyline
          startsAt: 2020-04-06T06:00:00Z
          lowEmissionZone:
            accessType: null
            name: name
            relatedEventIndex: 0
          longitude: 8.544585
          distanceFromStart: 1422
          traffic:
            accessType: null
            delay: 5
            relatedEventIndex: 0
            description: description
            language: language
            polyline: polyline
        - border:
            countryCode: countryCode
          waypoint:
            name: name
            index: 0
          travelTimeFromStart: 56
          utcOffset: 731
          deliveryOnly:
            accessType: null
            relatedEventIndex: 0
            polyline: polyline
          charge:
            cost:
              price: 12.91
              currency: EUR
            electricityCharged: 0.6438423552598547
            chargingTime: 1
            percentageCharged: 1
          latitude: 49.254878
          evStatus:
            electricityConsumption: 8.762042012749001
            batteryStateOfCharge: 58
            polyline: polyline
          toll:
            sectionIndex: 0
            accessType: ENTER
            displayName: displayName
            relatedEventIndex: 0
          utcOffsetChange:
            utcOffset: 443
          maneuver:
            roadAhead:
              number: number
              name: name
            combinedTransportType: BOAT
            roundaboutExit: 0
            combinedTransportName: combinedTransportName
            description: description
            absoluteDirection: 265
            crossingRoadName: crossingRoadName
            type: START
            directionSignText: directionSignText
            relativeDirection: -30
            exitNumber: exitNumber
            exitName: exitName
          schedule:
            duration: 0
            scheduleTypes:
            - BREAK
            - BREAK
          combinedTransport:
            accessType: null
            name: name
            relatedEventIndex: 0
            type: null
          countryCode: DE
          violation:
            accessType: null
            temporary: true
            scheduleViolationTypes:
            - OPENING_INTERVAL
            - OPENING_INTERVAL
            timeDomain: "[(y2016M2h10){m30}]"
            relatedEventIndex: 0
            type: PROHIBITED
            violatedVehicleProperties:
            - property: property
              limit: 1
              value: value
            - property: property
              limit: 1
              value: value
            polyline: polyline
          startsAt: 2020-04-06T06:00:00Z
          lowEmissionZone:
            accessType: null
            name: name
            relatedEventIndex: 0
          longitude: 8.544585
          distanceFromStart: 1422
          traffic:
            accessType: null
            delay: 5
            relatedEventIndex: 0
            description: description
            language: language
            polyline: polyline
        guidedNavigation: guidedNavigation
      properties:
        distance:
          description: "The distance of the route [m]."
          example: 1422
          format: int32
          minimum: 0
          type: integer
        travelTime:
          description: "The travel time for the route [s]."
          example: 56
          format: int32
          minimum: 0
          type: integer
        trafficDelay:
          description: |-
            The total delay due to live traffic on the route [s].

            This value contains the sum of all traffic events on the route and will be non-zero only if **options[trafficMode]=REALISTIC**.
            See [here](./concepts/traffic-modes) for more information.
          example: 0
          format: int32
          minimum: 0
          type: integer
        violated:
          description: "If there is no valid route but the resulting route can be\
            \ calculated by using actually prohibited roads, the route is marked as\
            \ violated. When requesting _VIOLATION_EVENTS_ there is a corresponding\
            \ violation event containing the position, time and the vehicle property\
            \ in question. See [here](./concepts/violations) for more information."
          example: false
          type: boolean
        routeId:
          description: The ID of the calculated route. It is valid for 12 hours.
          format: uuid
          type: string
        legs:
          description: The legs of the route.
          items:
            $ref: "#/components/schemas/Leg"
          type: array
        toll:
          $ref: "#/components/schemas/Toll"
        polyline:
          description: "The polyline of the route in the format specified by **options[polylineFormat]**."
          type: string
        events:
          description: "Detailed information on maneuvers, border crossings and other\
            \ events along the route in chronological order."
          items:
            $ref: "#/components/schemas/Event"
          type: array
        emissions:
          $ref: "#/components/schemas/Emissions"
        alternativeRoutes:
          description: Detailed information on alternative routes. Requires _ALTERNATIVE_ROUTES_
            to be requested. The array may be empty when no alternative routes are
            found.
          items:
            $ref: "#/components/schemas/AlternativeRoute"
          type: array
        scheduleReport:
          $ref: "#/components/schemas/ScheduleReport"
        evReport:
          $ref: "#/components/schemas/EvReport"
        guidedNavigation:
          description: |-
            A base64 encoded representation of the route that can be used for the [PTV Navigator](https://www.myptv.com/en/logistics-software/ptv-navigator). The base64 binary has to be decoded and saved as a text file with the extension .bcr.
            Requires _GUIDED_NAVIGATION_ to be requested.
          type: string
        monetaryCosts:
          $ref: "#/components/schemas/MonetaryCosts"
        warnings:
          description: A list of warnings concerning the validity of the result.
          items:
            $ref: "#/components/schemas/Warning"
          type: array
      required:
      - distance
      - travelTime
      - violated
      type: object
    ViolationEvent:
      description: "Issued when the route passes a road which is prohibited for the\
        \ given vehicle but passed nevertheless as there is no other valid route or\
        \ when schedule restrictions are violated. Requires _VIOLATION_EVENTS_ to\
        \ be requested. See [here](./concepts/violations) for more information."
      example:
        accessType: null
        temporary: true
        scheduleViolationTypes:
        - OPENING_INTERVAL
        - OPENING_INTERVAL
        timeDomain: "[(y2016M2h10){m30}]"
        relatedEventIndex: 0
        type: PROHIBITED
        violatedVehicleProperties:
        - property: property
          limit: 1
          value: value
        - property: property
          limit: 1
          value: value
        polyline: polyline
      properties:
        type:
          $ref: "#/components/schemas/ViolationType"
        scheduleViolationTypes:
          description: |
            Contains the list of violated schedule restrictions at this event. Only present if **type=SCHEDULE**.
          items:
            $ref: "#/components/schemas/ScheduleViolationType"
          type: array
        violatedVehicleProperties:
          description: |
            Contains the list of violated vehicle properties at this event. Only present if **type=VEHICLE_PROPERTY**.
          items:
            $ref: "#/components/schemas/ViolatedVehicleProperty"
          type: array
        temporary:
          description: "States whether the cause of the violation is only temporary,\
            \ e.g. a road construction site. In such cases \nsee the corresponding\
            \ traffic event for more information.\n"
          type: boolean
        timeDomain:
          description: "Returns the time validity of the violated restriction in the\
            \ GDF time domain format if the restriction is only active at certain\
            \ times. See [here](./concepts/date-and-time#gdftimedomains) for more\
            \ information."
          example: "[(y2016M2h10){m30}]"
          type: string
        accessType:
          $ref: "#/components/schemas/AccessType"
        relatedEventIndex:
          description: For **accessType** _ENTER_ this index points to the corresponding
            event with **accessType** _EXIT_ and vice-versa. Not present otherwise.
          format: int32
          minimum: 0
          type: integer
        polyline:
          description: "The polyline of the violation in the format specified by **options[polylineFormat]**.\
            \ Only present for **accessType** _ENTER_. Requires _VIOLATION_EVENTS_POLYLINE_\
            \ to be requested."
          type: string
      required:
      - type
      type: object
    ViolatedVehicleProperty:
      example:
        property: property
        limit: 1
        value: value
      properties:
        property:
          description: "The name of the violated vehicle property.\n\nThe following\
            \ values represent a vehicle property which is greater than the given\
            \ **limit**:\n\"WEIGHT\", \"HEIGHT\", \"LENGTH\", \"AXLE_WEIGHT\", \"\
            WIDTH\", \"KPRA_LENGTH\", \"NUMBER_OF_AXLES\", \"TOTAL_PERMITTED_WEIGHT\"\
            .\n\nThe following values represent a vehicle property for which **value**\
            \ contains additional information:\n\"LOW_EMISSION_ZONE\", \"TRUCK_ROUTE\"\
            , \"HAZARDOUS_MATERIALS\", \"TUNNEL_RESTRICTION\", \"TRAILER\".\n\nThis\
            \ list can be extended at any time, clients should handle unknown values\
            \ properly. \nSee [here](./concepts/violations) for more information."
          type: string
          x-extensible-enum:
          - WEIGHT
          - HEIGHT
          - LENGTH
          - AXLE_WEIGHT
          - WIDTH
          - KPRA_LENGTH
          - NUMBER_OF_AXLES
          - TOTAL_PERMITTED_WEIGHT
          - LOW_EMISSION_ZONE
          - TRUCK_ROUTE
          - HAZARDOUS_MATERIALS
          - TUNNEL_RESTRICTION
          - TRAILER
        limit:
          description: "If the **property** represents a vehicle dimension such as\
            \ _WEIGHT_ or _HEIGHT_, this value contains the limit which was exceeded\
            \ by the vehicle."
          format: int32
          type: integer
        value:
          description: "If the **property** is: \n* _LOW_EMISSION_ZONE_, this value\
            \ contains the name of the low-emission zone, see the corresponding\n\
            low-emission zone event for details on what is required to enter this\
            \ zone,\n* _TRUCK_ROUTE_, this value contains the name of the truck route\
            \ prohibited for the selected vehicle,\n* _HAZARDOUS_MATERIALS_, this\
            \ value contains a comma-separated list of the prohibited hazardous materials.\n\
            * _TUNNEL_RESTRICTION_, this value represents the allowed tunnel restriction\
            \ code.\n* _TRAILER_, this value represents that a trailer is not allowed."
          type: string
      required:
      - name
      type: object
    ViolationType:
      description: "The reason why the road or the schedule is violated.\n * `PROHIBITED`\
        \ - The violated road is prohibited in general for the current vehicle such\
        \ as some roads in city centers, parks, forests and farmland or it is temporarily\
        \ closed due to construction sites.  \n * `DELIVERY_ONLY` - The violated road\
        \ is prohibited except for delivery vehicles such as factory premises or pedestrian\
        \ zones. Cars and vans are no delivery vehicles and may produce such violations.\
        \  \n * `URBAN` - The violated road is prohibited because urban roads are\
        \ prohibited for the current vehicle. This will not happen for the predefined\
        \ profiles.  \n * `RESIDENTS_ONLY` - The violated road is prohibited because\
        \ roads flagged as residents only are prohibited for the current vehicle.\
        \ This will not happen for the predefined profiles.\n * `RESTRICTED_ACCESS`\
        \ - The violated road is prohibited because it has restricted access because\
        \ a gate or a bollard has to be passed. This will always have **accessType**\
        \ _PASS_.  \n * `VEHICLE_PROPERTY` - The violated road is prohibited for the\
        \ current vehicle as some vehicle property exceeds a limit such as the weight\
        \ or height, or the road is prohibited for trucks in general.  \n * `COMBINED_TRANSPORT`\
        \ - The violated road is a boat (ferry) or rail (train or rail shuttle) connection\
        \ prohibited for the current vehicle.\n * `SCHEDULE` - The schedule is violated.\
        \ The reasons can be found in **scheduleViolationTypes**.\n * `BLOCKED_ROAD_BY_INTERSECTION`\
        \ - The violated road has been blocked through **options[blockIntersectingRoads]**."
      enum:
      - PROHIBITED
      - DELIVERY_ONLY
      - URBAN
      - RESIDENTS_ONLY
      - RESTRICTED_ACCESS
      - VEHICLE_PROPERTY
      - COMBINED_TRANSPORT
      - SCHEDULE
      - BLOCKED_ROAD_BY_INTERSECTION
      type: string
      x-enum-varnames:
      - PROHIBITED
      - DELIVERY_ONLY
      - URBAN
      - RESIDENTS_ONLY
      - RESTRICTED_ACCESS
      - VEHICLE_PROPERTY
      - COMBINED_TRANSPORT
      - SCHEDULE
      - BLOCKED_ROAD_BY_INTERSECTION
    TrafficEvent:
      description: Issued when the route passes a road for which live traffic data
        contain an incident such as a traffic jam. Requires _TRAFFIC_EVENTS_ to be
        requested.
      example:
        accessType: null
        delay: 5
        relatedEventIndex: 0
        description: description
        language: language
        polyline: polyline
      properties:
        delay:
          description: "The delay due to this incident [s]."
          format: int32
          type: integer
        description:
          description: |
            The description of the incident in the language specified by the parameter **options[language]**.
          type: string
        language:
          description: "The language of the description, if the given language is\
            \ not supported for this incident. Not present otherwise."
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        accessType:
          $ref: "#/components/schemas/AccessType"
        relatedEventIndex:
          description: For **accessType** _ENTER_ this index points to the corresponding
            event with **accessType** _EXIT_ and vice-versa. Not present otherwise.
          format: int32
          minimum: 0
          type: integer
        polyline:
          description: "The polyline of the traffic event in the format specified\
            \ by **options[polylineFormat]**. Only present for **accessType** _ENTER_.\
            \ Requires _TRAFFIC_EVENTS_POLYLINE_ to be requested."
          type: string
      required:
      - accessType
      - delay
      type: object
    LowEmissionZoneEvent:
      description: Issued when the route passes a low-emission zone. Requires _LOW_EMISSION_ZONE_EVENTS_
        to be requested.
      example:
        accessType: null
        name: name
        relatedEventIndex: 0
      properties:
        name:
          description: |
            The name of the low-emission zone.
          type: string
        accessType:
          $ref: "#/components/schemas/AccessType"
        relatedEventIndex:
          description: For **accessType** _ENTER_ this index points to the corresponding
            event with **accessType** _EXIT_ and vice-versa. Not present otherwise.
          format: int32
          minimum: 0
          type: integer
      required:
      - accessType
      - name
      type: object
    DeliveryOnlyEvent:
      description: Issued when the route passes roads which are prohibited except
        for delivery vehicles such as factory premises or pedestrian zones.  Requires
        _DELIVERY_ONLY_EVENTS_ to be requested.
      example:
        accessType: null
        relatedEventIndex: 0
        polyline: polyline
      properties:
        accessType:
          $ref: "#/components/schemas/AccessType"
        relatedEventIndex:
          description: For **accessType** _ENTER_ this index points to the corresponding
            event with **accessType** _EXIT_ and vice-versa. Not present otherwise.
          format: int32
          minimum: 0
          type: integer
        polyline:
          description: "The polyline of the delivery-only event in the format specified\
            \ by **options[polylineFormat]**. Only present for **accessType** _ENTER_.\
            \ Requires _DELIVERY_ONLY_EVENTS_POLYLINE_ to be requested."
          type: string
      required:
      - accessType
      type: object
    Toll:
      description: "Detailed information on the toll costs, providers and tariff information.\
        \  \nToll prices do not include VAT.\n"
      example:
        costs:
          convertedPrice: ""
          countries:
          - convertedPrice:
              price: 12.91
              currency: EUR
            countryCode: countryCode
            price:
              price: 12.91
              currency: EUR
          - convertedPrice:
              price: 12.91
              currency: EUR
            countryCode: countryCode
            price:
              price: 12.91
              currency: EUR
          prices:
          - price: 12.91
            currency: EUR
          - price: 12.91
            currency: EUR
          containsApproximatedSections: false
        systems:
        - tariffVersionValidFrom: 2000-01-23T04:56:07.000+00:00
          name: name
          tariffVersion: tariffVersion
          operatorName: operatorName
        - tariffVersionValidFrom: 2000-01-23T04:56:07.000+00:00
          name: name
          tariffVersion: tariffVersion
          operatorName: operatorName
        sections:
        - costs:
          - convertedPrice: ""
            etcSubscriptions:
            - etcSubscriptions
            - etcSubscriptions
            price: 0.5637376656633328
            paymentMethods:
            - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
            - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
            currency: currency
          - convertedPrice: ""
            etcSubscriptions:
            - etcSubscriptions
            - etcSubscriptions
            price: 0.5637376656633328
            paymentMethods:
            - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
            - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
            currency: currency
          approximated: false
          tollRoadType: GENERAL
          calculatedDistance: 141
          countryCode: countryCode
          displayName: displayName
          officialDistance: 142
          tollSystemIndex: 0
        - costs:
          - convertedPrice: ""
            etcSubscriptions:
            - etcSubscriptions
            - etcSubscriptions
            price: 0.5637376656633328
            paymentMethods:
            - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
            - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
            currency: currency
          - convertedPrice: ""
            etcSubscriptions:
            - etcSubscriptions
            - etcSubscriptions
            price: 0.5637376656633328
            paymentMethods:
            - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
            - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
            currency: currency
          approximated: false
          tollRoadType: GENERAL
          calculatedDistance: 141
          countryCode: countryCode
          displayName: displayName
          officialDistance: 142
          tollSystemIndex: 0
        currencies:
          date: 2000-01-23
          provider: provider
          exchangeRates:
          - rate: 7.061401241503109
            currency: currency
          - rate: 7.061401241503109
            currency: currency
          baseCurrency: baseCurrency
      properties:
        costs:
          $ref: "#/components/schemas/TollCosts"
        sections:
          description: The list of toll sections defined by the toll operators.
          items:
            $ref: "#/components/schemas/TollSection"
          type: array
        systems:
          description: The list of toll systems defined by the toll operators.
          items:
            $ref: "#/components/schemas/TollSystem"
          type: array
        currencies:
          $ref: "#/components/schemas/Currencies"
      type: object
    TollSectionCost:
      example:
        convertedPrice: ""
        etcSubscriptions:
        - etcSubscriptions
        - etcSubscriptions
        price: 0.5637376656633328
        paymentMethods:
        - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
        - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
        currency: currency
      properties:
        price:
          description: The price in the specified currency.
          format: double
          minimum: 0
          type: number
        currency:
          description: "The currency code according to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
          type: string
        paymentMethods:
          description: "The payment methods for toll costs.  \n * `ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION`\
            \ - Electronic toll collection system with a subscription required.  \n\
            \ * `ELECTRONIC_TOLL_COLLECTION` - Electronic toll collection system with\
            \ no subscription required.  \n * `CASH` - Cash payment at a toll booth.\
            \  \n * `CREDIT_CARD` - Credit card payment at a toll booth."
          items:
            $ref: "#/components/schemas/PaymentMethod"
          type: array
        etcSubscriptions:
          description: The required electronic toll collection subscriptions for the
            payment method _ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION_.
          items:
            type: string
          type: array
        convertedPrice:
          allOf:
          - $ref: "#/components/schemas/TollPrice"
          description: The price of the section in the converted currency.
      required:
      - currency
      - price
      type: object
    TollEvent:
      description: Issued when a road subject to toll is entered or exited. Requires
        _TOLL_EVENTS_ to be requested.
      example:
        sectionIndex: 0
        accessType: ENTER
        displayName: displayName
        relatedEventIndex: 0
      properties:
        sectionIndex:
          description: The index of the corresponding toll section.  The section indexes
            of a pair of ENTER and EXIT events define the range of sections between
            the two events.
          format: int32
          minimum: 0
          type: integer
        displayName:
          description: "The display name of the toll event. Only present if a name\
            \ is available. For example, this name can be a toll location name defined\
            \ by the toll operator. In some cases the display names of the toll event\
            \ and the toll section can differ. In case the toll section has been approximated,\
            \ the display name of the affected toll event contains the hint \"(approximated)\"\
            ."
          type: string
        accessType:
          $ref: "#/components/schemas/AccessType"
        relatedEventIndex:
          description: For **accessType** _ENTER_ this index points to the corresponding
            event with **accessType** _EXIT_ and vice-versa. Not present otherwise.
          format: int32
          minimum: 0
          type: integer
      required:
      - accessType
      type: object
    TollPrice:
      description: The toll price payable in this country.
      example:
        price: 12.91
        currency: EUR
      properties:
        price:
          description: The toll price in the specified currency.
          example: 12.91
          format: double
          minimum: 0
          type: number
        currency:
          description: "The currency code according to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
          example: EUR
          type: string
      required:
      - currency
      - price
      type: object
    ElectricityPrice:
      description: The electricity price payable for charging the battery.
      example:
        price: 12.91
        currency: EUR
      properties:
        price:
          description: The electricity price in the specified currency.
          example: 12.91
          format: double
          minimum: 0
          type: number
        currency:
          description: "The currency code according to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
          example: EUR
          type: string
      required:
      - currency
      - price
      type: object
    TollRoadType:
      description: "The reason why toll is charged.  \n * `GENERAL` - A general toll\
        \ road where no special toll applies.  \n * `CITY` - An urban area or city\
        \ is subject to toll.  \n * `BRIDGE` - A bridge is subject to toll.  \n *\
        \ `TUNNEL` - A tunnel is subject to toll.  \n * `FERRY` - A ferry is subject\
        \ to toll.  \n * `MOUNTAIN_PASS` - A mountain pass is subject to toll.  "
      enum:
      - GENERAL
      - CITY
      - BRIDGE
      - TUNNEL
      - FERRY
      - MOUNTAIN_PASS
      type: string
      x-enum-varnames:
      - GENERAL
      - CITY
      - BRIDGE
      - TUNNEL
      - FERRY
      - MOUNTAIN_PASS
    TollSection:
      example:
        costs:
        - convertedPrice: ""
          etcSubscriptions:
          - etcSubscriptions
          - etcSubscriptions
          price: 0.5637376656633328
          paymentMethods:
          - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
          - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
          currency: currency
        - convertedPrice: ""
          etcSubscriptions:
          - etcSubscriptions
          - etcSubscriptions
          price: 0.5637376656633328
          paymentMethods:
          - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
          - ELECTRONIC_TOLL_COLLECTION_SUBSCRIPTION
          currency: currency
        approximated: false
        tollRoadType: GENERAL
        calculatedDistance: 141
        countryCode: countryCode
        displayName: displayName
        officialDistance: 142
        tollSystemIndex: 0
      properties:
        costs:
          description: |-
            The toll costs payable for this section. If different prices according to the payment method exist, this list contains one item for each price.
            The first item contains the price used to calculate the total toll costs for the route.
            Further items are alternative costs for the section with different payment methods or different subscriptions.
          items:
            $ref: "#/components/schemas/TollSectionCost"
          minItems: 1
          type: array
        tollRoadType:
          $ref: "#/components/schemas/TollRoadType"
        tollSystemIndex:
          description: The index in the list of toll systems this toll section belongs
            to.
          format: int32
          minimum: 0
          type: integer
        countryCode:
          description: "Countries are represented according to their [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\
            \ or [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) if referring\
            \ to a subdivision."
          type: string
        displayName:
          description: "A name that describes this toll section. It can relate to\
            \ the names of the road intersections, to the area in general or to the\
            \ type of toll."
          type: string
        officialDistance:
          description: "The official distance defined by the toll operator [m].  It\
            \ may be different from the travel distance. Only present if the toll\
            \ operator provides an official distance."
          example: 142
          format: int32
          minimum: 0
          type: integer
        calculatedDistance:
          description: The calculated distance of the toll section on the current
            route.  It may be different from the official distance.
          example: 141
          format: int32
          minimum: 0
          type: integer
        approximated:
          description: States whether the section is approximated because the start
            or destination waypoint is located inside a toll section and thus the
            exact toll price cannot be calculated. The closest toll location after
            the waypoint is used to approximate the toll price.
          example: false
          type: boolean
      required:
      - costs
      - countryCode
      - tollRoadType
      type: object
    TollCosts:
      description: The toll prices payable for this route or leg aggregated by currency.
      example:
        convertedPrice: ""
        countries:
        - convertedPrice:
            price: 12.91
            currency: EUR
          countryCode: countryCode
          price:
            price: 12.91
            currency: EUR
        - convertedPrice:
            price: 12.91
            currency: EUR
          countryCode: countryCode
          price:
            price: 12.91
            currency: EUR
        prices:
        - price: 12.91
          currency: EUR
        - price: 12.91
          currency: EUR
        containsApproximatedSections: false
      properties:
        prices:
          description: The toll prices payable in the given currencies. The price
            may be 0 if no toll applies for a currency in a country passed by the
            route.
          items:
            $ref: "#/components/schemas/TollPrice"
          minItems: 1
          type: array
        convertedPrice:
          allOf:
          - $ref: "#/components/schemas/TollPrice"
          description: The cumulated toll price in the converted currency.
        countries:
          description: The toll prices by country or subdivision. The price may be
            0 if no toll applies in a country passed by the route.
          items:
            $ref: "#/components/schemas/TollCostsByCountry"
          minItems: 1
          type: array
        containsApproximatedSections:
          description: "True, if the start or destination waypoint is located inside\
            \ a toll section. In such cases the exact toll price cannot be calculated\
            \ and the closest toll location after the waypoint is used to approximate\
            \ the toll price. When toll sections are requested, the affected section\
            \ is marked as well."
          example: false
          type: boolean
      required:
      - countries
      - prices
      type: object
    TollCostsByCountry:
      example:
        convertedPrice:
          price: 12.91
          currency: EUR
        countryCode: countryCode
        price:
          price: 12.91
          currency: EUR
      properties:
        countryCode:
          description: "Countries are represented according to their [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\
            \ or [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) if referring\
            \ to a subdivision."
          type: string
        price:
          $ref: "#/components/schemas/TollPrice"
        convertedPrice:
          $ref: "#/components/schemas/TollPrice"
      required:
      - countryCode
      - price
      type: object
    TollSystem:
      example:
        tariffVersionValidFrom: 2000-01-23T04:56:07.000+00:00
        name: name
        tariffVersion: tariffVersion
        operatorName: operatorName
      properties:
        name:
          description: The name of the toll system.
          type: string
        operatorName:
          description: The name of the toll operator.
          type: string
        tariffVersion:
          description: The tariff version that has been used.
          type: string
        tariffVersionValidFrom:
          description: "The starting date of the tariff version validity formatted\
            \ according to [RFC 3339](https://tools.ietf.org/html/rfc3339)."
          format: date-time
          type: string
      required:
      - name
      type: object
    Currencies:
      description: Information about the currencies that are listed in the toll costs
        and/or toll sections objects.
      example:
        date: 2000-01-23
        provider: provider
        exchangeRates:
        - rate: 7.061401241503109
          currency: currency
        - rate: 7.061401241503109
          currency: currency
        baseCurrency: baseCurrency
      properties:
        date:
          description: "The date of the exchange rates formatted according to [RFC\
            \ 3339](https://tools.ietf.org/html/rfc3339)."
          format: date
          type: string
        provider:
          description: The provider of the exchange rates.
          type: string
        baseCurrency:
          description: "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency\
            \ code as provided in the request."
          pattern: "[A-Z]{3}"
          type: string
        exchangeRates:
          description: The exchange rates that were used to determine the converted
            prices.
          items:
            $ref: "#/components/schemas/ExchangeRate"
          type: array
      required:
      - baseCurrency
      - date
      - exchangeRates
      - provider
      type: object
    ExchangeRate:
      example:
        rate: 7.061401241503109
        currency: currency
      properties:
        currency:
          description: "The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency\
            \ code of the currency from which a price has been converted."
          pattern: "[A-Z]{3}"
          type: string
        rate:
          description: The exchange rate to convert a price from the base currency
            to this currency.
          format: double
          type: number
      required:
      - currency
      - rate
      type: object
    UTCOffsetChangeEvent:
      description: "Issued when the offset to UTC changes, mostly when traveling into\
        \ a different time zone.\nRequires _UTC_OFFSET_CHANGE_EVENTS_ to be requested.\
        \  \n\nChanging the UTC offset does not necessarily mean to change the time\n\
        zone. Vice-versa changing the time zone does not necessarily mean to\nchange\
        \ the UTC offset. There are some special cases to consider.\n *  The UTC offset\
        \ may change even within a time zone when the route takes place exactly when\
        \ the daylight-saving time changes.\n *  The UTC offset may not change when\
        \ changing the time zone. In Canada, for example, there are regions which\
        \ do not use DST \n so that the neighboring time zone has the same UTC offset\
        \ in summer."
      example:
        utcOffset: 443
      properties:
        utcOffset:
          description: "The new UTC offset [min]."
          format: int32
          maximum: 840
          minimum: -720
          type: integer
      required:
      - utcOffset
      type: object
    WaypointEvent:
      description: "Issued when a waypoint is reached by the route, but not for route-manipulation\
        \ waypoints. When using drivers' working hours and the schedule requires a\
        \ break or a waiting time before the service, the waypoint event is issued\
        \ already with the break or the waiting time as the location is already reached.\
        \ Requires _WAYPOINT_EVENTS_ to be requested."
      example:
        name: name
        index: 0
      properties:
        index:
          description: The index of the waypoint in the request.
          format: int32
          minimum: 0
          type: integer
        name:
          description: The name of the waypoint as given in the request. This parameter
            is only present if it is not empty.
          type: string
      required:
      - index
      type: object
    CombinedTransportEvent:
      description: Issued when a combined transport is entered or exited. Requires
        _COMBINED_TRANSPORT_EVENTS_ to be requested.
      example:
        accessType: null
        name: name
        relatedEventIndex: 0
        type: null
      properties:
        name:
          description: The name of the combined transport.
          type: string
        type:
          $ref: "#/components/schemas/CombinedTransportType"
        accessType:
          $ref: "#/components/schemas/AccessType"
        relatedEventIndex:
          description: For **accessType** _ENTER_ this index points to the corresponding
            event with **accessType** _EXIT_ and vice-versa. Not present otherwise.
          format: int32
          minimum: 0
          type: integer
      required:
      - accessType
      - name
      - type
      type: object
    ScheduleEvent:
      description: |-
        Issued when the driver has to take a break or a rest, perform service or wait for a waypoint to open. If **useServiceTimeForRecreation** is true, each _SERVICE_ is reported along with another type depending on whether or not the service time is actually used for recreation. Times on a combined transport are always _WAITING_ unless used for recreation. Requires _SCHEDULE_EVENTS_ or _SCHEDULE_EVENTS_WITH_DRIVING_ to be requested, POST only.
        It can be helpful to take other events into account such as **waypoint** and **combinedTransport** to interpret the results, consider requesting them. When there are several waypoints at the same location, **waypoint** helps to match _SERVICE_ to the proper waypoint, **combinedTransport** helps to match recreation time.
      example:
        duration: 0
        scheduleTypes:
        - BREAK
        - BREAK
      properties:
        duration:
          description: "The duration [s]."
          format: int32
          minimum: 0
          type: integer
        scheduleTypes:
          description: |
            Tells what happens at this position of the route.
          items:
            $ref: "#/components/schemas/ScheduleType"
          minItems: 1
          type: array
      required:
      - duration
      - scheduleTypes
      type: object
    ScheduleType:
      enum:
      - BREAK
      - DAILY_REST
      - WAITING
      - SERVICE
      - DRIVING
      type: string
      x-enum-varnames:
      - BREAK
      - DAILY_REST
      - WAITING
      - SERVICE
      - DRIVING
    ScheduleViolationType:
      enum:
      - OPENING_INTERVAL
      - MAXIMUM_TRAVEL_TIME
      - MAXIMUM_DRIVING_TIME
      type: string
      x-enum-varnames:
      - OPENING_INTERVAL
      - MAXIMUM_TRAVEL_TIME
      - MAXIMUM_DRIVING_TIME
    TrafficMode:
      default: REALISTIC
      description: |-
        Defines how to consider traffic in a route calculation.
         * `REALISTIC` - Returns the most realistic **travelTime** and **distance** for the selected vehicle and the
         given **startTime** or **arrivalTime** (or the current time if none of them is specified).
         Takes into account the live traffic situation such as traffic jams or road works
         as well as the typical traffic situation at the time of day and the day of week of travel such as the rush-hour
         on Monday morning or light traffic on Saturday evening.
         * `AVERAGE` - Returns the average **travelTime** and **distance** for the selected vehicle.
         If **startTime** or **arrivalTime** is specified, the typical traffic situation for that time of day and day of week will be considered such as the rush-hour
         on Monday morning or light traffic on Saturday evening. Toll will be calculated according to that date and time.
         If none of them is specified the typical traffic situation will not be considered, and **travelTime** and **distance** are an average independent of when to travel.
         Toll will be calculated for an arbitrary Monday at noon.

        See [here](./concepts/traffic-modes) for more information.
        This parameter will be ignored for non-motorized profiles such as _BICYCLE_ or _PEDESTRIAN_.
      enum:
      - REALISTIC
      - AVERAGE
      type: string
      x-enum-varnames:
      - REALISTIC
      - AVERAGE
    ReachableTrafficMode:
      default: AVERAGE
      description: |-
        Defines how to consider traffic in a reachable areas or a reachable locations calculation.
         * `REALISTIC` - Uses the most realistic **travelTime** and **distance** for the selected vehicle and the
         given **referenceTime** (or the current time if none **referenceTime** is specified).
         Takes into account the live traffic situation such as traffic jams or road works
         as well as the typical traffic situation at the time of day and the day of week of travel such as the rush-hour
         on Monday morning or light traffic on Saturday evening.
         * `AVERAGE` - Uses the average **travelTime** and **distance** for the selected vehicle.
         If **referenceTime** is specified, the typical traffic situation for that time of day and day of week will be considered such as the rush-hour
         on Monday morning or light traffic on Saturday evening.
         If no **referenceTime** is specified the typical traffic situation will not be considered, and **travelTime** and **distance** are an average independent of when to travel.

        See [here](./concepts/traffic-modes) for more information.
        This parameter will be ignored for non-motorized profiles such as _BICYCLE_ or _PEDESTRIAN_.
      enum:
      - REALISTIC
      - AVERAGE
      type: string
      x-enum-varnames:
      - REALISTIC
      - AVERAGE
    RoutingMode:
      default: FAST
      description: "Specifies which objective function should be used for the route\
        \ calculation.  \n* `FAST` is the default which returns a route considering\
        \ a tradeoff between distance and travel time.\nAll vehicle-specific restrictions\
        \ are properly considered and violated only, if no other route can be found.\n\
        * `SHORT` returns a route which is probably shorter but accepting longer travel\
        \ times.\nThe resulting route is still sensible and can be driven with the\
        \ given vehicle, but it may disregard restrictions like driving through residential\
        \ areas.\n* `SHORTEST` is even more aggressively optimized for minimizing\
        \ distance, which can significantly increase travel times.\nThe route remains\
        \ valid and drivable for the vehicle, but may more readily use slower or smaller\
        \ roads.\n* `MONETARY` assigns monetary costs to each road segment according\
        \ the provided cost parameters and the vehicles properties like its consumption.\n\
        Furthermore, toll costs are integrated as well. See [here](./concepts/monetary-costs)\
        \ for more information.\n\nThis parameter will be ignored, if a **routeId**\
        \ is specified."
      enum:
      - FAST
      - SHORT
      - SHORTEST
      - MONETARY
      type: string
      x-enum-varnames:
      - FAST
      - SHORT
      - SHORTEST
      - MONETARY
    PolylineFormat:
      default: GEO_JSON
      description: "Defines the format for polylines in the response.  \n * `GEO_JSON`\
        \ - Polylines are returned in [GeoJSON](https://en.wikipedia.org/wiki/GeoJSON)\
        \ format.  \n * `GOOGLE_ENCODED_POLYLINE` - Polylines are returned in [Google's\
        \ Encoded Polyline](https://developers.google.com/maps/documentation/utilities/polylinealgorithm)\
        \ format.  "
      enum:
      - GEO_JSON
      - GOOGLE_ENCODED_POLYLINE
      type: string
      x-enum-varnames:
      - GEO_JSON
      - GOOGLE_ENCODED_POLYLINE
    PolylineMapType:
      default: RASTER
      description: |-
        Defines whether polylines should match the Raster Maps API or the Vector Maps API.

        Not only the polyline itself, but also other results and parameters that use the polyline of the route may change slightly, e.g. emission-related results and **matchSideOfStreet**.
      enum:
      - RASTER
      - VECTOR
      type: string
      x-enum-varnames:
      - RASTER
      - VECTOR
    AlternativeRoutes:
      description: Detailed information on alternative routes. Requires _ALTERNATIVE_ROUTES_
        to be requested. The array may be empty when no alternative routes are found.
      items:
        $ref: "#/components/schemas/AlternativeRoute"
      type: array
    AlternativeRoute:
      example:
        violated: false
        travelTime: 56
        routeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        distance: 1422
        trafficDelay: 0
        polyline: polyline
      properties:
        distance:
          description: "The distance of the alternative route [m]."
          example: 1422
          format: int32
          minimum: 0
          type: integer
        travelTime:
          description: "The travel time for the alternative route [s]."
          example: 56
          format: int32
          minimum: 0
          type: integer
        trafficDelay:
          description: |-
            The total delay due to live traffic on this alternative route [s].

            This value contains the sum of all traffic events on this alternative route and  will be non-zero only if **options[trafficMode]=REALISTIC**.
            See [here](./concepts/traffic-modes) for more information.
          example: 0
          format: int32
          minimum: 0
          type: integer
        violated:
          description: If the alternative route cannot be calculated for the given
            vehicle the resulting alternative route is marked as violated.
          example: false
          type: boolean
        polyline:
          description: "The polyline of the alternative route in the format specified\
            \ by **options[polylineFormat]**."
          type: string
        routeId:
          description: The ID of the alternative route. It is valid for 12 hours.
          format: uuid
          type: string
      required:
      - distance
      - travelTime
      - violated
      type: object
    ScheduleReport:
      description: "Provides an overview of the times of the schedule of this route\
        \ including break and rest times.\nThe sum of all times is equal to the **travelTime**\
        \ of the route.        \nIf **useServiceTimeForRecreation** is true, waiting,\
        \ break and rest times which take place during service will\nnot be reported\
        \ here. If that does not match your needs, please evaluate the corresponding\
        \ **scheduleEvent**s. \nRequires _SCHEDULE_REPORT_ to be requested, POST only."
      example:
        restTime: 0
        breakTime: 0
        drivingTime: 0
        waitingTime: 0
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        serviceTime: 0
      properties:
        startTime:
          description: "The start time of the route formatted according to [RFC 3339](https://tools.ietf.org/html/rfc3339).\
            \ Only present with **options[trafficMode]** _REALISTIC_ or when **options[startTime]**\
            \ is specified."
          format: date-time
          type: string
        endTime:
          description: "The end time of the route formatted according to [RFC 3339](https://tools.ietf.org/html/rfc3339).\
            \ Only present with **options[trafficMode]** _REALISTIC_ or when **options[startTime]**\
            \ is specified."
          format: date-time
          type: string
        drivingTime:
          description: "The total driving time of the route [s]. Time which is not\
            \ service, waiting, break or rest is considered as driving."
          format: int32
          minimum: 0
          type: integer
        serviceTime:
          description: "The total service time of the route [s], equal to the sum\
            \ of **schedule** events of type _SERVICE_."
          format: int32
          minimum: 0
          type: integer
        waitingTime:
          description: "The total waiting time of the route [s], equal to the sum\
            \ of **schedule** events of type _WAITING_ which are not _SERVICE_ at\
            \ the same time."
          format: int32
          minimum: 0
          type: integer
        breakTime:
          description: "The total break time of the route [s], equal to the sum of\
            \ **schedule** events of type _BREAK_ which are not _SERVICE_ at the same\
            \ time."
          format: int32
          minimum: 0
          type: integer
        restTime:
          description: "The total rest time of the route [s], equal to the sum of\
            \ **schedule** events of type _DAILY_REST_ which are not _SERVICE_ at\
            \ the same time."
          format: int32
          minimum: 0
          type: integer
      required:
      - breakTime
      - drivingTime
      - restTime
      - serviceTime
      - waitingTime
      type: object
    MonetaryCosts:
      description: "Provides an overview of the costs of the route.  \nRequires the\
        \ result _MONETARY_COSTS_ to be requested."
      example:
        tollCost: 0.05199002018724985
        distanceCost: 0.9132027271330689
        currency: currency
        workingTimeCost: 0.08774076871421566
        totalCost: 0.7260521264802103
        energyCost: 0.9702963800023566
      properties:
        currency:
          description: "The currency code according to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217)."
          pattern: "[A-Z]{3}"
          type: string
        totalCost:
          description: The total monetary cost of the route.
          format: double
          minimum: 0
          type: number
        distanceCost:
          description: "The distance cost based on the **monetaryCostOptions[costPerKilometer]**\
            \ and the driving distance."
          format: double
          minimum: 0
          type: number
        workingTimeCost:
          description: "The working time cost based on **monetaryCostOptions[costPerWorkingHour]**\
            \ and the driving time. Break, service and rest times are not considered."
          format: double
          minimum: 0
          type: number
        energyCost:
          description: The energy cost based on the vehicle's consumption and the
            corresponding cost parameters.
          format: double
          minimum: 0
          type: number
        tollCost:
          description: "The toll cost based on the route and the vehicle.  \nToll\
            \ prices do not include VAT.\n"
          format: double
          minimum: 0
          type: number
      required:
      - currency
      - distanceCost
      - energyCost
      - tollCost
      - totalCost
      - workingTimeCost
      type: object
    AllowedCountries:
      description: |-
        Comma-separated list of countries the route is allowed to pass. By default, all countries are allowed. If this parameter is present, only these countries are allowed to be passed,
        i.e. drive only in these countries.
        Countries are represented according to their [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) or [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) if referring to a subdivision.
        This parameter is mutually exclusive with **prohibitedCountries** and will be ignored, if a **routeId** is specified.
      type: string
    ProhibitedCountries:
      description: "Comma-separated list of countries the route must not pass. By\
        \ default, all countries are allowed. If this parameter is present, all but\
        \ the given countries are allowed to be passed,\ni.e. do not drive in these\
        \ countries. \nCountries are represented according to their [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)\
        \ or [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) if referring to\
        \ a subdivision.\nThis parameter is mutually exclusive with **allowedCountries**\
        \ and will be ignored, if a **routeId** is specified."
      type: string
    ReachableAreasId:
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          description: The ID of the calculated reachable areas.
          format: uuid
          type: string
      required:
      - id
      type: object
    ReachableLocationsId:
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          description: The ID of the calculated reachable locations.
          format: uuid
          type: string
      required:
      - id
      type: object
    ReachableAreaPolygons:
      description: The list of polygons calculated for the specified horizons in GeoJson
        format. For each horizon there is a separate polygon at the same index.
      items:
        type: string
      type: array
    ReachableAreasResponse:
      example:
        reachableAreas:
          polygons:
          - polygons
          - polygons
          warnings:
          - warningCode: warningCode
            description: description
            details:
              key: ""
          - warningCode: warningCode
            description: description
            details:
              key: ""
        error:
          traceId: dc5b4c9a240458dd57128194dfbef0c8
          description: Invalid or missing authentication credentials.
          errorCode: GENERAL_UNAUTHENTICATED
          details:
            message: Invalid API Key.
        status: RUNNING
      properties:
        status:
          $ref: "#/components/schemas/CalculationStatus"
        reachableAreas:
          $ref: "#/components/schemas/ReachableAreas"
        error:
          $ref: "#/components/schemas/ErrorResponse"
      type: object
    ReachableAreas:
      description: The result of the reachable areas calculation.
      example:
        polygons:
        - polygons
        - polygons
        warnings:
        - warningCode: warningCode
          description: description
          details:
            key: ""
        - warningCode: warningCode
          description: description
          details:
            key: ""
      properties:
        polygons:
          description: The list of polygons calculated for the specified horizons
            in GeoJson format. For each horizon there is a separate polygon at the
            same index.
          items:
            type: string
          type: array
        warnings:
          description: A list of warnings concerning the validity of the result.
          items:
            $ref: "#/components/schemas/Warning"
          type: array
      required:
      - polygons
      type: object
    ReachableLocationsResponse:
      example:
        reachableLocations:
          unreachable:
          - 5
          - 5
          warnings:
          - warningCode: warningCode
            description: description
            details:
              key: ""
          - warningCode: warningCode
            description: description
            details:
              key: ""
          reachable:
          - travelTime: 6
            distance: 0
            index: 1
          - travelTime: 6
            distance: 0
            index: 1
        error:
          traceId: dc5b4c9a240458dd57128194dfbef0c8
          description: Invalid or missing authentication credentials.
          errorCode: GENERAL_UNAUTHENTICATED
          details:
            message: Invalid API Key.
        status: RUNNING
      properties:
        status:
          $ref: "#/components/schemas/CalculationStatus"
        reachableLocations:
          $ref: "#/components/schemas/ReachableLocations"
        error:
          $ref: "#/components/schemas/ErrorResponse"
      type: object
    ReachableLocations:
      description: The results of a reachable locations calculation.
      example:
        unreachable:
        - 5
        - 5
        warnings:
        - warningCode: warningCode
          description: description
          details:
            key: ""
        - warningCode: warningCode
          description: description
          details:
            key: ""
        reachable:
        - travelTime: 6
          distance: 0
          index: 1
        - travelTime: 6
          distance: 0
          index: 1
      properties:
        reachable:
          description: Reachable locations ordered by distance or travel time (depending
            on the request **horizonType**).
          items:
            $ref: "#/components/schemas/ReachableLocation"
          type: array
        unreachable:
          description: Indexes of the unreachable locations as given in the request
            locations.
          items:
            format: int32
            type: integer
          type: array
        warnings:
          description: A list of warnings concerning the validity of the result.
          items:
            $ref: "#/components/schemas/Warning"
          type: array
      type: object
    ReachableLocation:
      description: Contains the distance and travel time from the input waypoint or
        route to a reached location or vice versa (depending on the request drivingDirection).
      example:
        travelTime: 6
        distance: 0
        index: 1
      properties:
        distance:
          description: The distance from the input waypoint to this location or vice
            versa.
          format: int32
          type: integer
        travelTime:
          description: The travel time from the input waypoint to this location or
            vice versa.
          format: int32
          type: integer
        index:
          description: The index of the reached input location.
          format: int32
          type: integer
      type: object
    DrivingDirection:
      default: OUTBOUND
      description: |-
        Specifies the driving direction, i.e. from start to destination or from destination to start..
         * `OUTBOUND` - Indicates an outbound routing from start to destination, i.e. the area which can be reached from the location within the given horizon. Use this value to calculate which can be covered e.g. by an emergency service such as a fire department.
         * `INBOUND` - Indicates an inbound routing from destination to start, i.e. from where the location can be reached within the given horizon. Use this value to calculate the catchment area, e.g. of a school or a hospital.
      enum:
      - OUTBOUND
      - INBOUND
      type: string
      x-enum-varnames:
      - OUTBOUND
      - INBOUND
    HorizonType:
      default: TRAVEL_TIME
      description: |-
        Specifies the geographical horizon.
         * `DISTANCE` - Represents a geographical horizon that is described by a distance. Every point or road segment that is reachable from the source within the specified distance is included in the horizon.
         * `TRAVEL_TIME` - Represents a geographical horizon that is described by a travel time. Every point or road segment that is reachable from the source within the specified travel time is included in the horizon.
      enum:
      - DISTANCE
      - TRAVEL_TIME
      type: string
      x-enum-varnames:
      - DISTANCE
      - TRAVEL_TIME
    CalculationStatus:
      description: |-
        The current status of the calculation.
         * `RUNNING` - The calculation is still running.
         * `SUCCEEDED` - The calculation has completed successfully.
         * `FAILED` - The calculation has completed with a failure.
      enum:
      - RUNNING
      - SUCCEEDED
      - FAILED
      type: string
      x-enum-varnames:
      - RUNNING
      - SUCCEEDED
      - FAILED
    ReachableOptions:
      properties:
        drivingDirection:
          $ref: "#/components/schemas/DrivingDirection"
        referenceTime:
          description: |-
            Defines the start time for **drivingDirection** _OUTBOUND_ or the arrival time for **drivingDirection** _INBOUND_ formatted according to [RFC 3339](https://tools.ietf.org/html/rfc3339).
            If none of them is specified the current time will be used.

            If the date-time string does not include an explicit offset to UTC, the time will be interpreted as the local time of the waypoint.
            The date must not be before 1970-01-01T00:00:00+00:00 nor after 2037-12-31T23:59:59+00:00.
            The response will contain the offset to UTC specified in the request or that of the waypoint.
            For best results it should not be more than one month in the past nor more than six months in the future.
            See [here](./concepts/date-and-time) for more information on the relevance of date and time.
          example: 2020-12-04T06:00:00Z
          format: date-time
          type: string
        trafficMode:
          $ref: "#/components/schemas/ReachableTrafficMode"
        allowedCountries:
          description: |-
            Comma-separated list of countries the route is allowed to pass. By default, all countries are allowed. If this parameter is present, only these countries are allowed to be passed,
            i.e. drive only in these countries.
            Countries are represented according to their [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) or [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) if referring to a subdivision.
            This parameter is mutually exclusive with **prohibitedCountries** and will be ignored, if a **routeId** is specified.
          type: string
        prohibitedCountries:
          description: "Comma-separated list of countries the route must not pass.\
            \ By default, all countries are allowed. If this parameter is present,\
            \ all but the given countries are allowed to be passed,\ni.e. do not drive\
            \ in these countries. \nCountries are represented according to their [ISO\
            \ 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) or\
            \ [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) if referring\
            \ to a subdivision.\nThis parameter is mutually exclusive with **allowedCountries**\
            \ and will be ignored, if a **routeId** is specified."
          type: string
        blockIntersectingRoads:
          description: "Pipe-separated list of polylines.  \nRoads and combined transports\
            \ that intersect the given polylines will be considered as blocked.\n\
            Each list element is a polyline. Each point is a coordinate of latitude\
            \ and longitude. Coordinates and points are separated by a comma.\nFormat:\
            \ `<poly1_lat1>,<poly1_lon1>,...,<poly1_latN>,<poly1_lonN>|<poly2_lat1>,<poly2_lon1>,...,<poly2_latN>,<poly2_lonN>|...`\
            \  \nNotes:\n* Be aware of the URL length restrictions.\n* If there is\
            \ no other route connecting two waypoints the will be reported as violated\
            \ and correspondingly violation events with type **BLOCKED_ROAD_BY_INTERSECTION**\
            \ will be reported if violation events are requested.\n* Requests will\
            \ be rejected if at least one provided polyline\n  * does not consist\
            \ of an even number of coordinates,\n  * consists of less than two points,\n\
            \  * contains invalid coordinates or\n  * intersects more than 5000 road\
            \ segments.\n\nThis parameter will be ignored, if a **routeId** is specified.\n"
          example: "49.8,9.9,49.9,10|33.1,-111.1,33.0,-111.2"
          type: string
      type: object
    Locations:
      example:
        locations:
        - latitude: 49.480301
          longitude: 6.110667
        - latitude: 49.480301
          longitude: 6.110667
      properties:
        locations:
          description: The list of locations which should be taken into account for
            the calculation of reachable locations.
          items:
            $ref: "#/components/schemas/Location"
          minItems: 1
          type: array
      required:
      - locations
      type: object
    Location:
      example:
        latitude: 49.480301
        longitude: 6.110667
      properties:
        latitude:
          description: The latitude value in degrees (WGS84/EPSG:4326) from south
            to north.
          example: 49.480301
          format: double
          maximum: 90
          minimum: -90
          type: number
        longitude:
          description: The longitude value in degrees (WGS84/EPSG:4326) from west
            to east.
          example: 6.110667
          format: double
          maximum: 180
          minimum: -180
          type: number
      required:
      - latitude
      - longitude
      type: object
    RouteRequest:
      example:
        routeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        driver:
          workingHoursPreset: EU_DRIVING_TIME_REGULATION_FOR_SINGLE_DAY
          workLogbook:
            accumulatedDrivingTimeSinceLastDailyRest: 0
            accumulatedWorkingTimeSinceLastBreak: 0
            lastTimeTheDriverWorked: 2020-12-04T06:00:00Z
            accumulatedDrivingTimeSinceLastBreak: 0
            accumulatedTravelTimeSinceLastDailyRest: 0
          useTimeOnCombinedTransportForRecreation: false
        waypoints:
        - onRoad:
            evParameters:
              powerConsumptionDuringService: 0.9301444243932576
              weather:
                temperature: 22.329474196844842
                windDirection: 5
                windSpeed: 0
              chargingStation:
                useServiceTimeForCharging: false
                currentType: DIRECT
                setupTime: 0
                power: 0
                kWhPrice: 0.7061401241503109
            vehicleParameters:
              averageElectricityConsumption: 115
              loadWeight: 25000
              truckRoutes:
              - SE_BK_1
              - SE_BK_1
              averageFuelConsumption: 35
              length: 1650
              width: 254
              tunnelRestrictionCode: NONE
              axleWeight: 11500
              hazardousMaterials:
              - OTHER
              - OTHER
              height: 400
            useServiceTimeForRecreation: false
            latitude: 49.480301
            matchSideOfStreet: false
            serviceTime: 0
            openingIntervals:
            - start: 2020-12-07T00:00:00Z
              end: 2020-12-07T01:00:00Z
            - start: 2020-12-07T00:00:00Z
              end: 2020-12-07T01:00:00Z
            - start: 2020-12-07T00:00:00Z
              end: 2020-12-07T01:00:00Z
            - start: 2020-12-07T00:00:00Z
              end: 2020-12-07T01:00:00Z
            - start: 2020-12-07T00:00:00Z
              end: 2020-12-07T01:00:00Z
            longitude: 6.110667
          combinedTransport:
            start:
              latitude: 49.480301
              longitude: 6.110667
            destination:
              latitude: 49.480301
              longitude: 6.110667
          name: name
          offRoad:
            evParameters:
              powerConsumptionDuringService: 0.9301444243932576
              weather:
                temperature: 22.329474196844842
                windDirection: 5
                windSpeed: 0
              chargingStation:
                useServiceTimeForCharging: false
                currentType: DIRECT
                setupTime: 0
                power: 0
                kWhPrice: 0.7061401241503109
            vehicleParameters:
              averageElectricityConsumption: 115
              loadWeight: 25000
              truckRoutes:
              - SE_BK_1
              - SE_BK_1
              averageFuelConsumption: 35
              length: 1650
              width: 254
              tunnelRestrictionCode: NONE
              axleWeight: 11500
              hazardousMaterials:
              - OTHER
              - OTHER
              height: 400
            useServiceTimeForRecreation: false
            latitude: 49.480301
            matchSideOfStreet: false
            roadAcess:
              latitude: 49.480301
              longitude: 6.110667
            serviceTime: 0
            openingIntervals:
            - start: 2020-12-07T00:00:00Z
              end: 2020-12-07T01:00:00Z
            - start: 2020-12-07T00:00:00Z
              end: 2020-12-07T01:00:00Z
            - start: 2020-12-07T00:00:00Z
              end: 2020-12-07T01:00:00Z
            - start: 2020-12-07T00:00:00Z
              end: 2020-12-07T01:00:00Z
            - start: 2020-12-07T00:00:00Z
              end: 2020-12-07T01:00:00Z
            longitude: 6.110667
          manipulate:
            latitude: 49.480301
            radius: 1
            longitude: 6.110667
        - onRoad:
            evParameters:
              powerConsumptionDuringService: 0.9301444243932576
              weather:
                temperature: 22.329474196844842
                windDirection: 5
                windSpeed: 0
              chargingStation:
                useServiceTimeForCharging: false
                currentType: DIRECT
                setupTime: 0
                power: 0
                kWhPrice: 0.7061401241503109
            vehicleParameters:
              averageElectricityConsumption: 115
              loadWeight: 25000
              truckRoutes:
              - SE_BK_1
              - SE_BK_1
              averageFuelConsumption: 35
              length: 1650
              width: 254
              tunnelRestrictionCode: NONE
              axleWeight: 11500
              hazardousMaterials:
              - OTHER
              - OTHER
              height: 400
            useServiceTimeForRecreation: false
            latitude: 49.480301
            matchSideOfStreet: false
            serviceTime: 0
            openingIntervals:
            - start: 2020-12-07T00:00:00Z
              end: 2020-12-07T01:00:00Z
            - start: 2020-12-07T00:00:00Z
              end: 2020-12-07T01:00:00Z
            - start: 2020-12-07T00:00:00Z
              end: 2020-12-07T01:00:00Z
            - start: 2020-12-07T00:00:00Z
              end: 2020-12-07T01:00:00Z
            - start: 2020-12-07T00:00:00Z
              end: 2020-12-07T01:00:00Z
            longitude: 6.110667
          combinedTransport:
            start:
              latitude: 49.480301
              longitude: 6.110667
            destination:
              latitude: 49.480301
              longitude: 6.110667
          name: name
          offRoad:
            evParameters:
              powerConsumptionDuringService: 0.9301444243932576
              weather:
                temperature: 22.329474196844842
                windDirection: 5
                windSpeed: 0
              chargingStation:
                useServiceTimeForCharging: false
                currentType: DIRECT
                setupTime: 0
                power: 0
                kWhPrice: 0.7061401241503109
            vehicleParameters:
              averageElectricityConsumption: 115
              loadWeight: 25000
              truckRoutes:
              - SE_BK_1
              - SE_BK_1
              averageFuelConsumption: 35
              length: 1650
              width: 254
              tunnelRestrictionCode: NONE
              axleWeight: 11500
              hazardousMaterials:
              - OTHER
              - OTHER
              height: 400
            useServiceTimeForRecreation: false
            latitude: 49.480301
            matchSideOfStreet: false
            roadAcess:
              latitude: 49.480301
              longitude: 6.110667
            serviceTime: 0
            openingIntervals:
            - start: 2020-12-07T00:00:00Z
              end: 2020-12-07T01:00:00Z
            - start: 2020-12-07T00:00:00Z
              end: 2020-12-07T01:00:00Z
            - start: 2020-12-07T00:00:00Z
              end: 2020-12-07T01:00:00Z
            - start: 2020-12-07T00:00:00Z
              end: 2020-12-07T01:00:00Z
            - start: 2020-12-07T00:00:00Z
              end: 2020-12-07T01:00:00Z
            longitude: 6.110667
          manipulate:
            latitude: 49.480301
            radius: 1
            longitude: 6.110667
      properties:
        waypoints:
          description: |-
            The list of waypoints the route will be calculated for. At least two waypoints are necessary, a maximum number may apply according to your subscription.
            The first waypoint is the start and the last is the destination of the route.
            Additional intermediate waypoints are possible.

            Each waypoint must either have latitude and longitude or one of the representations combinedTransport, address or place.
          items:
            $ref: "#/components/schemas/Waypoint"
          type: array
        routeId:
          description: |-
            Instead of the list of waypoints, a **routeId** from a previously calculated route or a matched track can be entered.
            See [here](./concepts/route-ids) for more information.
          format: uuid
          type: string
        driver:
          $ref: "#/components/schemas/DriverBody"
      type: object
    Waypoint:
      example:
        onRoad:
          evParameters:
            powerConsumptionDuringService: 0.9301444243932576
            weather:
              temperature: 22.329474196844842
              windDirection: 5
              windSpeed: 0
            chargingStation:
              useServiceTimeForCharging: false
              currentType: DIRECT
              setupTime: 0
              power: 0
              kWhPrice: 0.7061401241503109
          vehicleParameters:
            averageElectricityConsumption: 115
            loadWeight: 25000
            truckRoutes:
            - SE_BK_1
            - SE_BK_1
            averageFuelConsumption: 35
            length: 1650
            width: 254
            tunnelRestrictionCode: NONE
            axleWeight: 11500
            hazardousMaterials:
            - OTHER
            - OTHER
            height: 400
          useServiceTimeForRecreation: false
          latitude: 49.480301
          matchSideOfStreet: false
          serviceTime: 0
          openingIntervals:
          - start: 2020-12-07T00:00:00Z
            end: 2020-12-07T01:00:00Z
          - start: 2020-12-07T00:00:00Z
            end: 2020-12-07T01:00:00Z
          - start: 2020-12-07T00:00:00Z
            end: 2020-12-07T01:00:00Z
          - start: 2020-12-07T00:00:00Z
            end: 2020-12-07T01:00:00Z
          - start: 2020-12-07T00:00:00Z
            end: 2020-12-07T01:00:00Z
          longitude: 6.110667
        combinedTransport:
          start:
            latitude: 49.480301
            longitude: 6.110667
          destination:
            latitude: 49.480301
            longitude: 6.110667
        name: name
        offRoad:
          evParameters:
            powerConsumptionDuringService: 0.9301444243932576
            weather:
              temperature: 22.329474196844842
              windDirection: 5
              windSpeed: 0
            chargingStation:
              useServiceTimeForCharging: false
              currentType: DIRECT
              setupTime: 0
              power: 0
              kWhPrice: 0.7061401241503109
          vehicleParameters:
            averageElectricityConsumption: 115
            loadWeight: 25000
            truckRoutes:
            - SE_BK_1
            - SE_BK_1
            averageFuelConsumption: 35
            length: 1650
            width: 254
            tunnelRestrictionCode: NONE
            axleWeight: 11500
            hazardousMaterials:
            - OTHER
            - OTHER
            height: 400
          useServiceTimeForRecreation: false
          latitude: 49.480301
          matchSideOfStreet: false
          roadAcess:
            latitude: 49.480301
            longitude: 6.110667
          serviceTime: 0
          openingIntervals:
          - start: 2020-12-07T00:00:00Z
            end: 2020-12-07T01:00:00Z
          - start: 2020-12-07T00:00:00Z
            end: 2020-12-07T01:00:00Z
          - start: 2020-12-07T00:00:00Z
            end: 2020-12-07T01:00:00Z
          - start: 2020-12-07T00:00:00Z
            end: 2020-12-07T01:00:00Z
          - start: 2020-12-07T00:00:00Z
            end: 2020-12-07T01:00:00Z
          longitude: 6.110667
        manipulate:
          latitude: 49.480301
          radius: 1
          longitude: 6.110667
      properties:
        name:
          description: An identifier to reference this waypoint in the response.
          type: string
        onRoad:
          $ref: "#/components/schemas/OnRoadWaypoint"
        offRoad:
          $ref: "#/components/schemas/OffRoadWaypoint"
        manipulate:
          $ref: "#/components/schemas/ManipulateRouteWaypoint"
        combinedTransport:
          $ref: "#/components/schemas/CombinedTransport"
      type: object
    OnRoadWaypoint:
      description: |-
        An _on-road waypoint_ will be matched to the nearest possible road.
        The air-line connection between given and matched coordinates is not included in the route polyline, distance and duration.
      example:
        evParameters:
          powerConsumptionDuringService: 0.9301444243932576
          weather:
            temperature: 22.329474196844842
            windDirection: 5
            windSpeed: 0
          chargingStation:
            useServiceTimeForCharging: false
            currentType: DIRECT
            setupTime: 0
            power: 0
            kWhPrice: 0.7061401241503109
        vehicleParameters:
          averageElectricityConsumption: 115
          loadWeight: 25000
          truckRoutes:
          - SE_BK_1
          - SE_BK_1
          averageFuelConsumption: 35
          length: 1650
          width: 254
          tunnelRestrictionCode: NONE
          axleWeight: 11500
          hazardousMaterials:
          - OTHER
          - OTHER
          height: 400
        useServiceTimeForRecreation: false
        latitude: 49.480301
        matchSideOfStreet: false
        serviceTime: 0
        openingIntervals:
        - start: 2020-12-07T00:00:00Z
          end: 2020-12-07T01:00:00Z
        - start: 2020-12-07T00:00:00Z
          end: 2020-12-07T01:00:00Z
        - start: 2020-12-07T00:00:00Z
          end: 2020-12-07T01:00:00Z
        - start: 2020-12-07T00:00:00Z
          end: 2020-12-07T01:00:00Z
        - start: 2020-12-07T00:00:00Z
          end: 2020-12-07T01:00:00Z
        longitude: 6.110667
      properties:
        latitude:
          description: The latitude value in degrees (WGS84/EPSG:4326) from south
            to north.
          example: 49.480301
          format: double
          maximum: 90
          minimum: -90
          type: number
        longitude:
          description: The longitude value in degrees (WGS84/EPSG:4326) from west
            to east.
          example: 6.110667
          format: double
          maximum: 180
          minimum: -180
          type: number
        matchSideOfStreet:
          default: false
          description: |-
            Specifies that this waypoint will be reached at the side of street on which it is located.
            This is useful to prevent the driver from crossing the street to actually reach the location represented by this waypoint.
          type: boolean
        serviceTime:
          default: 0
          description: "The service time [s] that is required at this waypoint, e.g.\
            \ for pickup or delivery."
          format: int32
          minimum: 0
          type: integer
        useServiceTimeForRecreation:
          default: false
          description: "If true, the service time can be used for a break or rest.\
            \ This parameter will be ignored, if **serviceTime** is 0 or if no **driver**\
            \ is specified."
          type: boolean
        openingIntervals:
          description: "The opening intervals at this waypoint, each specified by\
            \ two points in time - the beginning and the end of the interval.\nLeaving\
            \ this parameter empty means that the waypoint is always open. Service\
            \ can only start within one of the opening intervals.\nIf the vehicle\
            \ does not arrive at a waypoint within an opening interval, a waiting\
            \ time will be scheduled. \nWhen using a multi-day **workingHoursPreset**\
            \ this waiting time will usually be used for daily rests instead, in order\n\
            to continue the route with a rested driver."
          items:
            $ref: "#/components/schemas/TimeInterval"
          maxItems: 30
          type: array
        vehicleParameters:
          $ref: "#/components/schemas/VehicleParametersAtWaypoint"
        evParameters:
          $ref: "#/components/schemas/EvParametersAtWaypoint"
      required:
      - latitude
      - longitude
      type: object
    OffRoadWaypoint:
      description: |-
        An _off-road waypoint_ will be part of the route.
        The air-line connection between given and matched coordinates is included in the route polyline, distance and duration.
        Use this waypoint type to recalculate a route planned by the Route Optimization API.
      example:
        evParameters:
          powerConsumptionDuringService: 0.9301444243932576
          weather:
            temperature: 22.329474196844842
            windDirection: 5
            windSpeed: 0
          chargingStation:
            useServiceTimeForCharging: false
            currentType: DIRECT
            setupTime: 0
            power: 0
            kWhPrice: 0.7061401241503109
        vehicleParameters:
          averageElectricityConsumption: 115
          loadWeight: 25000
          truckRoutes:
          - SE_BK_1
          - SE_BK_1
          averageFuelConsumption: 35
          length: 1650
          width: 254
          tunnelRestrictionCode: NONE
          axleWeight: 11500
          hazardousMaterials:
          - OTHER
          - OTHER
          height: 400
        useServiceTimeForRecreation: false
        latitude: 49.480301
        matchSideOfStreet: false
        roadAcess:
          latitude: 49.480301
          longitude: 6.110667
        serviceTime: 0
        openingIntervals:
        - start: 2020-12-07T00:00:00Z
          end: 2020-12-07T01:00:00Z
        - start: 2020-12-07T00:00:00Z
          end: 2020-12-07T01:00:00Z
        - start: 2020-12-07T00:00:00Z
          end: 2020-12-07T01:00:00Z
        - start: 2020-12-07T00:00:00Z
          end: 2020-12-07T01:00:00Z
        - start: 2020-12-07T00:00:00Z
          end: 2020-12-07T01:00:00Z
        longitude: 6.110667
      properties:
        latitude:
          description: The latitude value in degrees (WGS84/EPSG:4326) from south
            to north.
          example: 49.480301
          format: double
          maximum: 90
          minimum: -90
          type: number
        longitude:
          description: The longitude value in degrees (WGS84/EPSG:4326) from west
            to east.
          example: 6.110667
          format: double
          maximum: 180
          minimum: -180
          type: number
        roadAcess:
          $ref: "#/components/schemas/RoadAccess"
        matchSideOfStreet:
          default: false
          description: |-
            Specifies that this waypoint will be reached at the side of street on which it is located.
            This is useful to prevent the driver from crossing the street to actually reach the location represented by this waypoint.
          type: boolean
        serviceTime:
          default: 0
          description: "The service time [s] that is required at this waypoint, e.g.\
            \ for pickup or delivery."
          format: int32
          minimum: 0
          type: integer
        useServiceTimeForRecreation:
          default: false
          description: "If true, the service time can be used for a break or rest.\
            \ This parameter will be ignored, if **serviceTime** is 0 or if no **driver**\
            \ is specified."
          type: boolean
        openingIntervals:
          description: "The opening intervals at this waypoint, each specified by\
            \ two points in time - the beginning and the end of the interval.\nLeaving\
            \ this parameter empty means that the waypoint is always open. Service\
            \ can only start within one of the opening intervals.\nIf the vehicle\
            \ does not arrive at a waypoint within an opening interval, a waiting\
            \ time will be scheduled. \nWhen using a multi-day **workingHoursPreset**\
            \ this waiting time will usually be used for daily rests instead, in order\n\
            to continue the route with a rested driver."
          items:
            $ref: "#/components/schemas/TimeInterval"
          maxItems: 30
          type: array
        vehicleParameters:
          $ref: "#/components/schemas/VehicleParametersAtWaypoint"
        evParameters:
          $ref: "#/components/schemas/EvParametersAtWaypoint"
      required:
      - latitude
      - longitude
      type: object
    ManipulateRouteWaypoint:
      description: |-
        A _manipulate-route waypoint_ will not actually be reached but it influences the route course, so that the route passes an area defined by the given radius.
        This waypoint will not appear as a waypoint event in the response and may not be used as start and destination.
      example:
        latitude: 49.480301
        radius: 1
        longitude: 6.110667
      properties:
        latitude:
          description: The latitude value in degrees (WGS84/EPSG:4326) from south
            to north.
          example: 49.480301
          format: double
          maximum: 90
          minimum: -90
          type: number
        longitude:
          description: The longitude value in degrees (WGS84/EPSG:4326) from west
            to east.
          example: 6.110667
          format: double
          maximum: 180
          minimum: -180
          type: number
        radius:
          description: "The radius [m] at which the waypoint has to be passed."
          format: int32
          minimum: 1
          type: integer
      required:
      - latitude
      - longitude
      - radius
      type: object
    Latitude:
      description: The latitude value in degrees (WGS84/EPSG:4326) from south to north.
      example: 49.480301
      format: double
      maximum: 90
      minimum: -90
      type: number
    Longitude:
      description: The longitude value in degrees (WGS84/EPSG:4326) from west to east.
      example: 6.110667
      format: double
      maximum: 180
      minimum: -180
      type: number
    MatchSideOfStreet:
      default: false
      description: |-
        Specifies that this waypoint will be reached at the side of street on which it is located.
        This is useful to prevent the driver from crossing the street to actually reach the location represented by this waypoint.
      type: boolean
    ServiceTime:
      default: 0
      description: "The service time [s] that is required at this waypoint, e.g. for\
        \ pickup or delivery."
      format: int32
      minimum: 0
      type: integer
    UseServiceTimeForRecreation:
      default: false
      description: "If true, the service time can be used for a break or rest. This\
        \ parameter will be ignored, if **serviceTime** is 0 or if no **driver** is\
        \ specified."
      type: boolean
    OpeningIntervals:
      description: "The opening intervals at this waypoint, each specified by two\
        \ points in time - the beginning and the end of the interval.\nLeaving this\
        \ parameter empty means that the waypoint is always open. Service can only\
        \ start within one of the opening intervals.\nIf the vehicle does not arrive\
        \ at a waypoint within an opening interval, a waiting time will be scheduled.\
        \ \nWhen using a multi-day **workingHoursPreset** this waiting time will usually\
        \ be used for daily rests instead, in order\nto continue the route with a\
        \ rested driver."
      items:
        $ref: "#/components/schemas/TimeInterval"
      maxItems: 30
      type: array
    RoadAccess:
      description: |-
        Use these coordinates for matching to the nearest road.
        This is useful if the waypoint should not be matched to the nearest possible road but to some road further away,
        e.g. garage exit at a different road.
      example:
        latitude: 49.480301
        longitude: 6.110667
      properties:
        latitude:
          description: The latitude value in degrees (WGS84/EPSG:4326) from south
            to north.
          example: 49.480301
          format: double
          maximum: 90
          minimum: -90
          type: number
        longitude:
          description: The longitude value in degrees (WGS84/EPSG:4326) from west
            to east.
          example: 6.110667
          format: double
          maximum: 180
          minimum: -180
          type: number
      required:
      - latitude
      - longitude
      type: object
    TimeInterval:
      description: A time interval specified by two points in time - the beginning
        and the end of the interval.
      example:
        start: 2020-12-07T00:00:00Z
        end: 2020-12-07T01:00:00Z
      properties:
        start:
          description: "The beginning of the time interval formatted according to\
            \ [RFC 3339](https://tools.ietf.org/html/rfc3339). The date must not be\
            \ before 1970-01-01T00:00:00+00:00 nor after 2037-12-31T23:59:59+00:00."
          example: 2020-12-07T00:00:00Z
          format: date-time
          type: string
        end:
          description: "The end of the time interval formatted according to [RFC 3339](https://tools.ietf.org/html/rfc3339).\
            \ The date must not be before 1970-01-01T00:00:00+00:00 nor after 2037-12-31T23:59:59+00:00."
          example: 2020-12-07T01:00:00Z
          format: date-time
          type: string
      required:
      - end
      - start
      type: object
    CombinedTransport:
      description: "Influences the route course, so that the route uses a ferry or\
        \ railway connection between the given locations. Both locations will be matched\
        \ to the nearest ports looking for a direct connection. If no connection can\
        \ be found, this waypoint will be ignored, and the warning _ROUTING_COMBINED_TRANSPORT_WAYPOINT_IGNORED_\
        \ will be returned. If more than one connection is found, the best one will\
        \ be used, and the alternative connections will be returned in the response\
        \ in a warning _ROUTING_COMBINED_TRANSPORT_WAYPOINT_AMBIGUOUS_. This waypoint\
        \ will not appear as a waypoint event in the response and may not be used\
        \ as start or destination. We will refer to this type of waypoint as a _combined-transport\
        \ waypoint_."
      example:
        start:
          latitude: 49.480301
          longitude: 6.110667
        destination:
          latitude: 49.480301
          longitude: 6.110667
      properties:
        start:
          $ref: "#/components/schemas/CombinedTransportLocation"
        destination:
          $ref: "#/components/schemas/CombinedTransportLocation"
      required:
      - destination
      - start
      type: object
    CombinedTransportLocation:
      description: "Represents the start or destination location of a combined transport,\
        \ e.g. the port."
      example:
        latitude: 49.480301
        longitude: 6.110667
      properties:
        latitude:
          description: The latitude value in degrees (WGS84/EPSG:4326) from south
            to north.
          example: 49.480301
          format: double
          maximum: 90
          minimum: -90
          type: number
        longitude:
          description: The longitude value in degrees (WGS84/EPSG:4326) from west
            to east.
          example: 6.110667
          format: double
          maximum: 180
          minimum: -180
          type: number
      required:
      - latitude
      - longitude
      type: object
    Driver:
      properties:
        workingHoursPreset:
          $ref: "#/components/schemas/WorkingHoursPreset"
      required:
      - workingHoursPreset
      type: object
    WorkingHoursPreset:
      description: |-
        Enables the calculation of break and rest times according to the selected rules.
        Breaks and rests will be added to the **travelTime**, details can be requested through the _SCHEDULE_EVENTS_.
        For single day presets no schedule events of type _DAILY_REST_ will be returned. Only _VIOLATION_EVENTS_ will be
        returned when the maximum working time or maximum driving time is exceeded.
          * `EU_DRIVING_TIME_REGULATION_FOR_SINGLE_DAY` - Based on Regulation (EC) 561/2006 of the European Parliament and of the Council.
          Break time 45 min, maximum driving time between breaks 4.5 hours, maximum driving time 9 hours, maximum travel time 13 hours.
          * `EU_DRIVING_TIME_REGULATION_FOR_LONG_SINGLE_DAY` - In contrast to `EU_DRIVING_TIME_REGULATION_FOR_SINGLE_DAY`,
          the exception rules "Maximum driving time may be extended to 10h twice a week." and "A daily rest may be reduced to 9h three times between weekly rests."
          are observed in so far as the driving time limit is extended and the daily rest time is reduced.
          * `EU_WORKING_TIME_DIRECTIVE_FOR_SINGLE_DAY` - Based on Directive 2002/15/EC of the European Parliament and of the Council "on the organisation of the working time of persons performing mobile road transport activities".
          Break time 30 min, maximum working time between breaks 6 hours, maximum travel time 9.5 hours.
          * `EU_WORKING_TIME_DIRECTIVES_FOR_LONG_SINGLE_DAY` - Makes sure that the standard rules of the EU directives 2003/88/EC and 2002/15/EC that are applicable for a route within a long single day are observed.
          If working hours total more than 9h, a break must be 45min long. Here, a working time of at most 10h is guaranteed.
          * `EU_DRIVING_TIME_REGULATION_FOR_MULTIPLE_DAYS ` - Based on Regulation (EC) 561/2006 of the European Parliament and of the Council.
          Break time 45 min, maximum driving time between breaks 4.5 hours,
          daily rest time 11 hours, maximum driving time between daily rests 9 hours, maximum travel time between daily rests 13 hours,
          maximum driving time 56 hours, maximum travel time 144 hours.
          * `EU_DRIVING_TIME_REGULATION_FOR_TEAM_AND_MULTIPLE_DAYS` - When two drivers form a team, they can take turns.
          In contrast to `EU_DRIVING_TIME_REGULATION_FOR_MULTIPLE_DAYS`, no breaks are scheduled and the daily rest time limits are raised.
          * `US_HOURS_OF_SERVICE_REGULATIONS_FOR_SINGLE_DAY` - Based on Hours of Service (HOS) of Drivers as issued by the Federal Motor Carrier Safety Administration (FMCSA).
          Break time 30 min, maximum driving time between breaks 8 hours, maximum driving time 11 hours, maximum travel time 14 hours.
          * `US_HOURS_OF_SERVICE_REGULATIONS_FOR_SHORT_HAUL_AND_SINGLE_DAY` - Makes sure that the standard rules of the HOS regulations in 49 CFR 395 that are applicable for a route within a single day are observed.
          It is assumed that the short-haul exception does apply so breaks are not scheduled.
          * `US_HOURS_OF_SERVICE_REGULATIONS_FOR_MULTIPLE_DAYS` - Based on Hours of Service (HOS) of Drivers as issued by the Federal Motor Carrier Safety Administration (FMCSA).
          Break time 30 min, maximum driving time between breaks 8 hours,
          daily rest time 10 hours, maximum driving time between daily rests 11 hours, maximum travel time between daily rests 14 hours.

        If this parameter is given both as query parameter and in the body then it must match. Otherwise an error is returned.
        This parameter will be ignored for non-motorized profiles such as _BICYCLE_ or _PEDESTRIAN_.
        For details see this [concept](./concepts/drivers-working-hours).
      enum:
      - EU_DRIVING_TIME_REGULATION_FOR_SINGLE_DAY
      - EU_DRIVING_TIME_REGULATION_FOR_LONG_SINGLE_DAY
      - EU_WORKING_TIME_DIRECTIVE_FOR_SINGLE_DAY
      - EU_WORKING_TIME_DIRECTIVES_FOR_LONG_SINGLE_DAY
      - EU_DRIVING_TIME_REGULATION_FOR_MULTIPLE_DAYS
      - EU_DRIVING_TIME_REGULATION_FOR_TEAM_AND_MULTIPLE_DAYS
      - US_HOURS_OF_SERVICE_REGULATIONS_FOR_SINGLE_DAY
      - US_HOURS_OF_SERVICE_REGULATIONS_FOR_SHORT_HAUL_AND_SINGLE_DAY
      - US_HOURS_OF_SERVICE_REGULATIONS_FOR_MULTIPLE_DAYS
      type: string
      x-enum-varnames:
      - EU_DRIVING_TIME_REGULATION_FOR_SINGLE_DAY
      - EU_DRIVING_TIME_REGULATION_FOR_LONG_SINGLE_DAY
      - EU_WORKING_TIME_DIRECTIVE_FOR_SINGLE_DAY
      - EU_WORKING_TIME_DIRECTIVES_FOR_LONG_SINGLE_DAY
      - EU_DRIVING_TIME_REGULATION_FOR_MULTIPLE_DAYS
      - EU_DRIVING_TIME_REGULATION_FOR_TEAM_AND_MULTIPLE_DAYS
      - US_HOURS_OF_SERVICE_REGULATIONS_FOR_SINGLE_DAY
      - US_HOURS_OF_SERVICE_REGULATIONS_FOR_SHORT_HAUL_AND_SINGLE_DAY
      - US_HOURS_OF_SERVICE_REGULATIONS_FOR_MULTIPLE_DAYS
    DriverBody:
      description: |-
        Options regarding the drivers' working hours and work logbook.
        If no driver object with a working hours preset is passed with the request, working hours will be unlimited.
      example:
        workingHoursPreset: EU_DRIVING_TIME_REGULATION_FOR_SINGLE_DAY
        workLogbook:
          accumulatedDrivingTimeSinceLastDailyRest: 0
          accumulatedWorkingTimeSinceLastBreak: 0
          lastTimeTheDriverWorked: 2020-12-04T06:00:00Z
          accumulatedDrivingTimeSinceLastBreak: 0
          accumulatedTravelTimeSinceLastDailyRest: 0
        useTimeOnCombinedTransportForRecreation: false
      properties:
        workingHoursPreset:
          $ref: "#/components/schemas/WorkingHoursPreset"
        workLogbook:
          $ref: "#/components/schemas/WorkLogbook"
        useTimeOnCombinedTransportForRecreation:
          default: false
          description: "If true, the time on a combined transport, e.g. on a ferry,\
            \ can be used for recreation. \nThat means that a break or a rest can\
            \ be scheduled when traveling on a ferry or by rail.\nAs breaks and daily\
            \ rests may be split to match the time of the combined transport, we recommend\
            \ to additionally\nrequest _COMBINED_TRANSPORT_EVENTS_ when _SCHEDULE_EVENTS_\
            \ or _SCHEDULE_EVENTS_WITH_DRIVING_ are requested."
          type: boolean
      required:
      - workingHoursPreset
      type: object
    WorkLogbook:
      description: "Defines the accumulated driving, working and travel times since\
        \ the last break or daily rest. For details see this [concept](./concepts/drivers-working-hours)."
      example:
        accumulatedDrivingTimeSinceLastDailyRest: 0
        accumulatedWorkingTimeSinceLastBreak: 0
        lastTimeTheDriverWorked: 2020-12-04T06:00:00Z
        accumulatedDrivingTimeSinceLastBreak: 0
        accumulatedTravelTimeSinceLastDailyRest: 0
      properties:
        lastTimeTheDriverWorked:
          description: "The last time the driver worked formatted according to [RFC\
            \ 3339](https://tools.ietf.org/html/rfc3339).  \n\nThe date must not be\
            \ before 1970-01-01T00:00:00+00:00 nor after 2037-12-31T23:59:59+00:00.\
            \ \nThe date must provide an offset to UTC.  \nSee [here](./concepts/date-and-time)\
            \ for more information on the relevance of date and time."
          example: 2020-12-04T06:00:00Z
          format: date-time
          type: string
        accumulatedDrivingTimeSinceLastBreak:
          default: 0
          description: "Accumulated driving time since end of last break [s], this\
            \ includes all time behind the wheel.  \nValues higher than the maximum\
            \ driving time between breaks of the **workingHoursPreset** are capped\
            \ and effectively equal to the value given by the preset.\n"
          format: int32
          minimum: 0
          type: integer
        accumulatedWorkingTimeSinceLastBreak:
          description: "Accumulated working time since end of last break [s], this\
            \ includes driving time, service time at depot and customers, and idle\
            \ time if lower than working time threshold.    \nValues higher than the\
            \ maximum working time between breaks of the **workingHoursPreset** are\
            \ capped and effectively equal to the value given by the preset. May not\
            \ be smaller than **accumulatedDrivingTimeSinceLastBreak** if the value\
            \ is specified. If no other value is specified, the default value is 0.\n"
          format: int32
          minimum: 0
          type: integer
        accumulatedDrivingTimeSinceLastDailyRest:
          description: "Accumulated driving time since end of last daily rest [s],\
            \ this includes all time behind the wheel.  \nValues higher than the maximum\
            \ driving time between daily rests of the **workingHoursPreset** are capped\
            \ and effectively equal to the value given by preset. May not be smaller\
            \ than **accumulatedDrivingTimeSinceLastBreak** if the value is specified.\
            \ If no other value is specified, the default value is 0.\n"
          format: int32
          minimum: 0
          type: integer
        accumulatedTravelTimeSinceLastDailyRest:
          description: "Accumulated travel time since end of last daily rest [s],\
            \ this includes all time since the last daily rest.  \nValues higher than\
            \ maximum travel time between daily rests of the **workingHoursPreset**\
            \ are capped and effectively equal to the value given by the preset. May\
            \ not be smaller than **accumulatedWorkingTimeSinceLastBreak** or **accumulatedDrivingTimeSinceLastDailyRest**\
            \ if the values are specified. If no other value is specified, the default\
            \ value is 0.\n"
          format: int32
          minimum: 0
          type: integer
      required:
      - lastTimeTheDriverWorked
      type: object
    BlockIntersectingRoads:
      description: "Pipe-separated list of polylines.  \nRoads and combined transports\
        \ that intersect the given polylines will be considered as blocked.\nEach\
        \ list element is a polyline. Each point is a coordinate of latitude and longitude.\
        \ Coordinates and points are separated by a comma.\nFormat: `<poly1_lat1>,<poly1_lon1>,...,<poly1_latN>,<poly1_lonN>|<poly2_lat1>,<poly2_lon1>,...,<poly2_latN>,<poly2_lonN>|...`\
        \  \nNotes:\n* Be aware of the URL length restrictions.\n* If there is no\
        \ other route connecting two waypoints the will be reported as violated and\
        \ correspondingly violation events with type **BLOCKED_ROAD_BY_INTERSECTION**\
        \ will be reported if violation events are requested.\n* Requests will be\
        \ rejected if at least one provided polyline\n  * does not consist of an even\
        \ number of coordinates,\n  * consists of less than two points,\n  * contains\
        \ invalid coordinates or\n  * intersects more than 5000 road segments.\n\n\
        This parameter will be ignored, if a **routeId** is specified.\n"
      example: "49.8,9.9,49.9,10|33.1,-111.1,33.0,-111.2"
      type: string
    MonetaryCostOptions:
      properties:
        costPerKilometer:
          description: |-
            Specifies the cost per kilometer. This value can contain the cost from the energy consumption, but it also
            possible to define the energy costs using **monetaryCostOptions[costPerKwh]** and **monetaryCostOptions[costPerFuelUnit]**.
            If it is not specified the default value depends on the used **profile**. The default value of the profile can change at any time.
          format: double
          minimum: 0
          type: number
        workingCostPerHour:
          description: |-
            Specifies the cost per hour. It is not applied to service, break or rest periods.
            If it is not specified the default value depends on the used **profile**. The default value of the profile can change at any time.
          format: double
          minimum: 0
          type: number
        costPerKwh:
          description: "Specifies the cost per kilowatt hour. Only relevant for **vehicle[engineType]**\
            \ _ELECTRIC_ and _HYBRID_."
          format: double
          minimum: 0
          type: number
        costPerFuelUnit:
          description: "Specifies the cost per fuel unit (per liter Diesel or per\
            \ kg CNG). Only used for **vehicle[engineType]** _COMBUSTION_ and _HYBRID_."
          format: double
          minimum: 0
          type: number
      type: object
    PositionAtWaypoint:
      description: |-
        The vehicle position if it is at a waypoint.
        This parameter is mutually exclusive with **position**.
      properties:
        name:
          description: The name of the waypoint.
          type: string
        performedServiceTime:
          default: 0
          description: "The service time [s] which has already been performed."
          format: int32
          minimum: 0
          type: integer
      required:
      - name
      type: object
    PositionOnRoute:
      description: |-
        The position of the vehicle if the vehicle position is not at a waypoint but somewhere on the route.
        This parameter is mutually exclusive with **waypoint**.
      properties:
        latitude:
          description: The latitude value in degrees (WGS84/EPSG:4326) from south
            to north.
          example: 49.480301
          format: double
          maximum: 90
          minimum: -90
          type: number
        longitude:
          description: The longitude value in degrees (WGS84/EPSG:4326) from west
            to east.
          example: 6.110667
          format: double
          maximum: 180
          minimum: -180
          type: number
        nextWaypointName:
          description: The name of the next waypoint on the route.
          type: string
        heading:
          description: "The current heading of the vehicle [deg]. It denotes the driving\
            \ direction,\nNorth represents 0 degrees, East represents 90 degrees,\
            \ South represents 180 degrees, West represents 270 degrees.\n\nIf specified\
            \ and if the heading of the vehicle is not in the direction of the route\
            \ near the given **position**,\nit is assumed that the vehicle has left\
            \ the route so that a new route will be calculated. This new route will\
            \ then be \ncalculated from the road closest to the position matching\
            \ the vehicle heading. For more information see\nthis [concept](./concepts/estimated-time-arrival)."
          format: int32
          maximum: 360
          minimum: 0
          type: integer
        headingTolerance:
          default: 45
          description: "Denotes the tolerance between **heading** and the direction\
            \ of a road, i.e. roads with a direction of **heading**±**headingTolerance**\
            \ are taken into account. Applies only if **heading** is specified."
          format: int32
          maximum: 180
          minimum: 0
          type: integer
      required:
      - latitude
      - longitude
      - nextWaypointName
      type: object
    EtaResponse:
      description: The response of an ETA calculation.
      example:
        remainingWaypoints:
        - violated: false
          travelTime: 0
          distance: 0
          trafficDelay: 0
          name: name
          waitingTime: 0
          scheduleViolations:
          - OPENING_INTERVAL
          - OPENING_INTERVAL
          estimatedTimeOfArrival: 2000-01-23T04:56:07.000+00:00
        - violated: false
          travelTime: 0
          distance: 0
          trafficDelay: 0
          name: name
          waitingTime: 0
          scheduleViolations:
          - OPENING_INTERVAL
          - OPENING_INTERVAL
          estimatedTimeOfArrival: 2000-01-23T04:56:07.000+00:00
        routeId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        warnings:
        - warningCode: warningCode
          description: description
          details:
            key: ""
        - warningCode: warningCode
          description: description
          details:
            key: ""
      properties:
        remainingWaypoints:
          description: The ETA and the remaining distance and travel time to the waypoints
            not yet reached by the route.
          items:
            $ref: "#/components/schemas/RemainingWaypoint"
          minItems: 1
          type: array
        routeId:
          description: |-
            If the route has been recalculated, this is the ID of the new route.
            That will happen when it is likely that the vehicle has left the route, so the vehicle position is too far away from the route,
            or when the estimated time of arrival at the last waypoint is delayed in a way that another route may result in arriving earlier.
          format: uuid
          type: string
        warnings:
          description: A list of warnings concerning the validity of the result.
          items:
            $ref: "#/components/schemas/Warning"
          type: array
      required:
      - remainingWaypoints
      type: object
    RemainingWaypoint:
      example:
        violated: false
        travelTime: 0
        distance: 0
        trafficDelay: 0
        name: name
        waitingTime: 0
        scheduleViolations:
        - OPENING_INTERVAL
        - OPENING_INTERVAL
        estimatedTimeOfArrival: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          description: The name of this waypoint.
          type: string
        estimatedTimeOfArrival:
          description: |-
            The estimated time of arrival at this waypoint formatted according to [RFC 3339](https://tools.ietf.org/html/rfc3339).
            Does not include service, break, rest and waiting at this waypoint.
          format: date-time
          type: string
        distance:
          description: "The distance from the current position to this waypoint [m]."
          format: int32
          minimum: 0
          type: integer
        travelTime:
          description: "The travel time from the current position to this waypoint\
            \ [s]. Does not include service, break, rest and waiting at this waypoint."
          format: int32
          minimum: 0
          type: integer
        trafficDelay:
          description: "The delay due to live traffic from the current position to\
            \ this waypoint [s]."
          format: int32
          minimum: 0
          type: integer
        waitingTime:
          description: "The waiting time at this waypoint [s]."
          format: int32
          minimum: 0
          type: integer
        scheduleViolations:
          description: Contains the list of violated schedule restrictions at this
            waypoint.
          items:
            $ref: "#/components/schemas/ScheduleViolationType"
          minItems: 0
          type: array
        violated:
          description: "If there is no valid route for the given vehicle between the\
            \ vehicle position and this waypoint, but the resulting route can be calculated\
            \ using roads actually prohibited, the route is marked as violated."
          example: false
          type: boolean
      required:
      - distance
      - estimatedTimeOfArrival
      - name
      - scheduleViolations
      - trafficDelay
      - travelTime
      - violated
      - waitingTime
      type: object
    EvOptions:
      properties:
        initialStateOfCharge:
          default: 100
          description: "The available battery capacity at the start of the route [%]."
          format: double
          maximum: 100
          minimum: 0
          type: number
        minimumStateOfCharge:
          default: 10
          description: "The minimum wanted remaining battery capacity at the end of\
            \ the route and at the end of each leg [%]."
          format: double
          maximum: 99
          minimum: 1
          type: number
        energyEfficientRoute:
          default: false
          description: Specifies if an energy efficient route should be calculated.
          type: boolean
      type: object
    EvReport:
      description: |
        The consumption and charging summary for the specified vehicle model. Only present if _EV_REPORT_ is requested.
      example:
        cost:
          price: 12.91
          currency: EUR
        electricityConsumption: 6.628464275087742
        electricityCharged: 0.10414449161182959
        batteryStateOfCharge: 58
        chargingTime: 0
        percentageCharged: 0
      properties:
        electricityConsumption:
          description: "The electricity consumption since the start of the route [kWh]."
          format: double
          type: number
        batteryStateOfCharge:
          description: "The remaining state of charge at the end of the route [%].\
            \ May be below the defined minimum state of charge or even below zero,\
            \ if the electricity consumption exceeds the available energy in the battery\
            \ and charging is not possible before falling below zero."
          example: 58
          format: double
          maximum: 100
          type: number
        chargingTime:
          description: "The time spent for charging the battery [s]. The charging\
            \ time is a proposal, currently for information only. It is not included\
            \ in the travel time of the route and the start time of subsequent events\
            \ is not offset by it."
          format: int32
          minimum: 0
          type: integer
        electricityCharged:
          description: "The amount of electricity charged along the route [kWh]."
          format: double
          minimum: 0
          type: number
        percentageCharged:
          description: "The percentage of battery charged along the route [%]."
          format: int32
          minimum: 0
          type: integer
        cost:
          $ref: "#/components/schemas/ElectricityPrice"
      required:
      - batteryStateOfCharge
      - chargingTime
      - cost
      - electricityCharged
      - electricityConsumption
      - percentageCharged
      type: object
    EvReportLeg:
      description: |
        The consumption summary for the specified vehicle model including the weather used for consumption calculation. Only present if both _EV_REPORT_ and _LEGS_ is requested.
      example:
        weatherAtEnd:
          temperature: 22.329474196844842
          windDirection: 5
          windSpeed: 0
        electricityConsumption: 0.8008281904610115
        batteryStateOfCharge: 58
        weatherAtStart:
          temperature: 22.329474196844842
          windDirection: 5
          windSpeed: 0
      properties:
        electricityConsumption:
          description: "The electricity consumption since the start of the leg [kWh]."
          format: double
          type: number
        batteryStateOfCharge:
          description: "The remaining state of charge at the end of the leg [%]. May\
            \ be below the defined minimum state of charge or even below zero, if\
            \ the electricity consumption exceeds the available energy in the battery\
            \ and charging is not possible before falling below zero."
          example: 58
          format: double
          maximum: 100
          type: number
        weatherAtStart:
          $ref: "#/components/schemas/WeatherResponse"
        weatherAtEnd:
          $ref: "#/components/schemas/WeatherResponse"
      required:
      - batteryStateOfCharge
      - electricityConsumption
      - weatherAtEnd
      - weatherAtStart
      type: object
    EvStatusEvent:
      description: |-
        Issued periodically to report electricity consumption and battery status.
        Requires _EV_STATUS_EVENTS_ or _EV_STATUS_EVENTS_POLYLINE_ to be requested.
      example:
        electricityConsumption: 8.762042012749001
        batteryStateOfCharge: 58
        polyline: polyline
      properties:
        batteryStateOfCharge:
          description: "The remaining state of charge at the location of this event\
            \ [%]. May be below the defined minimum state of charge or even below\
            \ zero, if the electricity consumption exceeds the available energy in\
            \ the battery and charging is not possible before falling below zero."
          example: 58
          format: double
          maximum: 100
          type: number
        electricityConsumption:
          description: "The electricity consumption since the previous event containing\
            \ **evStatus** [kWh]."
          format: double
          type: number
        polyline:
          description: "The route polyline snippet since the previous event containing\
            \ **evStatus** in the format specified by **options[polylineFormat]**.\n\
            The polyline may be null for events without distance to the previous **evStatus**\
            \ event, for example events generated at a waypoint \nwith power consumption\
            \ during service.\nRequires _EV_STATUS_EVENTS_POLYLINE_ to be requested."
          type: string
      required:
      - batteryStateOfCharge
      - electricityConsumption
      type: object
    ChargeEvent:
      description: "Issued when the battery should be charged at a waypoint. \nRequires\
        \ _EV_CHARGE_EVENTS_ to be requested."
      example:
        cost:
          price: 12.91
          currency: EUR
        electricityCharged: 0.6438423552598547
        chargingTime: 1
        percentageCharged: 1
      properties:
        chargingTime:
          description: "The time spent for charging the battery [s]. The charging\
            \ time is a proposal, currently for information only. It is not included\
            \ in the travel time of the route and the start time of subsequent events\
            \ is not offset by it."
          format: int32
          minimum: 1
          type: integer
        electricityCharged:
          description: "The amount of electricity charged [kWh]."
          exclusiveMinimum: true
          format: double
          minimum: 0
          type: number
        percentageCharged:
          description: "The percentage of battery charged [%]."
          format: int32
          minimum: 1
          type: integer
        cost:
          $ref: "#/components/schemas/ElectricityPrice"
      required:
      - chargingTime
      - cost
      - electricityCharged
      - percentageCharged
      type: object
    EvParametersAtWaypoint:
      description: |
        The ev parameters that are specific to a waypoint.

        This parameter is in a preview state, the API is stable, feature changes could be introduced in future.
      example:
        powerConsumptionDuringService: 0.9301444243932576
        weather:
          temperature: 22.329474196844842
          windDirection: 5
          windSpeed: 0
        chargingStation:
          useServiceTimeForCharging: false
          currentType: DIRECT
          setupTime: 0
          power: 0
          kWhPrice: 0.7061401241503109
      properties:
        weather:
          $ref: "#/components/schemas/Weather"
        chargingStation:
          $ref: "#/components/schemas/ChargingStation"
        powerConsumptionDuringService:
          default: 0
          description: |
            The electricity consumed during service by electrical appliances (e.g. crane, cooling, tail lift) [kWh].
          format: double
          minimum: 0
          type: number
      type: object
    Weather:
      description: "The weather at a waypoint. It is relevant to the electricity consumption\
        \ calculation of electric vehicles. The \nweather is valid until the end of\
        \ the route unless it is changed again at a subsequent waypoint. If no weather\
        \ \nis configured at any waypoint, the weather is automatically determined\
        \ using the [OpenMeteo](https://open-meteo.com) \nweather service. This is\
        \ only available if the time of the route is no more than 14 days in the future.\
        \ If the\nrouting is outside of this time box and no weather is configured\
        \ at any waypoint, a temperature of 23°C and no \nwind is assumed for minimal\
        \ impact on the consumption calculation. The parameter **windDirection** must\
        \ not be\nnull if **windSpeed** is set to anything but 0.\n"
      example:
        temperature: 22.329474196844842
        windDirection: 5
        windSpeed: 0
      properties:
        temperature:
          description: "The average temperature at a waypoint at 2 meters above ground[°\
            C]. Used to estimate the state of health of the \nbattery and consumption\
            \ due to air conditioning."
          format: double
          maximum: 70
          minimum: -50
          type: number
        windSpeed:
          description: "The average wind speed at a waypoint at 10 meters above ground\
            \ [km/h]."
          format: int32
          minimum: 0
          type: integer
        windDirection:
          description: The wind direction (clockwise) at 10 meters above ground. North
            represents 0 degrees.
          format: int32
          type: integer
      type: object
    WeatherResponse:
      description: |
        The weather used for the electricity consumption calculation.
      example:
        temperature: 22.329474196844842
        windDirection: 5
        windSpeed: 0
      properties:
        temperature:
          description: "The average temperature at 2 meters above ground [°C]. Used\
            \ to estimate the state of health of the \nbattery and consumption due\
            \ to air conditioning."
          format: double
          maximum: 70
          minimum: -50
          type: number
        windSpeed:
          description: "The average wind speed at 10 meters above ground [km/h]."
          format: int32
          minimum: 0
          type: integer
        windDirection:
          description: The wind direction (clockwise) at 10 meters above ground. North
            represents 0 degrees.
          format: int32
          type: integer
      type: object
    WindDirection:
      description: The wind direction (clockwise) at 10 meters above ground. North
        represents 0 degrees.
      format: int32
      type: integer
    ChargingStation:
      description: |
        Defines the charging capabilities available the a waypoint.
      example:
        useServiceTimeForCharging: false
        currentType: DIRECT
        setupTime: 0
        power: 0
        kWhPrice: 0.7061401241503109
      properties:
        power:
          description: "The power delivered by the charging station [kW]."
          format: int32
          minimum: 0
          type: integer
        currentType:
          $ref: "#/components/schemas/CurrentType"
        setupTime:
          default: 0
          description: "The time to setup the connection [s]."
          format: int32
          minimum: 0
          type: integer
        kWhPrice:
          default: 0
          description: "The price of one kWh in the currency defined in **options[currency]**."
          format: double
          minimum: 0
          type: number
        useServiceTimeForCharging:
          default: false
          description: "If true, the service time can be used for charging. This parameter\
            \ will be ignored, if **serviceTime** is 0. This can have \nan influence\
            \ on charging optimization because the additional time needed for charging\
            \ is minimized."
          type: boolean
      required:
      - currentType
      - power
      type: object
    CurrentType:
      default: ALTERNATING
      description: |
        The type of the electric current, direct or alternating.
      enum:
      - DIRECT
      - ALTERNATING
      example: DIRECT
      type: string
      x-enum-varnames:
      - DIRECT
      - ALTERNATING
  securitySchemes:
    apiKeyAuth:
      in: header
      name: apiKey
      type: apiKey
